{"ast":null,"code":"var _jsxFileName = \"/home/kokoi/sol-wager-app/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport idl from \"./idl/typeracer_escrow.json\";\nimport { setProvider } from \"./solana\";\nimport { buildInitializeAndDepositIxns, buildJoinAndDepositIxn, buildCancelIxn, buildResolveIxn } from \"./escrow\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    connection\n  } = useConnection();\n  const wallet = useWallet();\n  const {\n    publicKey,\n    connected\n  } = wallet;\n  const walletAddress = (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) || \"\";\n\n  // Keep a stable ref so our socket callbacks always see the latest wallet\n  const walletAddressRef = useRef(walletAddress);\n  useEffect(() => {\n    walletAddressRef.current = walletAddress;\n  }, [walletAddress]);\n\n  // Anchor provider setup\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\"\n      });\n      anchor.setProvider(prov);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n\n  // Track SOL balance\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then(lamports => {\n        setWalletBalance(lamports / LAMPORTS_PER_SOL);\n      });\n    }\n  }, [connection, publicKey]);\n\n  // Core game state\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n\n  // Race UI state\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // Chat state\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // Anti‑cheat\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // Pick a deterministic sentence per match ID\n  const chooseSentence = id => sentences[Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length];\n\n  // Fetch lobby\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n\n  // Reset UI back to lobby\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // Socket.io setup (once)\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", m => setOpenMatches(os => [...os, m]));\n    socket.on(\"removeMatch\", id => setOpenMatches(os => os.filter(m => m.id !== id)));\n    socket.on(\"startMatch\", ({\n      id,\n      players\n    }) => {\n      if (!currentMatch || currentMatch.id !== id) {\n        setCurrentMatch({\n          id,\n          amount: (currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.amount) || 0,\n          creator: players[0],\n          accepter: players[1]\n        });\n      }\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(id));\n      setCountdown(3);\n      setOpponentWallet(players.find(w => w !== walletAddressRef.current));\n    });\n    socket.on(\"opponentProgress\", ({\n      wallet: w,\n      progress\n    }) => {\n      if (w !== walletAddressRef.current) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({\n      winner,\n      progressMap\n    }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: winner === walletAddressRef.current ? \"win\" : \"lose\"\n      });\n      if (progressMap) {\n        var _progressMap$walletAd, _progressMap$opponent;\n        setPlayerProgress((_progressMap$walletAd = progressMap[walletAddressRef.current]) !== null && _progressMap$walletAd !== void 0 ? _progressMap$walletAd : 0);\n        setOpponentProgress((_progressMap$opponent = progressMap[opponentWallet]) !== null && _progressMap$opponent !== void 0 ? _progressMap$opponent : 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", () => resetGame());\n    fetchOpenMatches();\n    return () => {\n      socket.disconnect();\n      socket.removeAllListeners();\n    };\n  }, []); // ← empty deps so it only runs once\n\n  // Countdown ticker\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown(c => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      var _inputRef$current;\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // ───── CREATE MATCH (client builds PDA & deposits) ───────\n  async function createMatch() {\n    if (!connected) return alert(\"Connect wallet\");\n    try {\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const {\n        ixInit,\n        ixDeposit,\n        escrowPda\n      } = await buildInitializeAndDepositIxns(lamports);\n      // 1) send initialize + deposit from client\n      await wallet.sendTransaction(new Transaction().add(ixInit, ixDeposit), connection);\n\n      // 2) let backend know so it can add it to its in‑memory lobby\n      const id = escrowPda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddressRef.current,\n          feePercent: 5,\n          vault: id\n        })\n      });\n      setCurrentMatch({\n        id,\n        amount: Number(wager),\n        creator: walletAddressRef.current\n      });\n      socket.emit(\"joinMatch\", id);\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"Create error:\", e);\n      alert(\"Create match failed:\\n\" + e.message);\n    }\n  }\n\n  // ───── ACCEPT MATCH ───────────────────────────────────────\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(new PublicKey(m.id));\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(m.id));\n      setCountdown(3);\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          accepter: walletAddressRef.current\n        })\n      });\n      setCurrentMatch({\n        ...m,\n        accepter: walletAddressRef.current\n      });\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"Accept error:\", e);\n      alert(\"Accept error:\\n\" + e.message);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  // ───── CANCEL MATCH ───────────────────────────────────────\n  async function cancelMatch(m) {\n    try {\n      const ix = await buildCancelIxn(new PublicKey(m.id), new PublicKey(m.creator), new PublicKey(m.accepter || m.creator));\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      await fetch(`${API}/wagers/${m.id}/cancel`, {\n        method: \"POST\"\n      });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel error:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n\n  // ───── TYPE INPUT HANDLER ─────────────────────────────────\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddressRef.current,\n      progress: rawProg\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          winner: walletAddressRef.current\n        })\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: \"win\"\n      });\n    }\n  }\n\n  // ───── UI RENDERERS ────────────────────────────────────────\n  const renderMatchmaking = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"matchmaking\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Wager (SOL):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0.01\",\n        step: \"0.01\",\n        value: wager,\n        onChange: e => setWager(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createMatch,\n      disabled: !wager || wager <= 0,\n      children: \"Create Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: 20\n      },\n      children: \"Open Matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), openMatches.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No open matches. Create one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: openMatches.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [m.id.slice(0, 6), \"\\u2026 | \", m.amount, \" SOL\", \" \", m.creator === walletAddressRef.current ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cancelMatch(m),\n          style: {\n            marginLeft: 10\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptMatch(m),\n          disabled: !!currentMatch || isAccepting,\n          style: {\n            marginLeft: 10\n          },\n          children: isAccepting ? \"Accepting…\" : \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 17\n        }, this)]\n      }, m.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n  const renderWaiting = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"waiting-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for opponent\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => cancelMatch(currentMatch),\n      children: \"Cancel Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 5\n  }, this);\n  const renderRace = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"race-section\",\n    children: [matchStatus === \"ready\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Starting in \", countdown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 35\n    }, this), matchStatus === \"racing\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence-display\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInput,\n        onPaste: handleInput,\n        placeholder: \"Start typing\\u2026\",\n        disabled: isInputDisabled,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-player\",\n            style: {\n              left: `${playerProgress * 100}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-opponent\",\n            style: {\n              left: `${opponentProgress * 100}%`\n            },\n            children: \"\\uD83C\\uDFCE\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-win\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\"\n        },\n        children: \"\\uD83C\\uDFC6 You Won!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          try {\n            // 1) Build & send the resolve instruction from the client\n            const ix = await buildResolveIxn(new PublicKey(currentMatch.id), publicKey);\n            const sig = await wallet.sendTransaction(new Transaction().add(ix), connection);\n            await connection.confirmTransaction(sig, \"confirmed\");\n            alert(\"Winnings claimed!\\n\" + sig);\n            resetGame();\n          } catch (e) {\n            console.error(\"Claim error:\", e);\n            alert(\"Payout error:\\n\" + e.message);\n          }\n        },\n        children: \"Claim Winnings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }, this), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"lose\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-lose\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\",\n          color: \"#c0392b\"\n        },\n        children: \"\\uD83D\\uDE22 You Lost!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Better luck next time!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Back to Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 351,\n    columnNumber: 5\n  }, this);\n  const renderChat = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      style: {\n        maxHeight: 150,\n        overflowY: \"auto\"\n      },\n      children: chatMessages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: msg.sender === walletAddressRef.current ? \"self\" : \"other\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender.slice(0, 6), \"\\u2026:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: chatInput,\n      onChange: e => setChatInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && socket.emit(\"message\", {\n        matchId: currentMatch.id,\n        sender: walletAddressRef.current,\n        message: chatInput\n      }) && setChatInput(\"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        socket.emit(\"message\", {\n          matchId: currentMatch.id,\n          sender: walletAddressRef.current,\n          message: chatInput\n        });\n        setChatInput(\"\");\n      },\n      disabled: !chatInput.trim(),\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 425,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Type Racer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this), connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: [walletAddressRef.current.slice(0, 6), \"\\u2026 (\", walletBalance.toFixed(2), \" SOL)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this), !connected && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your wallet to play.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 22\n    }, this), connected && !currentMatch && renderMatchmaking(), connected && currentMatch && matchStatus === \"waiting\" && renderWaiting(), connected && currentMatch && (matchStatus === \"ready\" || matchStatus === \"racing\" || matchStatus === \"finished\") && renderRace(), connected && currentMatch && matchStatus === \"finished\" && renderChat()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 472,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UqIF5a99cXfYySOqS0SQLyAiUlI=\", false, function () {\n  return [useConnection, useWallet];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","sentences","useConnection","useWallet","WalletMultiButton","LAMPORTS_PER_SOL","PublicKey","Transaction","socket","anchor","idl","setProvider","buildInitializeAndDepositIxns","buildJoinAndDepositIxn","buildCancelIxn","buildResolveIxn","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","connection","wallet","publicKey","connected","walletAddress","toBase58","walletAddressRef","current","prov","AnchorProvider","preflightCommitment","commitment","walletBalance","setWalletBalance","getBalance","then","lamports","wager","setWager","openMatches","setOpenMatches","currentMatch","setCurrentMatch","matchStatus","setMatchStatus","sentence","setSentence","inputValue","setInputValue","playerProgress","setPlayerProgress","opponentProgress","setOpponentProgress","countdown","setCountdown","raceResult","setRaceResult","isInputDisabled","setIsInputDisabled","isAccepting","setIsAccepting","opponentWallet","setOpponentWallet","chatMessages","setChatMessages","chatInput","setChatInput","inputRef","API","process","env","REACT_APP_API_URL","lastProgTime","setLastProgTime","Date","now","lastProg","setLastProg","MAX_CPS","chooseSentence","id","Array","from","reduce","a","c","charCodeAt","length","fetchOpenMatches","res","fetch","json","resetGame","connect","on","m","os","filter","players","amount","creator","accepter","find","w","progress","winner","progressMap","result","_progressMap$walletAd","_progressMap$opponent","disconnect","removeAllListeners","t","setTimeout","clearTimeout","_inputRef$current","focus","createMatch","alert","Math","floor","ixInit","ixDeposit","escrowPda","sendTransaction","add","method","headers","body","JSON","stringify","Number","feePercent","vault","emit","e","console","error","message","acceptMatch","ix","cancelMatch","handleInput","type","preventDefault","val","target","value","rawProg","min","deltaProg","deltaTime","chars","cps","matchId","renderMatchmaking","className","children","fileName","_jsxFileName","lineNumber","columnNumber","step","onChange","onClick","disabled","style","marginTop","map","slice","marginLeft","renderWaiting","renderRace","ref","onPaste","placeholder","autoFocus","left","fontSize","sig","confirmTransaction","textAlign","color","renderChat","maxHeight","overflowY","msg","i","sender","onKeyDown","key","trim","toFixed","_c","$RefreshReg$"],"sources":["/home/kokoi/sol-wager-app/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport idl from \"./idl/typeracer_escrow.json\";\nimport { setProvider } from \"./solana\";\nimport {\n  buildInitializeAndDepositIxns,\n  buildJoinAndDepositIxn,\n  buildCancelIxn,\n  buildResolveIxn,\n} from \"./escrow\";\n\nexport default function App() {\n  const { connection } = useConnection();\n  const wallet = useWallet();\n  const { publicKey, connected } = wallet;\n  const walletAddress = publicKey?.toBase58() || \"\";\n\n  // Keep a stable ref so our socket callbacks always see the latest wallet\n  const walletAddressRef = useRef(walletAddress);\n  useEffect(() => {\n    walletAddressRef.current = walletAddress;\n  }, [walletAddress]);\n\n  // Anchor provider setup\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\",\n      });\n      anchor.setProvider(prov);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n\n  // Track SOL balance\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then((lamports) => {\n        setWalletBalance(lamports / LAMPORTS_PER_SOL);\n      });\n    }\n  }, [connection, publicKey]);\n\n  // Core game state\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n\n  // Race UI state\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // Chat state\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // Anti‑cheat\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // Pick a deterministic sentence per match ID\n  const chooseSentence = (id) =>\n    sentences[\n      Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) %\n        sentences.length\n    ];\n\n  // Fetch lobby\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n\n  // Reset UI back to lobby\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // Socket.io setup (once)\n  useEffect(() => {\n    socket.connect();\n\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", (m) => setOpenMatches((os) => [...os, m]));\n    socket.on(\"removeMatch\", (id) =>\n      setOpenMatches((os) => os.filter((m) => m.id !== id))\n    );\n\n    socket.on(\"startMatch\", ({ id, players }) => {\n      if (!currentMatch || currentMatch.id !== id) {\n        setCurrentMatch({\n          id,\n          amount: currentMatch?.amount || 0,\n          creator: players[0],\n          accepter: players[1],\n        });\n      }\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(id));\n      setCountdown(3);\n      setOpponentWallet(players.find((w) => w !== walletAddressRef.current));\n    });\n\n    socket.on(\"opponentProgress\", ({ wallet: w, progress }) => {\n      if (w !== walletAddressRef.current) setOpponentProgress(progress);\n    });\n\n    socket.on(\"raceEnd\", ({ winner, progressMap }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: winner === walletAddressRef.current ? \"win\" : \"lose\",\n      });\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddressRef.current] ?? 0);\n        setOpponentProgress(progressMap[opponentWallet] ?? 0);\n      }\n    });\n\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", () => resetGame());\n\n    fetchOpenMatches();\n\n    return () => {\n      socket.disconnect();\n      socket.removeAllListeners();\n    };\n  }, []); // ← empty deps so it only runs once\n\n  // Countdown ticker\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown((c) => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      inputRef.current?.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // ───── CREATE MATCH (client builds PDA & deposits) ───────\n  async function createMatch() {\n    if (!connected) return alert(\"Connect wallet\");\n    try {\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const { ixInit, ixDeposit, escrowPda } =\n        await buildInitializeAndDepositIxns(lamports);\n      // 1) send initialize + deposit from client\n      await wallet.sendTransaction(\n        new Transaction().add(ixInit, ixDeposit),\n        connection\n      );\n\n      // 2) let backend know so it can add it to its in‑memory lobby\n      const id = escrowPda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddressRef.current,\n          feePercent: 5,\n          vault: id,\n        }),\n      });\n\n      setCurrentMatch({ id, amount: Number(wager), creator: walletAddressRef.current });\n      socket.emit(\"joinMatch\", id);\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"Create error:\", e);\n      alert(\"Create match failed:\\n\" + e.message);\n    }\n  }\n\n  // ───── ACCEPT MATCH ───────────────────────────────────────\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(new PublicKey(m.id));\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(m.id));\n      setCountdown(3);\n\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ accepter: walletAddressRef.current }),\n      });\n      setCurrentMatch({ ...m, accepter: walletAddressRef.current });\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"Accept error:\", e);\n      alert(\"Accept error:\\n\" + e.message);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  // ───── CANCEL MATCH ───────────────────────────────────────\n  async function cancelMatch(m) {\n    try {\n      const ix = await buildCancelIxn(\n        new PublicKey(m.id),\n        new PublicKey(m.creator),\n        new PublicKey(m.accepter || m.creator)\n      );\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      await fetch(`${API}/wagers/${m.id}/cancel`, { method: \"POST\" });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel error:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n\n  // ───── TYPE INPUT HANDLER ─────────────────────────────────\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddressRef.current,\n      progress: rawProg,\n    });\n\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ winner: walletAddressRef.current }),\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: \"win\" });\n    }\n  }\n\n  // ───── UI RENDERERS ────────────────────────────────────────\n  const renderMatchmaking = () => (\n    <section className=\"matchmaking\">\n      <h2>Create a Match</h2>\n      <label>\n        Wager (SOL):\n        <input\n          type=\"number\"\n          min=\"0.01\"\n          step=\"0.01\"\n          value={wager}\n          onChange={(e) => setWager(Number(e.target.value))}\n        />\n      </label>\n      <button onClick={createMatch} disabled={!wager || wager <= 0}>\n        Create Match\n      </button>\n\n      <h2 style={{ marginTop: 20 }}>Open Matches</h2>\n      {openMatches.length === 0 ? (\n        <p>No open matches. Create one!</p>\n      ) : (\n        <ul>\n          {openMatches.map((m) => (\n            <li key={m.id}>\n              {m.id.slice(0, 6)}… | {m.amount} SOL{\" \"}\n              {m.creator === walletAddressRef.current ? (\n                <button onClick={() => cancelMatch(m)} style={{ marginLeft: 10 }}>\n                  Cancel\n                </button>\n              ) : (\n                <button\n                  onClick={() => acceptMatch(m)}\n                  disabled={!!currentMatch || isAccepting}\n                  style={{ marginLeft: 10 }}\n                >\n                  {isAccepting ? \"Accepting…\" : \"Accept\"}\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </section>\n  );\n\n  const renderWaiting = () => (\n    <section className=\"waiting-section\">\n      <h2>Waiting for opponent…</h2>\n      <button onClick={() => cancelMatch(currentMatch)}>Cancel Match</button>\n    </section>\n  );\n\n  const renderRace = () => (\n    <section className=\"race-section\">\n      {matchStatus === \"ready\" && <h2>Starting in {countdown}</h2>}\n      {matchStatus === \"racing\" && (\n        <>\n          <div className=\"sentence-display\">{sentence}</div>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInput}\n            onPaste={handleInput}\n            placeholder=\"Start typing…\"\n            disabled={isInputDisabled}\n            autoFocus\n          />\n          <div className=\"track\">\n            <div className=\"lane\">\n              <div\n                className=\"car car-player\"\n                style={{ left: `${playerProgress * 100}%` }}\n              >\n                🚗\n              </div>\n            </div>\n            <div className=\"lane\">\n              <div\n                className=\"car car-opponent\"\n                style={{ left: `${opponentProgress * 100}%` }}\n              >\n                🏎️\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"win\" && (\n        <div className=\"results results-win\">\n          <h2 style={{ fontSize: \"2rem\" }}>🏆 You Won!</h2>\n          <button\n            onClick={async () => {\n              try {\n                // 1) Build & send the resolve instruction from the client\n                const ix = await buildResolveIxn(\n                  new PublicKey(currentMatch.id),\n                  publicKey\n                );\n                const sig = await wallet.sendTransaction(\n                  new Transaction().add(ix),\n                  connection\n                );\n                await connection.confirmTransaction(sig, \"confirmed\");\n                alert(\"Winnings claimed!\\n\" + sig);\n                resetGame();\n              } catch (e) {\n                console.error(\"Claim error:\", e);\n                alert(\"Payout error:\\n\" + e.message);\n              }\n            }}\n          >\n            Claim Winnings\n          </button>\n        </div>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"lose\" && (\n        <div className=\"results results-lose\" style={{ textAlign: \"center\" }}>\n          <h2 style={{ fontSize: \"2rem\", color: \"#c0392b\" }}>😢 You Lost!</h2>\n          <p>Better luck next time!</p>\n          <button onClick={resetGame}>Back to Matches</button>\n        </div>\n      )}\n    </section>\n  );\n\n  const renderChat = () => (\n    <section className=\"chat-section\">\n      <h2>Chat</h2>\n      <div\n        className=\"chat-messages\"\n        style={{ maxHeight: 150, overflowY: \"auto\" }}\n      >\n        {chatMessages.map((msg, i) => (\n          <p\n            key={i}\n            className={\n              msg.sender === walletAddressRef.current ? \"self\" : \"other\"\n            }\n          >\n            <strong>{msg.sender.slice(0, 6)}…:</strong> {msg.message}\n          </p>\n        ))}\n      </div>\n      <input\n        value={chatInput}\n        onChange={(e) => setChatInput(e.target.value)}\n        onKeyDown={(e) =>\n          e.key === \"Enter\" &&\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddressRef.current,\n            message: chatInput,\n          }) &&\n          setChatInput(\"\")\n        }\n      />\n      <button\n        onClick={() => {\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddressRef.current,\n            message: chatInput,\n          });\n          setChatInput(\"\");\n        }}\n        disabled={!chatInput.trim()}\n      >\n        Send\n      </button>\n    </section>\n  );\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Type Racer</h1>\n        {connected ? (\n          <div className=\"wallet-info\">\n            {walletAddressRef.current.slice(0, 6)}… (\n            {walletBalance.toFixed(2)} SOL)\n          </div>\n        ) : (\n          <WalletMultiButton />\n        )}\n      </header>\n\n      {!connected && <p>Please connect your wallet to play.</p>}\n      {connected && !currentMatch && renderMatchmaking()}\n      {connected && currentMatch && matchStatus === \"waiting\" && renderWaiting()}\n      {connected &&\n        currentMatch &&\n        (matchStatus === \"ready\" ||\n          matchStatus === \"racing\" ||\n          matchStatus === \"finished\") &&\n        renderRace()}\n      {connected && currentMatch && matchStatus === \"finished\" && renderChat()}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}