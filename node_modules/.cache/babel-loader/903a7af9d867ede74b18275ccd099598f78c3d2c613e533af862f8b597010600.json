{"ast":null,"code":"var _jsxFileName = \"/home/kokoi/sol-wager-app/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport { setProvider } from \"./solana\";\nimport { buildInitializeAndDepositIxns, buildJoinAndDepositIxn, buildCancelIxn, buildResolveIxn } from \"./escrow\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    connection\n  } = useConnection();\n  const wallet = useWallet();\n  const {\n    publicKey,\n    connected\n  } = wallet;\n  const walletAddress = (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) || \"\";\n  const walletAddressRef = useRef(walletAddress);\n  useEffect(() => {\n    walletAddressRef.current = walletAddress;\n  }, [walletAddress]);\n  useEffect(() => {\n    if (connected && connection) {\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then(lamports => {\n        setWalletBalance(lamports / LAMPORTS_PER_SOL);\n      });\n    }\n  }, [connection, publicKey]);\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", m => setOpenMatches(os => [...os, m]));\n    socket.on(\"removeMatch\", id => setOpenMatches(os => os.filter(m => m.id !== id)));\n    socket.on(\"startMatch\", ({\n      id,\n      players\n    }) => {\n      setCurrentMatch({\n        id,\n        amount: (currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.amount) || 0,\n        creator: players[0],\n        accepter: players[1]\n      });\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(id));\n      setCountdown(3);\n      setOpponentWallet(players.find(w => w !== walletAddressRef.current));\n    });\n    socket.on(\"opponentProgress\", ({\n      wallet: w,\n      progress\n    }) => {\n      if (w !== walletAddressRef.current) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({\n      winner,\n      progressMap\n    }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: winner === walletAddressRef.current ? \"win\" : \"lose\"\n      });\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddressRef.current] || 0);\n        setOpponentProgress(progressMap[opponentWallet] || 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", () => resetGame());\n    fetchOpenMatches();\n    return () => {\n      socket.disconnect();\n      socket.removeAllListeners();\n    };\n  }, [walletAddress, currentMatch, opponentWallet]);\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown(c => c - 1), 1000);\n      return () => clearTimeout(t);\n    }\n    if (matchStatus === \"ready\" && countdown === 0) {\n      var _inputRef$current;\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [countdown, matchStatus]);\n  function chooseSentence(id) {\n    return sentences[Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length];\n  }\n  async function fetchOpenMatches() {\n    const res = await fetch(`${API}/wagers`);\n    setOpenMatches(await res.json());\n  }\n  function resetGame() {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  }\n  async function createMatch() {\n    if (!connected) return alert(\"Connect wallet\");\n    try {\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const nonce = Math.floor(Math.random() * 1e6);\n      const {\n        ixInit,\n        ixDeposit,\n        escrowPda\n      } = await buildInitializeAndDepositIxns(lamports, publicKey, nonce);\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      const sig = await wallet.sendTransaction(tx, connection);\n      await connection.confirmTransaction(sig, \"confirmed\");\n      const id = escrowPda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddress,\n          feePercent: 5,\n          vault: id,\n          nonce\n        })\n      });\n      setCurrentMatch({\n        id,\n        amount: Number(wager),\n        creator: walletAddress,\n        nonce\n      });\n      socket.emit(\"joinMatch\", id);\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"Create error:\", e);\n      alert(\"Create match failed:\\n\" + e.message);\n    }\n  }\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(new PublicKey(m.id));\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(m.id));\n      setCountdown(3);\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          accepter: walletAddressRef.current,\n          vault: m.id\n        })\n      });\n      setCurrentMatch({\n        ...m,\n        accepter: walletAddressRef.current\n      });\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"Accept error:\", e);\n      alert(\"Accept error:\\n\" + e.message);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n  async function cancelMatch(m) {\n    try {\n      const escrowPda = new PublicKey(m.id);\n      const ix = buildCancelIxn(escrowPda, publicKey, new PublicKey(m.accepter || m.creator));\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      await fetch(`${API}/wagers/${m.id}/cancel`, {\n        method: \"POST\"\n      });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel error:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg++);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddressRef.current,\n      progress: rawProg\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          winner: walletAddressRef.current\n        })\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: \"win\"\n      });\n    }\n  }\n  const renderMatchmaking = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"matchmaking\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Wager (SOL):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0.01\",\n        step: \"0.01\",\n        value: wager,\n        onChange: e => setWager(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createMatch,\n      disabled: !wager || wager <= 0,\n      children: \"Create Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: 20\n      },\n      children: \"Open Matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), openMatches.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No open matches. Create one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: openMatches.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [m.id.slice(0, 6), \"\\u2026 | \", m.amount, \" SOL\", \" \", m.creator === walletAddress ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cancelMatch(m),\n          style: {\n            marginLeft: 10\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptMatch(m),\n          disabled: !!currentMatch || isAccepting,\n          style: {\n            marginLeft: 10\n          },\n          children: isAccepting ? \"Accepting…\" : \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 17\n        }, this)]\n      }, m.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n  const renderWaiting = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"waiting-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for opponent\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => cancelMatch(currentMatch),\n      children: \"Cancel Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 5\n  }, this);\n  const renderRace = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"race-section\",\n    children: [matchStatus === \"ready\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Starting in \", countdown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 35\n    }, this), matchStatus === \"racing\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence-display\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInput,\n        onPaste: handleInput,\n        placeholder: \"Start typing\\u2026\",\n        disabled: isInputDisabled,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-player\",\n            style: {\n              left: `${playerProgress * 100}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-opponent\",\n            style: {\n              left: `${opponentProgress * 100}%`\n            },\n            children: \"\\uD83C\\uDFCE\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-win\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\"\n        },\n        children: \"\\uD83C\\uDFC6 You Won!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          try {\n            const ix = await buildResolveIxn(new PublicKey(currentMatch.id), publicKey);\n            const tx = new Transaction().add(ix);\n            const sig = await wallet.sendTransaction(tx, connection);\n            await connection.confirmTransaction(sig, \"confirmed\");\n            resetGame();\n          } catch (e) {\n            console.error(\"Resolve error:\", e);\n            alert(\"Payout error:\\n\" + e.message);\n          }\n        },\n        children: \"Claim Winnings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }, this), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"lose\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-lose\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\",\n          color: \"#c0392b\"\n        },\n        children: \"\\uD83D\\uDE22 You Lost!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Better luck next time!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Back to Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n  const renderChat = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      style: {\n        maxHeight: 150,\n        overflowY: \"auto\"\n      },\n      children: chatMessages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: msg.sender === walletAddressRef.current ? \"self\" : \"other\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender.slice(0, 6), \"\\u2026:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: chatInput,\n      onChange: e => setChatInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && socket.emit(\"message\", {\n        matchId: currentMatch.id,\n        sender: walletAddressRef.current,\n        message: chatInput\n      }) && setChatInput(\"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        socket.emit(\"message\", {\n          matchId: currentMatch.id,\n          sender: walletAddressRef.current,\n          message: chatInput\n        });\n        setChatInput(\"\");\n      },\n      disabled: !chatInput.trim(),\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 398,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Type Racer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: [walletAddress.slice(0, 6), \"\\u2026 (\", walletBalance.toFixed(2), \" SOL)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), !connected && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your wallet to play.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 22\n    }, this), connected && !currentMatch && renderMatchmaking(), connected && currentMatch && matchStatus === \"waiting\" && renderWaiting(), connected && currentMatch && [\"ready\", \"racing\", \"finished\"].includes(matchStatus) && renderRace(), connected && currentMatch && matchStatus === \"finished\" && renderChat()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 445,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UqIF5a99cXfYySOqS0SQLyAiUlI=\", false, function () {\n  return [useConnection, useWallet];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","sentences","useConnection","useWallet","WalletMultiButton","LAMPORTS_PER_SOL","PublicKey","Transaction","socket","setProvider","buildInitializeAndDepositIxns","buildJoinAndDepositIxn","buildCancelIxn","buildResolveIxn","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","connection","wallet","publicKey","connected","walletAddress","toBase58","walletAddressRef","current","walletBalance","setWalletBalance","getBalance","then","lamports","wager","setWager","openMatches","setOpenMatches","currentMatch","setCurrentMatch","matchStatus","setMatchStatus","sentence","setSentence","inputValue","setInputValue","playerProgress","setPlayerProgress","opponentProgress","setOpponentProgress","countdown","setCountdown","raceResult","setRaceResult","isInputDisabled","setIsInputDisabled","isAccepting","setIsAccepting","opponentWallet","setOpponentWallet","chatMessages","setChatMessages","chatInput","setChatInput","inputRef","API","process","env","REACT_APP_API_URL","lastProgTime","setLastProgTime","Date","now","lastProg","setLastProg","MAX_CPS","connect","on","m","os","id","filter","players","amount","creator","accepter","chooseSentence","find","w","progress","winner","progressMap","result","resetGame","fetchOpenMatches","disconnect","removeAllListeners","t","setTimeout","c","clearTimeout","_inputRef$current","focus","Array","from","reduce","a","charCodeAt","length","res","fetch","json","createMatch","alert","Math","floor","nonce","random","ixInit","ixDeposit","escrowPda","tx","add","sig","sendTransaction","confirmTransaction","method","headers","body","JSON","stringify","Number","feePercent","vault","emit","e","console","error","message","acceptMatch","ix","cancelMatch","handleInput","type","preventDefault","val","target","value","rawProg","min","deltaProg","deltaTime","chars","cps","matchId","renderMatchmaking","className","children","fileName","_jsxFileName","lineNumber","columnNumber","step","onChange","onClick","disabled","style","marginTop","map","slice","marginLeft","renderWaiting","renderRace","ref","onPaste","placeholder","autoFocus","left","fontSize","textAlign","color","renderChat","maxHeight","overflowY","msg","i","sender","onKeyDown","key","trim","toFixed","includes","_c","$RefreshReg$"],"sources":["/home/kokoi/sol-wager-app/frontend/src/App.jsx"],"sourcesContent":["// frontend/src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport {\n  LAMPORTS_PER_SOL,\n  PublicKey,\n  Transaction,\n} from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport { setProvider } from \"./solana\";\nimport {\n  buildInitializeAndDepositIxns,\n  buildJoinAndDepositIxn,\n  buildCancelIxn,\n  buildResolveIxn,\n} from \"./escrow\";\n\nexport default function App() {\n  const { connection } = useConnection();\n  const wallet = useWallet();\n  const { publicKey, connected } = wallet;\n  const walletAddress = publicKey?.toBase58() || \"\";\n\n  const walletAddressRef = useRef(walletAddress);\n  useEffect(() => {\n    walletAddressRef.current = walletAddress;\n  }, [walletAddress]);\n\n  useEffect(() => {\n    if (connected && connection) {\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then((lamports) => {\n        setWalletBalance(lamports / LAMPORTS_PER_SOL);\n      });\n    }\n  }, [connection, publicKey]);\n\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n\n  const API = process.env.REACT_APP_API_URL;\n\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", (m) => setOpenMatches((os) => [...os, m]));\n    socket.on(\"removeMatch\", (id) =>\n      setOpenMatches((os) => os.filter((m) => m.id !== id))\n    );\n    socket.on(\"startMatch\", ({ id, players }) => {\n      setCurrentMatch({\n        id,\n        amount: currentMatch?.amount || 0,\n        creator: players[0],\n        accepter: players[1],\n      });\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(id));\n      setCountdown(3);\n      setOpponentWallet(\n        players.find((w) => w !== walletAddressRef.current)\n      );\n    });\n    socket.on(\"opponentProgress\", ({ wallet: w, progress }) => {\n      if (w !== walletAddressRef.current) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({ winner, progressMap }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: winner === walletAddressRef.current ? \"win\" : \"lose\",\n      });\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddressRef.current] || 0);\n        setOpponentProgress(progressMap[opponentWallet] || 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", () => resetGame());\n    fetchOpenMatches();\n    return () => {\n      socket.disconnect();\n      socket.removeAllListeners();\n    };\n  }, [walletAddress, currentMatch, opponentWallet]);\n\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown((c) => c - 1), 1000);\n      return () => clearTimeout(t);\n    }\n    if (matchStatus === \"ready\" && countdown === 0) {\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      inputRef.current?.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  function chooseSentence(id) {\n    return sentences[\n      Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) %\n        sentences.length\n    ];\n  }\n\n  async function fetchOpenMatches() {\n    const res = await fetch(`${API}/wagers`);\n    setOpenMatches(await res.json());\n  }\n\n  function resetGame() {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  }\n\n  async function createMatch() {\n    if (!connected) return alert(\"Connect wallet\");\n    try {\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const nonce = Math.floor(Math.random() * 1e6);\n      const { ixInit, ixDeposit, escrowPda } =\n        await buildInitializeAndDepositIxns(\n          lamports,\n          publicKey,\n          nonce\n        );\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      const sig = await wallet.sendTransaction(tx, connection);\n      await connection.confirmTransaction(sig, \"confirmed\");\n      const id = escrowPda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddress,\n          feePercent: 5,\n          vault: id,\n          nonce,\n        }),\n      });\n      setCurrentMatch({ id, amount: Number(wager), creator: walletAddress, nonce });\n      socket.emit(\"joinMatch\", id);\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"Create error:\", e);\n      alert(\"Create match failed:\\n\" + e.message);\n    }\n  }\n\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(new PublicKey(m.id));\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(m.id));\n      setCountdown(3);\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          accepter: walletAddressRef.current,\n          vault: m.id,\n        }),\n      });\n      setCurrentMatch({ ...m, accepter: walletAddressRef.current });\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"Accept error:\", e);\n      alert(\"Accept error:\\n\" + e.message);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  async function cancelMatch(m) {\n    try {\n      const escrowPda = new PublicKey(m.id);\n      const ix = buildCancelIxn(\n        escrowPda,\n        publicKey,\n        new PublicKey(m.accepter || m.creator)\n      );\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      await fetch(`${API}/wagers/${m.id}/cancel`, { method: \"POST\" });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel error:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg++);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddressRef.current,\n      progress: rawProg,\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ winner: walletAddressRef.current }),\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: \"win\" });\n    }\n  }\n\n  const renderMatchmaking = () => (\n    <section className=\"matchmaking\">\n      <h2>Create a Match</h2>\n      <label>\n        Wager (SOL):\n        <input\n          type=\"number\"\n          min=\"0.01\"\n          step=\"0.01\"\n          value={wager}\n          onChange={(e) => setWager(Number(e.target.value))}\n        />\n      </label>\n      <button onClick={createMatch} disabled={!wager || wager <= 0}>\n        Create Match\n      </button>\n      <h2 style={{ marginTop: 20 }}>Open Matches</h2>\n      {openMatches.length === 0 ? (\n        <p>No open matches. Create one!</p>\n      ) : (\n        <ul>\n          {openMatches.map((m) => (\n            <li key={m.id}>\n              {m.id.slice(0, 6)}… | {m.amount} SOL{\" \"}\n              {m.creator === walletAddress ? (\n                <button\n                  onClick={() => cancelMatch(m)}\n                  style={{ marginLeft: 10 }}\n                >\n                  Cancel\n                </button>\n              ) : (\n                <button\n                  onClick={() => acceptMatch(m)}\n                  disabled={!!currentMatch || isAccepting}\n                  style={{ marginLeft: 10 }}\n                >\n                  {isAccepting ? \"Accepting…\" : \"Accept\"}\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </section>\n  );\n\n  const renderWaiting = () => (\n    <section className=\"waiting-section\">\n      <h2>Waiting for opponent…</h2>\n      <button onClick={() => cancelMatch(currentMatch)}>Cancel Match</button>\n    </section>\n  );\n\n  const renderRace = () => (\n    <section className=\"race-section\">\n      {matchStatus === \"ready\" && <h2>Starting in {countdown}</h2>}\n      {matchStatus === \"racing\" && (\n        <>\n          <div className=\"sentence-display\">{sentence}</div>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInput}\n            onPaste={handleInput}\n            placeholder=\"Start typing…\"\n            disabled={isInputDisabled}\n            autoFocus\n          />\n          <div className=\"track\">\n            <div className=\"lane\">\n              <div\n                className=\"car car-player\"\n                style={{ left: `${playerProgress * 100}%` }}\n              >\n                🚗\n              </div>\n            </div>\n            <div className=\"lane\">\n              <div\n                className=\"car car-opponent\"\n                style={{ left: `${opponentProgress * 100}%` }}\n              >\n                🏎️\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"win\" && (\n        <div className=\"results results-win\">\n          <h2 style={{ fontSize: \"2rem\" }}>🏆 You Won!</h2>\n          <button\n            onClick={async () => {\n              try {\n                const ix = await buildResolveIxn(\n                  new PublicKey(currentMatch.id),\n                  publicKey\n                );\n                const tx = new Transaction().add(ix);\n                const sig = await wallet.sendTransaction(tx, connection);\n                await connection.confirmTransaction(sig, \"confirmed\");\n                resetGame();\n              } catch (e) {\n                console.error(\"Resolve error:\", e);\n                alert(\"Payout error:\\n\" + e.message);\n              }\n            }}\n          >\n            Claim Winnings\n          </button>\n        </div>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"lose\" && (\n        <div className=\"results results-lose\" style={{ textAlign: \"center\" }}>\n          <h2 style={{ fontSize: \"2rem\", color: \"#c0392b\" }}>😢 You Lost!</h2>\n          <p>Better luck next time!</p>\n          <button onClick={resetGame}>Back to Matches</button>\n        </div>\n      )}\n    </section>\n  );\n\n  const renderChat = () => (\n    <section className=\"chat-section\">\n      <h2>Chat</h2>\n      <div\n        className=\"chat-messages\"\n        style={{ maxHeight: 150, overflowY: \"auto\" }}\n      >\n        {chatMessages.map((msg, i) => (\n          <p\n            key={i}\n            className={\n              msg.sender === walletAddressRef.current ? \"self\" : \"other\"\n            }\n          >\n            <strong>{msg.sender.slice(0, 6)}…:</strong> {msg.message}\n          </p>\n        ))}\n      </div>\n      <input\n        value={chatInput}\n        onChange={(e) => setChatInput(e.target.value)}\n        onKeyDown={(e) =>\n          e.key === \"Enter\" &&\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddressRef.current,\n            message: chatInput,\n          }) &&\n          setChatInput(\"\")\n        }\n      />\n      <button\n        onClick={() => {\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddressRef.current,\n            message: chatInput,\n          });\n          setChatInput(\"\");\n        }}\n        disabled={!chatInput.trim()}\n      >\n        Send\n      </button>\n    </section>\n  );\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Type Racer</h1>\n        {connected ? (\n          <div className=\"wallet-info\">\n            {walletAddress.slice(0, 6)}… ({walletBalance.toFixed(2)} SOL)\n          </div>\n        ) : (\n          <WalletMultiButton />\n        )}\n      </header>\n      {!connected && <p>Please connect your wallet to play.</p>}\n      {connected && !currentMatch && renderMatchmaking()}\n      {connected && currentMatch && matchStatus === \"waiting\" && renderWaiting()}\n      {connected &&\n        currentMatch &&\n        ([\"ready\", \"racing\", \"finished\"].includes(matchStatus) && renderRace())}\n      {connected && currentMatch && matchStatus === \"finished\" && renderChat()}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}