{"ast":null,"code":"var _jsxFileName = \"/home/kokoi/sol-wager-app/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/App.jsx\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { WalletMultiButton, useWallet } from \"@solana/wallet-adapter-react-ui\";\nimport { Connection, LAMPORTS_PER_SOL, PublicKey } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport { setProvider } from \"./solana\";\nimport { initializeEscrow, joinEscrow, depositToEscrow, resolveEscrow, cancelEscrow } from \"./escrow\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const wallet = useWallet();\n  const {\n    publicKey,\n    connected\n  } = wallet;\n  const walletConnected = connected;\n  const walletAddress = (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) || \"\";\n\n  // 1) Anchor provider setup once wallet connects\n  useEffect(() => {\n    if (connected) setProvider(wallet);\n  }, [connected, wallet]);\n\n  // 2) Track SOL balance\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (!publicKey) return;\n    const rpc = process.env.REACT_APP_SOLANA_RPC;\n    const conn = new Connection(rpc, \"confirmed\");\n    conn.getBalance(publicKey).then(lamports => setWalletBalance(lamports / LAMPORTS_PER_SOL)).catch(err => {\n      console.warn(\"Could not fetch wallet balance:\", err);\n      setWalletBalance(0);\n    });\n  }, [publicKey]);\n\n  // 3) Game & match state\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [escrowPda, setEscrowPda] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\"); // waiting|ready|racing|finished\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null); // {result:\"win\"|\"lose\"}\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // Chat\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // Anti‑cheat state\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20; // max characters per second\n\n  // --- Socket.IO integration ---\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", ms => setOpenMatches(ms));\n    socket.on(\"newMatch\", m => setOpenMatches(os => [...os, m]));\n    socket.on(\"removeMatch\", id => setOpenMatches(os => os.filter(m => m.id !== id)));\n    socket.on(\"startMatch\", ({\n      id,\n      players\n    }) => {\n      if ((currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.id) === id) {\n        setMatchStatus(\"ready\");\n        setSentence(chooseSentence(id));\n        setCountdown(3);\n        setOpponentWallet(players.find(w => w !== walletAddress));\n      }\n    });\n    socket.on(\"opponentProgress\", ({\n      wallet: w,\n      progress\n    }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({\n      winner,\n      progressMap\n    }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: winner === walletAddress ? \"win\" : \"lose\"\n      });\n      if (progressMap) {\n        var _progressMap$walletAd, _progressMap$opponent;\n        setPlayerProgress((_progressMap$walletAd = progressMap[walletAddress]) !== null && _progressMap$walletAd !== void 0 ? _progressMap$walletAd : 0);\n        setOpponentProgress((_progressMap$opponent = progressMap[opponentWallet]) !== null && _progressMap$opponent !== void 0 ? _progressMap$opponent : 0);\n      }\n    });\n    socket.on(\"chat\", msgs => setChatMessages(msgs));\n    socket.on(\"opponentLeft\", async () => {\n      // Auto-claim if we won\n      if (matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && currentMatch !== null && currentMatch !== void 0 && currentMatch.id) {\n        try {\n          await resolveEscrow(new PublicKey(currentMatch.id), publicKey);\n        } catch (e) {\n          console.error(\"Auto-claim failed:\", e);\n        }\n      }\n      resetGame();\n    });\n    return () => socket.removeAllListeners();\n  }, [currentMatch, walletAddress, opponentWallet, matchStatus, raceResult, publicKey]);\n\n  // --- Countdown → racing transition ---\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown(c => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      var _inputRef$current;\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // --- Helpers ---\n  const chooseSentence = id => {\n    const sum = Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0);\n    return sentences[sum % sentences.length];\n  };\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setEscrowPda(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // --- 1) Create match (INSTANT CONTINUE, IGNORE TIMEOUT) ---\n  const createMatch = async () => {\n    if (!walletConnected) return alert(\"Connect wallet\");\n    const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n    let pda = null;\n    try {\n      console.log(\"createMatch invoked, about to call initializeEscrow\");\n      pda = await initializeEscrow(lamports);\n      setEscrowPda(pda);\n\n      // Continue immediately, without waiting for confirmation\n      const id = pda.toBase58();\n\n      // Fire and forget deposit\n      depositToEscrow(pda).catch(e => {\n        if (!(e.message && (e.message.includes(\"not confirmed in 30.00 seconds\") || e.message.includes(\"Transaction was not confirmed\")))) {\n          console.error(\"depositToEscrow failed:\", e);\n          alert(`Deposit failed:\\n${e.message || e}`);\n        }\n        // else: silently ignore \"not confirmed\" errors\n      });\n\n      // Fire and forget wager creation\n      fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddress,\n          feePercent: 5\n        })\n      }).catch(e => {\n        console.error(\"Failed to notify backend:\", e);\n      });\n      setCurrentMatch({\n        id,\n        amount: Number(wager),\n        creator: walletAddress\n      });\n      socket.emit(\"joinMatch\", id);\n      // Done! Immediately transition to waiting for opponent.\n    } catch (e) {\n      // Only throw real errors, always suppress timeout\n      if (e.message && (e.message.includes(\"not confirmed in 30.00 seconds\") || e.message.includes(\"Transaction was not confirmed\"))) {\n        console.warn(\"Timeout error suppressed, continuing anyway.\", e);\n        if (pda) {\n          const id = pda.toBase58();\n          setCurrentMatch({\n            id,\n            amount: Number(wager),\n            creator: walletAddress\n          });\n          socket.emit(\"joinMatch\", id);\n        }\n        return;\n      }\n      console.error(\"createMatch failed:\", e);\n      alert(`Failed to create match:\\n${e.message || e}`);\n    }\n  };\n\n  // --- 2) Accept match ---\n  const acceptMatch = async m => {\n    if (!walletConnected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    const pda = new PublicKey(m.id);\n    setEscrowPda(pda);\n\n    // join room & set early\n    socket.emit(\"joinMatch\", m.id);\n    setCurrentMatch({\n      ...m,\n      accepter: walletAddress\n    });\n    try {\n      try {\n        await joinEscrow(pda);\n      } catch (err) {\n        if (!err.message.includes(\"already been processed\")) throw err;\n      }\n      await new Promise(r => setTimeout(r, 1000));\n      try {\n        await depositToEscrow(pda);\n      } catch (err) {\n        if (!err.message.includes(\"already been processed\")) throw err;\n      }\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          accepter: walletAddress\n        })\n      });\n    } catch (e) {\n      console.error(\"acceptMatch failed:\", e);\n      alert(`Failed to accept match:\\n${e.message || e}`);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  };\n\n  // --- 3) Cancel match ---\n  const cancelMatch = async m => {\n    try {\n      await cancelEscrow(new PublicKey(m.id), new PublicKey(m.creator), new PublicKey(m.accepter || m.creator));\n      await fetch(`${API}/wagers/${m.id}/cancel`, {\n        method: \"POST\"\n      });\n      resetGame();\n    } catch (e) {\n      console.error(\"cancelMatch failed:\", e);\n      alert(`Failed to cancel match:\\n${e.message || e}`);\n    }\n  };\n\n  // --- 4) Typing & anti‑cheat progress validator ---\n  const handleInput = e => {\n    if (isInputDisabled) return;\n\n    // block paste\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) {\n      // too fast, ignore\n      return;\n    }\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: rawProg\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          winner: walletAddress\n        })\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: \"win\"\n      });\n    }\n  };\n\n  // --- UI Renderers ---\n  const renderMatchmaking = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"matchmaking\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Wager (SOL):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0.01\",\n        step: \"0.01\",\n        value: wager,\n        onChange: e => setWager(e.target.value),\n        disabled: !!currentMatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createMatch,\n      disabled: !wager || wager <= 0 || !!currentMatch,\n      children: \"Create Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: 20\n      },\n      children: \"Open Matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), openMatches.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No open matches. Create one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: openMatches.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [m.id.slice(0, 6), \"\\u2026 | \", m.amount, \" SOL\", \" \", m.creator === walletAddress ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cancelMatch(m),\n          style: {\n            marginLeft: 10\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptMatch(m),\n          disabled: !!currentMatch || isAccepting,\n          style: {\n            marginLeft: 10\n          },\n          children: isAccepting ? \"Accepting…\" : \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 17\n        }, this)]\n      }, m.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 340,\n    columnNumber: 5\n  }, this);\n  const renderWaiting = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"waiting-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for opponent\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => cancelMatch(currentMatch),\n      children: \"Cancel Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 390,\n    columnNumber: 5\n  }, this);\n  const renderRace = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"race-section\",\n    children: [matchStatus === \"ready\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Starting in \", countdown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 35\n    }, this), matchStatus === \"racing\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence-display\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInput,\n        onPaste: handleInput,\n        placeholder: \"Start typing\\u2026\",\n        disabled: isInputDisabled,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-player\",\n            style: {\n              left: `${playerProgress * 100}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-opponent\",\n            style: {\n              left: `${opponentProgress * 100}%`\n            },\n            children: \"\\uD83C\\uDFCE\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-win\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\"\n        },\n        children: \"\\uD83C\\uDFC6 You Won!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          try {\n            await resolveEscrow(new PublicKey(currentMatch.id), publicKey);\n            resetGame();\n          } catch (e) {\n            console.error(e);\n            alert(\"Payout error: \" + (e.message || e));\n          }\n        },\n        children: \"Claim Winnings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 9\n    }, this), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"lose\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-lose\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\",\n          color: \"#c0392b\"\n        },\n        children: \"\\uD83D\\uDE22 You Lost!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Better luck next time!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Back to Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 396,\n    columnNumber: 5\n  }, this);\n  const renderChat = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      style: {\n        maxHeight: 150,\n        overflowY: \"auto\"\n      },\n      children: chatMessages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: msg.sender === walletAddress ? \"self\" : \"other\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender.slice(0, 6), \"\\u2026:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: chatInput,\n      onChange: e => setChatInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && socket.emit(\"message\", {\n        matchId: currentMatch.id,\n        sender: walletAddress,\n        message: chatInput\n      }) && setChatInput(\"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        socket.emit(\"message\", {\n          matchId: currentMatch.id,\n          sender: walletAddress,\n          message: chatInput\n        });\n        setChatInput(\"\");\n      },\n      disabled: !chatInput.trim(),\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 462,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Type Racer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this), walletConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: [walletAddress.slice(0, 6), \"\\u2026 (\", walletBalance.toFixed(2), \" SOL)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this), !walletConnected && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your wallet to play.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 28\n    }, this), walletConnected && !currentMatch && renderMatchmaking(), walletConnected && currentMatch && matchStatus === \"waiting\" && renderWaiting(), walletConnected && currentMatch && (matchStatus === \"ready\" || matchStatus === \"racing\" || matchStatus === \"finished\") && renderRace(), walletConnected && currentMatch && matchStatus === \"finished\" && renderChat()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 504,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sNoBU4l56XzCJV/xdILOY3Ia2ic=\", false, function () {\n  return [useWallet];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","sentences","WalletMultiButton","useWallet","Connection","LAMPORTS_PER_SOL","PublicKey","socket","setProvider","initializeEscrow","joinEscrow","depositToEscrow","resolveEscrow","cancelEscrow","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","wallet","publicKey","connected","walletConnected","walletAddress","toBase58","walletBalance","setWalletBalance","rpc","process","env","REACT_APP_SOLANA_RPC","conn","getBalance","then","lamports","catch","err","console","warn","wager","setWager","openMatches","setOpenMatches","currentMatch","setCurrentMatch","escrowPda","setEscrowPda","matchStatus","setMatchStatus","sentence","setSentence","inputValue","setInputValue","playerProgress","setPlayerProgress","opponentProgress","setOpponentProgress","countdown","setCountdown","raceResult","setRaceResult","isInputDisabled","setIsInputDisabled","isAccepting","setIsAccepting","opponentWallet","setOpponentWallet","chatMessages","setChatMessages","chatInput","setChatInput","inputRef","API","REACT_APP_API_URL","lastProgTime","setLastProgTime","Date","now","lastProg","setLastProg","MAX_CPS","connect","on","ms","m","os","id","filter","players","chooseSentence","find","w","progress","winner","progressMap","result","_progressMap$walletAd","_progressMap$opponent","msgs","e","error","resetGame","removeAllListeners","t","setTimeout","c","clearTimeout","_inputRef$current","current","focus","sum","Array","from","reduce","a","charCodeAt","length","fetchOpenMatches","res","fetch","json","createMatch","alert","Math","floor","pda","log","message","includes","method","headers","body","JSON","stringify","amount","Number","creator","feePercent","emit","acceptMatch","accepter","Promise","r","cancelMatch","handleInput","type","preventDefault","val","target","value","rawProg","min","deltaProg","deltaTime","chars","cps","matchId","renderMatchmaking","className","children","fileName","_jsxFileName","lineNumber","columnNumber","step","onChange","disabled","onClick","style","marginTop","map","slice","marginLeft","renderWaiting","renderRace","ref","onPaste","placeholder","autoFocus","left","fontSize","textAlign","color","renderChat","maxHeight","overflowY","msg","i","sender","onKeyDown","key","trim","toFixed","_c","$RefreshReg$"],"sources":["/home/kokoi/sol-wager-app/frontend/src/App.jsx"],"sourcesContent":["// frontend/src/App.jsx\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { WalletMultiButton, useWallet } from \"@solana/wallet-adapter-react-ui\";\nimport { Connection, LAMPORTS_PER_SOL, PublicKey } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport { setProvider } from \"./solana\";\nimport {\n  initializeEscrow,\n  joinEscrow,\n  depositToEscrow,\n  resolveEscrow,\n  cancelEscrow,\n} from \"./escrow\";\n\nexport default function App() {\n  const wallet = useWallet();\n  const { publicKey, connected } = wallet;\n  const walletConnected = connected;\n  const walletAddress = publicKey?.toBase58() || \"\";\n\n  // 1) Anchor provider setup once wallet connects\n  useEffect(() => {\n    if (connected) setProvider(wallet);\n  }, [connected, wallet]);\n\n  // 2) Track SOL balance\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (!publicKey) return;\n    const rpc = process.env.REACT_APP_SOLANA_RPC;\n    const conn = new Connection(rpc, \"confirmed\");\n    conn\n      .getBalance(publicKey)\n      .then((lamports) => setWalletBalance(lamports / LAMPORTS_PER_SOL))\n      .catch((err) => {\n        console.warn(\"Could not fetch wallet balance:\", err);\n        setWalletBalance(0);\n      });\n  }, [publicKey]);\n\n  // 3) Game & match state\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [escrowPda, setEscrowPda] = useState(null);\n\n  const [matchStatus, setMatchStatus] = useState(\"waiting\"); // waiting|ready|racing|finished\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null); // {result:\"win\"|\"lose\"}\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // Chat\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // Anti‑cheat state\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20; // max characters per second\n\n  // --- Socket.IO integration ---\n  useEffect(() => {\n    socket.connect();\n\n    socket.on(\"openMatches\", (ms) => setOpenMatches(ms));\n    socket.on(\"newMatch\", (m) => setOpenMatches((os) => [...os, m]));\n    socket.on(\"removeMatch\", (id) =>\n      setOpenMatches((os) => os.filter((m) => m.id !== id))\n    );\n\n    socket.on(\"startMatch\", ({ id, players }) => {\n      if (currentMatch?.id === id) {\n        setMatchStatus(\"ready\");\n        setSentence(chooseSentence(id));\n        setCountdown(3);\n        setOpponentWallet(players.find((w) => w !== walletAddress));\n      }\n    });\n\n    socket.on(\"opponentProgress\", ({ wallet: w, progress }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n\n    socket.on(\"raceEnd\", ({ winner, progressMap }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: winner === walletAddress ? \"win\" : \"lose\" });\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddress] ?? 0);\n        setOpponentProgress(progressMap[opponentWallet] ?? 0);\n      }\n    });\n\n    socket.on(\"chat\", (msgs) => setChatMessages(msgs));\n\n    socket.on(\"opponentLeft\", async () => {\n      // Auto-claim if we won\n      if (\n        matchStatus === \"finished\" &&\n        raceResult?.result === \"win\" &&\n        currentMatch?.id\n      ) {\n        try {\n          await resolveEscrow(new PublicKey(currentMatch.id), publicKey);\n        } catch (e) {\n          console.error(\"Auto-claim failed:\", e);\n        }\n      }\n      resetGame();\n    });\n\n    return () => socket.removeAllListeners();\n  }, [\n    currentMatch,\n    walletAddress,\n    opponentWallet,\n    matchStatus,\n    raceResult,\n    publicKey,\n  ]);\n\n  // --- Countdown → racing transition ---\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown((c) => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      inputRef.current?.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // --- Helpers ---\n  const chooseSentence = (id) => {\n    const sum = Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0);\n    return sentences[sum % sentences.length];\n  };\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setEscrowPda(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // --- 1) Create match (INSTANT CONTINUE, IGNORE TIMEOUT) ---\n  const createMatch = async () => {\n    if (!walletConnected) return alert(\"Connect wallet\");\n    const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n    let pda = null;\n    try {\n      console.log(\"createMatch invoked, about to call initializeEscrow\");\n      pda = await initializeEscrow(lamports);\n      setEscrowPda(pda);\n\n      // Continue immediately, without waiting for confirmation\n      const id = pda.toBase58();\n\n      // Fire and forget deposit\n      depositToEscrow(pda).catch((e) => {\n        if (\n          !(\n            e.message &&\n            (e.message.includes(\"not confirmed in 30.00 seconds\") ||\n              e.message.includes(\"Transaction was not confirmed\"))\n          )\n        ) {\n          console.error(\"depositToEscrow failed:\", e);\n          alert(`Deposit failed:\\n${e.message || e}`);\n        }\n        // else: silently ignore \"not confirmed\" errors\n      });\n\n      // Fire and forget wager creation\n      fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddress,\n          feePercent: 5,\n        }),\n      }).catch((e) => {\n        console.error(\"Failed to notify backend:\", e);\n      });\n\n      setCurrentMatch({ id, amount: Number(wager), creator: walletAddress });\n      socket.emit(\"joinMatch\", id);\n      // Done! Immediately transition to waiting for opponent.\n    } catch (e) {\n      // Only throw real errors, always suppress timeout\n      if (\n        e.message &&\n        (e.message.includes(\"not confirmed in 30.00 seconds\") ||\n          e.message.includes(\"Transaction was not confirmed\"))\n      ) {\n        console.warn(\"Timeout error suppressed, continuing anyway.\", e);\n        if (pda) {\n          const id = pda.toBase58();\n          setCurrentMatch({ id, amount: Number(wager), creator: walletAddress });\n          socket.emit(\"joinMatch\", id);\n        }\n        return;\n      }\n      console.error(\"createMatch failed:\", e);\n      alert(`Failed to create match:\\n${e.message || e}`);\n    }\n  };\n\n  // --- 2) Accept match ---\n  const acceptMatch = async (m) => {\n    if (!walletConnected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    const pda = new PublicKey(m.id);\n    setEscrowPda(pda);\n\n    // join room & set early\n    socket.emit(\"joinMatch\", m.id);\n    setCurrentMatch({ ...m, accepter: walletAddress });\n\n    try {\n      try {\n        await joinEscrow(pda);\n      } catch (err) {\n        if (!err.message.includes(\"already been processed\")) throw err;\n      }\n      await new Promise((r) => setTimeout(r, 1000));\n      try {\n        await depositToEscrow(pda);\n      } catch (err) {\n        if (!err.message.includes(\"already been processed\")) throw err;\n      }\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ accepter: walletAddress }),\n      });\n    } catch (e) {\n      console.error(\"acceptMatch failed:\", e);\n      alert(`Failed to accept match:\\n${e.message || e}`);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  };\n\n  // --- 3) Cancel match ---\n  const cancelMatch = async (m) => {\n    try {\n      await cancelEscrow(\n        new PublicKey(m.id),\n        new PublicKey(m.creator),\n        new PublicKey(m.accepter || m.creator)\n      );\n      await fetch(`${API}/wagers/${m.id}/cancel`, { method: \"POST\" });\n      resetGame();\n    } catch (e) {\n      console.error(\"cancelMatch failed:\", e);\n      alert(`Failed to cancel match:\\n${e.message || e}`);\n    }\n  };\n\n  // --- 4) Typing & anti‑cheat progress validator ---\n  const handleInput = (e) => {\n    if (isInputDisabled) return;\n\n    // block paste\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n\n    if (cps > MAX_CPS) {\n      // too fast, ignore\n      return;\n    }\n    setLastProg(rawProg);\n    setLastProgTime(now);\n\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: rawProg,\n    });\n\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ winner: walletAddress }),\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: \"win\" });\n    }\n  };\n\n  // --- UI Renderers ---\n  const renderMatchmaking = () => (\n    <section className=\"matchmaking\">\n      <h2>Create a Match</h2>\n      <label>\n        Wager (SOL):\n        <input\n          type=\"number\"\n          min=\"0.01\"\n          step=\"0.01\"\n          value={wager}\n          onChange={(e) => setWager(e.target.value)}\n          disabled={!!currentMatch}\n        />\n      </label>\n      <button\n        onClick={createMatch}\n        disabled={!wager || wager <= 0 || !!currentMatch}\n      >\n        Create Match\n      </button>\n      <h2 style={{ marginTop: 20 }}>Open Matches</h2>\n      {openMatches.length === 0 ? (\n        <p>No open matches. Create one!</p>\n      ) : (\n        <ul>\n          {openMatches.map((m) => (\n            <li key={m.id}>\n              {m.id.slice(0, 6)}… | {m.amount} SOL{\" \"}\n              {m.creator === walletAddress ? (\n                <button\n                  onClick={() => cancelMatch(m)}\n                  style={{ marginLeft: 10 }}\n                >\n                  Cancel\n                </button>\n              ) : (\n                <button\n                  onClick={() => acceptMatch(m)}\n                  disabled={!!currentMatch || isAccepting}\n                  style={{ marginLeft: 10 }}\n                >\n                  {isAccepting ? \"Accepting…\" : \"Accept\"}\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </section>\n  );\n  const renderWaiting = () => (\n    <section className=\"waiting-section\">\n      <h2>Waiting for opponent…</h2>\n      <button onClick={() => cancelMatch(currentMatch)}>Cancel Match</button>\n    </section>\n  );\n  const renderRace = () => (\n    <section className=\"race-section\">\n      {matchStatus === \"ready\" && <h2>Starting in {countdown}</h2>}\n      {matchStatus === \"racing\" && (\n        <>\n          <div className=\"sentence-display\">{sentence}</div>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInput}\n            onPaste={handleInput}\n            placeholder=\"Start typing…\"\n            disabled={isInputDisabled}\n            autoFocus\n          />\n          <div className=\"track\">\n            <div className=\"lane\">\n              <div\n                className=\"car car-player\"\n                style={{ left: `${playerProgress * 100}%` }}\n              >\n                🚗\n              </div>\n            </div>\n            <div className=\"lane\">\n              <div\n                className=\"car car-opponent\"\n                style={{ left: `${opponentProgress * 100}%` }}\n              >\n                🏎️\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"win\" && (\n        <div className=\"results results-win\">\n          <h2 style={{ fontSize: \"2rem\" }}>🏆 You Won!</h2>\n          <button\n            onClick={async () => {\n              try {\n                await resolveEscrow(\n                  new PublicKey(currentMatch.id),\n                  publicKey\n                );\n                resetGame();\n              } catch (e) {\n                console.error(e);\n                alert(\"Payout error: \" + (e.message || e));\n              }\n            }}\n          >\n            Claim Winnings\n          </button>\n        </div>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"lose\" && (\n        <div className=\"results results-lose\" style={{ textAlign: \"center\" }}>\n          <h2 style={{ fontSize: \"2rem\", color: \"#c0392b\" }}>😢 You Lost!</h2>\n          <p>Better luck next time!</p>\n          <button onClick={resetGame}>Back to Matches</button>\n        </div>\n      )}\n    </section>\n  );\n  const renderChat = () => (\n    <section className=\"chat-section\">\n      <h2>Chat</h2>\n      <div\n        className=\"chat-messages\"\n        style={{ maxHeight: 150, overflowY: \"auto\" }}\n      >\n        {chatMessages.map((msg, i) => (\n          <p key={i} className={msg.sender === walletAddress ? \"self\" : \"other\"}>\n            <strong>{msg.sender.slice(0, 6)}…:</strong> {msg.message}\n          </p>\n        ))}\n      </div>\n      <input\n        value={chatInput}\n        onChange={(e) => setChatInput(e.target.value)}\n        onKeyDown={(e) =>\n          e.key === \"Enter\" &&\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddress,\n            message: chatInput,\n          }) &&\n          setChatInput(\"\")\n        }\n      />\n      <button\n        onClick={() => {\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddress,\n            message: chatInput,\n          });\n          setChatInput(\"\");\n        }}\n        disabled={!chatInput.trim()}\n      >\n        Send\n      </button>\n    </section>\n  );\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Type Racer</h1>\n        {walletConnected ? (\n          <div className=\"wallet-info\">\n            {walletAddress.slice(0, 6)}… ({walletBalance.toFixed(2)} SOL)\n          </div>\n        ) : (\n          <WalletMultiButton />\n        )}\n      </header>\n\n      {!walletConnected && <p>Please connect your wallet to play.</p>}\n      {walletConnected && !currentMatch && renderMatchmaking()}\n      {walletConnected &&\n        currentMatch &&\n        matchStatus === \"waiting\" &&\n        renderWaiting()}\n      {walletConnected &&\n        currentMatch &&\n        (matchStatus === \"ready\" ||\n          matchStatus === \"racing\" ||\n          matchStatus === \"finished\") &&\n        renderRace()}\n      {walletConnected && currentMatch && matchStatus === \"finished\" && renderChat()}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}