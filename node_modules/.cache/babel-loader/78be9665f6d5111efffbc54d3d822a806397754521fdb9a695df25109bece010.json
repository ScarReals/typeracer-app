{"ast":null,"code":"var _jsxFileName = \"/home/kokoi/sol-wager-app/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport { setProvider } from \"./solana\";\nimport { buildInitializeAndDepositIxns, buildJoinAndDepositIxn, buildCancelIxn, buildResolveIxn } from \"./escrow\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    connection\n  } = useConnection();\n  const wallet = useWallet();\n  const {\n    publicKey,\n    connected\n  } = wallet;\n  const walletAddress = (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) || \"\";\n\n  // ── Anchor provider setup ─────────────────────────────────────────────────\n  useEffect(() => {\n    if (connected && connection) {\n      const provider = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\"\n      });\n      anchor.setProvider(provider);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n\n  // ── Wallet balance (errors silenced) ───────────────────────────────────────\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then(lamports => setWalletBalance(lamports / LAMPORTS_PER_SOL)).catch(() => {});\n    }\n  }, [connection, publicKey]);\n\n  // ── Game & race state ───────────────────────────────────────────────────────\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\"); // \"waiting\" | \"racing\" | \"finished\"\n\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // Chat\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // Anti-cheat\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // ── Socket listeners ───────────────────────────────────────────────────────\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", m => setOpenMatches(os => [...os, m]));\n    socket.on(\"removeMatch\", id => setOpenMatches(os => os.filter(m => m.id !== id)));\n    socket.on(\"startMatch\", ({\n      id,\n      players\n    }) => {\n      setCurrentMatch({\n        id,\n        creator: players[0],\n        accepter: players[1]\n      });\n      setMatchStatus(\"racing\");\n      setSentence(chooseSentence(id));\n      setInputValue(\"\");\n      setPlayerProgress(0);\n      setOpponentProgress(0);\n      setIsInputDisabled(false);\n      setOpponentWallet(players.find(w => w !== walletAddress));\n    });\n    socket.on(\"opponentProgress\", ({\n      wallet: w,\n      progress\n    }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({\n      winner,\n      progressMap\n    }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddress] || 0);\n        setOpponentProgress(progressMap[opponentWallet] || 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", resetGame);\n    fetchOpenMatches();\n    return () => {\n      socket.disconnect();\n      socket.removeAllListeners();\n    };\n  }, [walletAddress, opponentWallet]);\n\n  // ── Helpers ─────────────────────────────────────────────────────────────────\n  const chooseSentence = id => sentences[Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length];\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setIsInputDisabled(false);\n    fetchOpenMatches();\n  };\n\n  // ── 1) CREATE MATCH ─────────────────────────────────────────────────────────\n  async function createMatch() {\n    if (!connected) return alert(\"Connect your wallet first\");\n    try {\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const nonce = Math.floor(Math.random() * 1e6);\n      const {\n        ixInit,\n        ixDeposit,\n        escrowPda\n      } = await buildInitializeAndDepositIxns(lamports, publicKey, nonce);\n\n      // Fire-&-forget; ignore subscription errors\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      wallet.sendTransaction(tx, connection).catch(() => {});\n\n      // Immediately show waiting for opponent\n      const id = escrowPda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddress,\n          feePercent: 5,\n          vault: id,\n          nonce\n        })\n      });\n      setCurrentMatch({\n        id,\n        creator: walletAddress\n      });\n      socket.emit(\"joinMatch\", id);\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"Create match failed\", e);\n      alert(\"Unable to create match\");\n    }\n  }\n\n  // ── 2) ACCEPT MATCH ─────────────────────────────────────────────────────────\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect your wallet first\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(new PublicKey(m.id));\n      const tx = new Transaction().add(ix);\n      wallet.sendTransaction(tx, connection).catch(() => {});\n\n      // Immediately start racing\n      setCurrentMatch(m);\n      setMatchStatus(\"racing\");\n      setSentence(chooseSentence(m.id));\n      setInputValue(\"\");\n      setPlayerProgress(0);\n      setOpponentProgress(0);\n      setIsInputDisabled(false);\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          accepter: walletAddress,\n          vault: m.id\n        })\n      });\n    } catch (e) {\n      console.error(\"Accept match failed\", e);\n      alert(\"Unable to accept match\");\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  // ── 3) CANCEL MATCH ─────────────────────────────────────────────────────────\n  async function cancelMatch(m) {\n    try {\n      const escrowPda = new PublicKey(m.id);\n      const ix = buildCancelIxn(escrowPda, publicKey, new PublicKey(m.accepter || m.creator));\n      const tx = new Transaction().add(ix);\n      wallet.sendTransaction(tx, connection).catch(() => {});\n      await fetch(`${API}/wagers/${m.id}/cancel`, {\n        method: \"POST\"\n      });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel match failed\", e);\n      alert(\"Unable to cancel match\");\n    }\n  }\n\n  // ── 4) TYPING INPUT ─────────────────────────────────────────────────────────\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const prog = Math.min(1, val.length / sentence.length);\n    const delta = prog - lastProg;\n    const dt = (now - lastProgTime) / 1000;\n    const chars = delta * sentence.length;\n    const cps = dt > 0 ? chars / dt : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(prog);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(prog);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: prog\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          winner: walletAddress\n        })\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n    }\n  }\n\n  // ── RENDER ──────────────────────────────────────────────────────────────────\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Type Racer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: [walletAddress.slice(0, 6), \"\\u2026 (\", walletBalance.toFixed(2), \" SOL)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), !connected && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your wallet to play.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 22\n    }, this), connected && !currentMatch && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"matchmaking\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Wager (SOL):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          value: wager,\n          onChange: e => setWager(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createMatch,\n        disabled: !wager || wager <= 0,\n        children: \"Create Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Open Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: openMatches.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [m.id.slice(0, 6), \"\\u2026 | \", m.amount, \" SOL\", \" \", m.creator === walletAddress ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => cancelMatch(m),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => acceptMatch(m),\n            disabled: isAccepting,\n            children: isAccepting ? \"Accepting…\" : \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 19\n          }, this)]\n        }, m.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this), connected && currentMatch && matchStatus === \"waiting\" && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"waiting\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Waiting for opponent\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => cancelMatch(currentMatch),\n        children: \"Cancel Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }, this), connected && currentMatch && matchStatus === \"racing\" && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"race-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence-display\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInput,\n        onPaste: handleInput,\n        placeholder: \"Start typing\\u2026\",\n        disabled: isInputDisabled,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-player\",\n            style: {\n              left: `${playerProgress * 100}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-opponent\",\n            style: {\n              left: `${opponentProgress * 100}%`\n            },\n            children: \"\\uD83C\\uDFCE\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }, this), connected && currentMatch && matchStatus === \"finished\" && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: playerProgress > opponentProgress ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83C\\uDFC6 You Won!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              const ix = await buildResolveIxn(new PublicKey(currentMatch.id), publicKey);\n              const tx = new Transaction().add(ix);\n              wallet.sendTransaction(tx, connection).catch(() => {});\n              resetGame();\n            },\n            children: \"Claim Winnings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDE22 You Lost!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetGame,\n            children: \"Back to Matches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: chatMessages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [msg.sender.slice(0, 6), \"\\u2026:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 19\n            }, this), \" \", msg.message]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: chatInput,\n          onChange: e => setChatInput(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddress,\n            message: chatInput\n          }) && setChatInput(\"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            socket.emit(\"message\", {\n              matchId: currentMatch.id,\n              sender: walletAddress,\n              message: chatInput\n            });\n            setChatInput(\"\");\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"t1+VGZ1wh1irLvi27psY3tgUAaw=\", false, function () {\n  return [useConnection, useWallet];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","sentences","useConnection","useWallet","WalletMultiButton","LAMPORTS_PER_SOL","PublicKey","Transaction","socket","anchor","setProvider","buildInitializeAndDepositIxns","buildJoinAndDepositIxn","buildCancelIxn","buildResolveIxn","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","connection","wallet","publicKey","connected","walletAddress","toBase58","provider","AnchorProvider","preflightCommitment","commitment","walletBalance","setWalletBalance","getBalance","then","lamports","catch","wager","setWager","openMatches","setOpenMatches","currentMatch","setCurrentMatch","matchStatus","setMatchStatus","sentence","setSentence","inputValue","setInputValue","playerProgress","setPlayerProgress","opponentProgress","setOpponentProgress","isInputDisabled","setIsInputDisabled","isAccepting","setIsAccepting","opponentWallet","setOpponentWallet","chatMessages","setChatMessages","chatInput","setChatInput","inputRef","API","process","env","REACT_APP_API_URL","lastProgTime","setLastProgTime","Date","now","lastProg","setLastProg","MAX_CPS","connect","on","m","os","id","filter","players","creator","accepter","chooseSentence","find","w","progress","winner","progressMap","resetGame","fetchOpenMatches","disconnect","removeAllListeners","Array","from","reduce","a","c","charCodeAt","length","res","fetch","json","createMatch","alert","Math","floor","nonce","random","ixInit","ixDeposit","escrowPda","tx","add","sendTransaction","method","headers","body","JSON","stringify","amount","Number","feePercent","vault","emit","e","console","error","acceptMatch","ix","cancelMatch","handleInput","type","preventDefault","val","target","value","prog","min","delta","dt","chars","cps","matchId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","toFixed","step","onChange","onClick","disabled","map","ref","onPaste","placeholder","autoFocus","style","left","msg","i","sender","message","onKeyDown","key","_c","$RefreshReg$"],"sources":["/home/kokoi/sol-wager-app/frontend/src/App.jsx"],"sourcesContent":["// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport { setProvider } from \"./solana\";\nimport {\n  buildInitializeAndDepositIxns,\n  buildJoinAndDepositIxn,\n  buildCancelIxn,\n  buildResolveIxn,\n} from \"./escrow\";\n\nexport default function App() {\n  const { connection } = useConnection();\n  const wallet = useWallet();\n  const { publicKey, connected } = wallet;\n  const walletAddress = publicKey?.toBase58() || \"\";\n\n  // ── Anchor provider setup ─────────────────────────────────────────────────\n  useEffect(() => {\n    if (connected && connection) {\n      const provider = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\",\n      });\n      anchor.setProvider(provider);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n\n  // ── Wallet balance (errors silenced) ───────────────────────────────────────\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection\n        .getBalance(publicKey)\n        .then((lamports) => setWalletBalance(lamports / LAMPORTS_PER_SOL))\n        .catch(() => {});\n    }\n  }, [connection, publicKey]);\n\n  // ── Game & race state ───────────────────────────────────────────────────────\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\"); // \"waiting\" | \"racing\" | \"finished\"\n\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // Chat\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n\n  const API = process.env.REACT_APP_API_URL;\n\n  // Anti-cheat\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // ── Socket listeners ───────────────────────────────────────────────────────\n  useEffect(() => {\n    socket.connect();\n\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", (m) => setOpenMatches((os) => [...os, m]));\n    socket.on(\"removeMatch\", (id) =>\n      setOpenMatches((os) => os.filter((m) => m.id !== id))\n    );\n\n    socket.on(\"startMatch\", ({ id, players }) => {\n      setCurrentMatch({ id, creator: players[0], accepter: players[1] });\n      setMatchStatus(\"racing\");\n      setSentence(chooseSentence(id));\n      setInputValue(\"\");\n      setPlayerProgress(0);\n      setOpponentProgress(0);\n      setIsInputDisabled(false);\n      setOpponentWallet(players.find((w) => w !== walletAddress));\n    });\n\n    socket.on(\"opponentProgress\", ({ wallet: w, progress }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n\n    socket.on(\"raceEnd\", ({ winner, progressMap }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddress] || 0);\n        setOpponentProgress(progressMap[opponentWallet] || 0);\n      }\n    });\n\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", resetGame);\n\n    fetchOpenMatches();\n\n    return () => {\n      socket.disconnect();\n      socket.removeAllListeners();\n    };\n  }, [walletAddress, opponentWallet]);\n\n  // ── Helpers ─────────────────────────────────────────────────────────────────\n  const chooseSentence = (id) =>\n    sentences[\n      Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length\n    ];\n\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setIsInputDisabled(false);\n    fetchOpenMatches();\n  };\n\n  // ── 1) CREATE MATCH ─────────────────────────────────────────────────────────\n  async function createMatch() {\n    if (!connected) return alert(\"Connect your wallet first\");\n    try {\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const nonce = Math.floor(Math.random() * 1e6);\n      const { ixInit, ixDeposit, escrowPda } =\n        await buildInitializeAndDepositIxns(lamports, publicKey, nonce);\n\n      // Fire-&-forget; ignore subscription errors\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      wallet.sendTransaction(tx, connection).catch(() => {});\n\n      // Immediately show waiting for opponent\n      const id = escrowPda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddress,\n          feePercent: 5,\n          vault: id,\n          nonce,\n        }),\n      });\n\n      setCurrentMatch({ id, creator: walletAddress });\n      socket.emit(\"joinMatch\", id);\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"Create match failed\", e);\n      alert(\"Unable to create match\");\n    }\n  }\n\n  // ── 2) ACCEPT MATCH ─────────────────────────────────────────────────────────\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect your wallet first\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(new PublicKey(m.id));\n      const tx = new Transaction().add(ix);\n      wallet.sendTransaction(tx, connection).catch(() => {});\n\n      // Immediately start racing\n      setCurrentMatch(m);\n      setMatchStatus(\"racing\");\n      setSentence(chooseSentence(m.id));\n      setInputValue(\"\");\n      setPlayerProgress(0);\n      setOpponentProgress(0);\n      setIsInputDisabled(false);\n\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ accepter: walletAddress, vault: m.id }),\n      });\n    } catch (e) {\n      console.error(\"Accept match failed\", e);\n      alert(\"Unable to accept match\");\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  // ── 3) CANCEL MATCH ─────────────────────────────────────────────────────────\n  async function cancelMatch(m) {\n    try {\n      const escrowPda = new PublicKey(m.id);\n      const ix = buildCancelIxn(\n        escrowPda,\n        publicKey,\n        new PublicKey(m.accepter || m.creator)\n      );\n      const tx = new Transaction().add(ix);\n      wallet.sendTransaction(tx, connection).catch(() => {});\n      await fetch(`${API}/wagers/${m.id}/cancel`, { method: \"POST\" });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel match failed\", e);\n      alert(\"Unable to cancel match\");\n    }\n  }\n\n  // ── 4) TYPING INPUT ─────────────────────────────────────────────────────────\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const prog = Math.min(1, val.length / sentence.length);\n    const delta = prog - lastProg;\n    const dt = (now - lastProgTime) / 1000;\n    const chars = delta * sentence.length;\n    const cps = dt > 0 ? chars / dt : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(prog);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(prog);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: prog,\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ winner: walletAddress }),\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n    }\n  }\n\n  // ── RENDER ──────────────────────────────────────────────────────────────────\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Type Racer</h1>\n        {connected ? (\n          <div className=\"wallet-info\">\n            {walletAddress.slice(0, 6)}… ({walletBalance.toFixed(2)} SOL)\n          </div>\n        ) : (\n          <WalletMultiButton />\n        )}\n      </header>\n\n      {!connected && <p>Please connect your wallet to play.</p>}\n\n      {/* Matchmaking */}\n      {connected && !currentMatch && (\n        <section className=\"matchmaking\">\n          <h2>Create a Match</h2>\n          <label>\n            Wager (SOL):\n            <input\n              type=\"number\"\n              min=\"0.01\"\n              step=\"0.01\"\n              value={wager}\n              onChange={(e) => setWager(Number(e.target.value))}\n            />\n          </label>\n          <button onClick={createMatch} disabled={!wager || wager <= 0}>\n            Create Match\n          </button>\n\n          <h2>Open Matches</h2>\n          <ul>\n            {openMatches.map((m) => (\n              <li key={m.id}>\n                {m.id.slice(0, 6)}… | {m.amount} SOL{\" \"}\n                {m.creator === walletAddress ? (\n                  <button onClick={() => cancelMatch(m)}>Cancel</button>\n                ) : (\n                  <button\n                    onClick={() => acceptMatch(m)}\n                    disabled={isAccepting}\n                  >\n                    {isAccepting ? \"Accepting…\" : \"Accept\"}\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n        </section>\n      )}\n\n      {/* Waiting */}\n      {connected && currentMatch && matchStatus === \"waiting\" && (\n        <section className=\"waiting\">\n          <h2>Waiting for opponent…</h2>\n          <button onClick={() => cancelMatch(currentMatch)}>\n            Cancel Match\n          </button>\n        </section>\n      )}\n\n      {/* Racing */}\n      {connected && currentMatch && matchStatus === \"racing\" && (\n        <section className=\"race-section\">\n          <div className=\"sentence-display\">{sentence}</div>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInput}\n            onPaste={handleInput}\n            placeholder=\"Start typing…\"\n            disabled={isInputDisabled}\n            autoFocus\n          />\n          <div className=\"track\">\n            <div className=\"lane\">\n              <div\n                className=\"car car-player\"\n                style={{ left: `${playerProgress * 100}%` }}\n              >\n                🚗\n              </div>\n            </div>\n            <div className=\"lane\">\n              <div\n                className=\"car car-opponent\"\n                style={{ left: `${opponentProgress * 100}%` }}\n              >\n                🏎️\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n\n      {/* Results + Chat */}\n      {connected && currentMatch && matchStatus === \"finished\" && (\n        <section className=\"results-chat\">\n          <div className=\"results\">\n            {playerProgress > opponentProgress ? (\n              <>\n                <h2>🏆 You Won!</h2>\n                <button\n                  onClick={async () => {\n                    const ix = await buildResolveIxn(\n                      new PublicKey(currentMatch.id),\n                      publicKey\n                    );\n                    const tx = new Transaction().add(ix);\n                    wallet.sendTransaction(tx, connection).catch(() => {});\n                    resetGame();\n                  }}\n                >\n                  Claim Winnings\n                </button>\n              </>\n            ) : (\n              <>\n                <h2>😢 You Lost!</h2>\n                <button onClick={resetGame}>Back to Matches</button>\n              </>\n            )}\n          </div>\n\n          <div className=\"chat-section\">\n            <h2>Chat</h2>\n            <div className=\"chat-messages\">\n              {chatMessages.map((msg, i) => (\n                <p key={i}>\n                  <strong>{msg.sender.slice(0, 6)}…:</strong> {msg.message}\n                </p>\n              ))}\n            </div>\n            <input\n              value={chatInput}\n              onChange={(e) => setChatInput(e.target.value)}\n              onKeyDown={(e) =>\n                e.key === \"Enter\" &&\n                socket.emit(\"message\", {\n                  matchId: currentMatch.id,\n                  sender: walletAddress,\n                  message: chatInput,\n                }) &&\n                setChatInput(\"\")\n              }\n            />\n            <button\n              onClick={() => {\n                socket.emit(\"message\", {\n                  matchId: currentMatch.id,\n                  sender: walletAddress,\n                  message: chatInput,\n                });\n                setChatInput(\"\");\n              }}\n            >\n              Send\n            </button>\n          </div>\n        </section>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}