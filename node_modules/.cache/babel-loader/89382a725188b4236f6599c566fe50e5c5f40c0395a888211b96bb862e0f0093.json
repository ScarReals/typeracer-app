{"ast":null,"code":"var _jsxFileName = \"/home/kokoi/sol-wager-app/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey, SystemProgram, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport idl from \"./idl/typeracer_escrow.json\";\nimport { resolveEscrow, cancelEscrow, joinAndDeposit } from \"./escrow\";\n\n// Program ID from your IDL\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PROGRAM_ID = new PublicKey(idl.metadata.address);\nexport default function App() {\n  _s();\n  const {\n    connection\n  } = useConnection();\n  const wallet = useWallet();\n  const {\n    publicKey,\n    connected\n  } = wallet;\n  const walletAddress = (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) || \"\";\n  const providerRef = useRef(null);\n\n  // Anchor provider setup\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\"\n      });\n      anchor.setProvider(prov);\n      providerRef.current = prov;\n    }\n  }, [connected, connection, wallet]);\n\n  // Wallet balance\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then(lamports => setWalletBalance(lamports / LAMPORTS_PER_SOL)).catch(() => {});\n    }\n  }, [connection, publicKey]);\n\n  // Game state\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n\n  // Race state\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // Chat\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // Anti-cheat\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // Socket listeners\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", m => setOpenMatches(os => [...os, m]));\n    socket.on(\"removeMatch\", id => setOpenMatches(os => os.filter(m => m.id !== id)));\n    socket.on(\"startMatch\", ({\n      id,\n      players\n    }) => {\n      if ((currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.id) === id) {\n        setMatchStatus(\"ready\");\n        setSentence(chooseSentence(id));\n        setCountdown(3);\n        setOpponentWallet(players.find(w => w !== walletAddress));\n      }\n    });\n    socket.on(\"opponentProgress\", ({\n      wallet: w,\n      progress\n    }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({\n      winner,\n      progressMap\n    }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: winner === walletAddress ? \"win\" : \"lose\"\n      });\n      if (progressMap) {\n        var _progressMap$walletAd, _progressMap$opponent;\n        setPlayerProgress((_progressMap$walletAd = progressMap[walletAddress]) !== null && _progressMap$walletAd !== void 0 ? _progressMap$walletAd : 0);\n        setOpponentProgress((_progressMap$opponent = progressMap[opponentWallet]) !== null && _progressMap$opponent !== void 0 ? _progressMap$opponent : 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", async () => {\n      if (matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && currentMatch !== null && currentMatch !== void 0 && currentMatch.id) {\n        try {\n          await resolveEscrow(new PublicKey(currentMatch.id), publicKey);\n        } catch (e) {\n          console.error(\"Auto-claim failed:\", e);\n        }\n      }\n      resetGame();\n    });\n    return () => socket.removeAllListeners();\n  }, [connection, currentMatch, walletAddress, opponentWallet, matchStatus, raceResult, publicKey]);\n\n  // Countdown\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown(c => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      var _inputRef$current;\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // Helpers\n  const chooseSentence = id => sentences[Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length];\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // createMatch: send-only, no confirmTransaction\n  async function createMatch() {\n    if (!connected) return alert(\"Connect your wallet\");\n    const provider = providerRef.current;\n    if (!provider) return alert(\"Provider not ready\");\n    const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n    const program = new anchor.Program(idl, PROGRAM_ID, provider);\n    const nonce = Math.floor(Math.random() * 1000000);\n\n    // derive PDA\n    const [escrowPda] = await PublicKey.findProgramAddress([Buffer.from(\"escrow\"), provider.wallet.publicKey.toBuffer(), new anchor.BN(nonce).toArrayLike(Buffer, \"le\", 8)], program.programId);\n\n    // initialize ix\n    const ixInit = await program.methods.initialize(new anchor.BN(lamports), new anchor.BN(nonce)).accounts({\n      escrow: escrowPda,\n      player1: provider.wallet.publicKey,\n      authority: provider.wallet.publicKey,\n      systemProgram: SystemProgram.programId\n    }).instruction();\n\n    // deposit ix\n    const ixDeposit = await program.methods.deposit().accounts({\n      escrow: escrowPda,\n      payer: provider.wallet.publicKey,\n      escrowAccount: escrowPda,\n      systemProgram: SystemProgram.programId\n    }).instruction();\n\n    // build tx\n    const tx = new Transaction().add(ixInit, ixDeposit);\n    tx.feePayer = provider.wallet.publicKey;\n    let sig;\n    try {\n      sig = await provider.wallet.sendTransaction(tx, connection);\n      console.log(\"Sent:\", sig);\n    } catch (err) {\n      console.error(\"Send failed:\", err);\n      return alert(\"Send error:\\n\" + err.message);\n    }\n\n    // immediate register & UI update\n    const id = escrowPda.toBase58();\n    await fetch(`${API}/wagers`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id,\n        amount: Number(wager),\n        creator: walletAddress,\n        feePercent: 5\n      })\n    });\n    setCurrentMatch({\n      id,\n      amount: Number(wager),\n      creator: walletAddress\n    });\n    socket.emit(\"joinMatch\", id);\n    setMatchStatus(\"waiting\");\n  }\n\n  // acceptMatch\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect your wallet\");\n    setIsAccepting(true);\n    try {\n      await joinAndDeposit(new PublicKey(m.id));\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          accepter: walletAddress\n        })\n      });\n      setCurrentMatch({\n        ...m,\n        accepter: walletAddress\n      });\n      setMatchStatus(\"ready\");\n      setCountdown(3);\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"accept failed:\", e);\n      setCurrentMatch(null);\n      alert(\"Accept error:\\n\" + e.message);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  // cancelMatch\n  async function cancelMatch(m) {\n    try {\n      await cancelEscrow(new PublicKey(m.id), new PublicKey(m.creator), new PublicKey(m.accepter || m.creator));\n      await fetch(`${API}/wagers/${m.id}/cancel`, {\n        method: \"POST\"\n      });\n      resetGame();\n    } catch (e) {\n      console.error(\"cancel failed:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n\n  // handleInput\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: rawProg\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          winner: walletAddress\n        })\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: \"win\"\n      });\n    }\n  }\n\n  // UI renderers\n  const renderMatchmaking = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"matchmaking\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Wager (SOL):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0.01\",\n        step: \"0.01\",\n        value: wager,\n        onChange: e => setWager(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createMatch,\n      disabled: !wager || wager <= 0,\n      children: \"Create Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: 20\n      },\n      children: \"Open Matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), openMatches.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No open matches. Create one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: openMatches.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [m.id.slice(0, 6), \"\\u2026 | \", m.amount, \" SOL\", \" \", m.creator === walletAddress ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cancelMatch(m),\n          style: {\n            marginLeft: 10\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptMatch(m),\n          disabled: !!currentMatch || isAccepting,\n          style: {\n            marginLeft: 10\n          },\n          children: isAccepting ? \"Accepting…\" : \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 17\n        }, this)]\n      }, m.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n  const renderWaiting = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"waiting-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for opponent\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => cancelMatch(currentMatch),\n      children: \"Cancel Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n  const renderRace = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"race-section\",\n    children: [matchStatus === \"ready\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Starting in \", countdown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 35\n    }, this), matchStatus === \"racing\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence-display\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInput,\n        onPaste: handleInput,\n        placeholder: \"Start typing\\u2026\",\n        disabled: isInputDisabled,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-player\",\n            style: {\n              left: `${playerProgress * 100}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-opponent\",\n            style: {\n              left: `${opponentProgress * 100}%`\n            },\n            children: \"\\uD83C\\uDFCE\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-win\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\"\n        },\n        children: \"\\uD83C\\uDFC6 You Won!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          try {\n            await resolveEscrow(new PublicKey(currentMatch.id), publicKey);\n            resetGame();\n          } catch (e) {\n            console.error(e);\n            alert(\"Payout error:\\n\" + e.message);\n          }\n        },\n        children: \"Claim Winnings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 9\n    }, this), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"lose\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-lose\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\",\n          color: \"#c0392b\"\n        },\n        children: \"\\uD83D\\uDE22 You Lost!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Better luck next time!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Back to Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 5\n  }, this);\n  const renderChat = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      style: {\n        maxHeight: 150,\n        overflowY: \"auto\"\n      },\n      children: chatMessages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: msg.sender === walletAddress ? \"self\" : \"other\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender.slice(0, 6), \"\\u2026:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: chatInput,\n      onChange: e => setChatInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && socket.emit(\"message\", {\n        matchId: currentMatch.id,\n        sender: walletAddress,\n        message: chatInput\n      }) && setChatInput(\"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        socket.emit(\"message\", {\n          matchId: currentMatch.id,\n          sender: walletAddress,\n          message: chatInput\n        });\n        setChatInput(\"\");\n      },\n      disabled: !chatInput.trim(),\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 426,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Type Racer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: [walletAddress.slice(0, 6), \"\\u2026 (\", walletBalance.toFixed(2), \" SOL)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this), !connected && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your wallet to play.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 22\n    }, this), connected && !currentMatch && renderMatchmaking(), connected && currentMatch && matchStatus === \"waiting\" && renderWaiting(), connected && currentMatch && (matchStatus === \"ready\" || matchStatus === \"racing\" || matchStatus === \"finished\") && renderRace(), connected && currentMatch && matchStatus === \"finished\" && renderChat()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 457,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wu2fuNG/zk/9+z8/jdN4mkZm/2Q=\", false, function () {\n  return [useConnection, useWallet];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","sentences","useConnection","useWallet","WalletMultiButton","LAMPORTS_PER_SOL","PublicKey","SystemProgram","Transaction","socket","anchor","idl","resolveEscrow","cancelEscrow","joinAndDeposit","jsxDEV","_jsxDEV","Fragment","_Fragment","PROGRAM_ID","metadata","address","App","_s","connection","wallet","publicKey","connected","walletAddress","toBase58","providerRef","prov","AnchorProvider","preflightCommitment","setProvider","current","walletBalance","setWalletBalance","getBalance","then","lamports","catch","wager","setWager","openMatches","setOpenMatches","currentMatch","setCurrentMatch","matchStatus","setMatchStatus","sentence","setSentence","inputValue","setInputValue","playerProgress","setPlayerProgress","opponentProgress","setOpponentProgress","countdown","setCountdown","raceResult","setRaceResult","isInputDisabled","setIsInputDisabled","isAccepting","setIsAccepting","opponentWallet","setOpponentWallet","chatMessages","setChatMessages","chatInput","setChatInput","inputRef","API","process","env","REACT_APP_API_URL","lastProgTime","setLastProgTime","Date","now","lastProg","setLastProg","MAX_CPS","connect","on","m","os","id","filter","players","chooseSentence","find","w","progress","winner","progressMap","result","_progressMap$walletAd","_progressMap$opponent","e","console","error","resetGame","removeAllListeners","t","setTimeout","c","clearTimeout","_inputRef$current","focus","Array","from","reduce","a","charCodeAt","length","fetchOpenMatches","res","fetch","json","createMatch","alert","provider","Math","floor","program","Program","nonce","random","escrowPda","findProgramAddress","Buffer","toBuffer","BN","toArrayLike","programId","ixInit","methods","initialize","accounts","escrow","player1","authority","systemProgram","instruction","ixDeposit","deposit","payer","escrowAccount","tx","add","feePayer","sig","sendTransaction","log","err","message","method","headers","body","JSON","stringify","amount","Number","creator","feePercent","emit","acceptMatch","accepter","cancelMatch","handleInput","type","preventDefault","val","target","value","rawProg","min","deltaProg","deltaTime","chars","cps","matchId","renderMatchmaking","className","children","fileName","_jsxFileName","lineNumber","columnNumber","step","onChange","onClick","disabled","style","marginTop","map","slice","marginLeft","renderWaiting","renderRace","ref","onPaste","placeholder","autoFocus","left","fontSize","textAlign","color","renderChat","maxHeight","overflowY","msg","i","sender","onKeyDown","key","trim","toFixed","_c","$RefreshReg$"],"sources":["/home/kokoi/sol-wager-app/frontend/src/App.jsx"],"sourcesContent":["// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport {\n  LAMPORTS_PER_SOL,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n} from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport idl from \"./idl/typeracer_escrow.json\";\nimport { resolveEscrow, cancelEscrow, joinAndDeposit } from \"./escrow\";\n\n// Program ID from your IDL\nconst PROGRAM_ID = new PublicKey(idl.metadata.address);\n\nexport default function App() {\n  const { connection } = useConnection();\n  const wallet = useWallet();\n  const { publicKey, connected } = wallet;\n  const walletAddress = publicKey?.toBase58() || \"\";\n  const providerRef = useRef(null);\n\n  // Anchor provider setup\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n      });\n      anchor.setProvider(prov);\n      providerRef.current = prov;\n    }\n  }, [connected, connection, wallet]);\n\n  // Wallet balance\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection\n        .getBalance(publicKey)\n        .then((lamports) => setWalletBalance(lamports / LAMPORTS_PER_SOL))\n        .catch(() => {});\n    }\n  }, [connection, publicKey]);\n\n  // Game state\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n\n  // Race state\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // Chat\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // Anti-cheat\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // Socket listeners\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", (m) => setOpenMatches((os) => [...os, m]));\n    socket.on(\"removeMatch\", (id) =>\n      setOpenMatches((os) => os.filter((m) => m.id !== id))\n    );\n    socket.on(\"startMatch\", ({ id, players }) => {\n      if (currentMatch?.id === id) {\n        setMatchStatus(\"ready\");\n        setSentence(chooseSentence(id));\n        setCountdown(3);\n        setOpponentWallet(players.find((w) => w !== walletAddress));\n      }\n    });\n    socket.on(\"opponentProgress\", ({ wallet: w, progress }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({ winner, progressMap }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: winner === walletAddress ? \"win\" : \"lose\" });\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddress] ?? 0);\n        setOpponentProgress(progressMap[opponentWallet] ?? 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", async () => {\n      if (\n        matchStatus === \"finished\" &&\n        raceResult?.result === \"win\" &&\n        currentMatch?.id\n      ) {\n        try {\n          await resolveEscrow(new PublicKey(currentMatch.id), publicKey);\n        } catch (e) {\n          console.error(\"Auto-claim failed:\", e);\n        }\n      }\n      resetGame();\n    });\n    return () => socket.removeAllListeners();\n  }, [\n    connection,\n    currentMatch,\n    walletAddress,\n    opponentWallet,\n    matchStatus,\n    raceResult,\n    publicKey,\n  ]);\n\n  // Countdown\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown((c) => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      inputRef.current?.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // Helpers\n  const chooseSentence = (id) =>\n    sentences[\n      Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) %\n        sentences.length\n    ];\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // createMatch: send-only, no confirmTransaction\n  async function createMatch() {\n    if (!connected) return alert(\"Connect your wallet\");\n    const provider = providerRef.current;\n    if (!provider) return alert(\"Provider not ready\");\n\n    const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n    const program = new anchor.Program(idl, PROGRAM_ID, provider);\n    const nonce = Math.floor(Math.random() * 1_000_000);\n\n    // derive PDA\n    const [escrowPda] = await PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"escrow\"),\n        provider.wallet.publicKey.toBuffer(),\n        new anchor.BN(nonce).toArrayLike(Buffer, \"le\", 8),\n      ],\n      program.programId\n    );\n\n    // initialize ix\n    const ixInit = await program.methods\n      .initialize(new anchor.BN(lamports), new anchor.BN(nonce))\n      .accounts({\n        escrow: escrowPda,\n        player1: provider.wallet.publicKey,\n        authority: provider.wallet.publicKey,\n        systemProgram: SystemProgram.programId,\n      })\n      .instruction();\n\n    // deposit ix\n    const ixDeposit = await program.methods\n      .deposit()\n      .accounts({\n        escrow: escrowPda,\n        payer: provider.wallet.publicKey,\n        escrowAccount: escrowPda,\n        systemProgram: SystemProgram.programId,\n      })\n      .instruction();\n\n    // build tx\n    const tx = new Transaction().add(ixInit, ixDeposit);\n    tx.feePayer = provider.wallet.publicKey;\n\n    let sig;\n    try {\n      sig = await provider.wallet.sendTransaction(tx, connection);\n      console.log(\"Sent:\", sig);\n    } catch (err) {\n      console.error(\"Send failed:\", err);\n      return alert(\"Send error:\\n\" + err.message);\n    }\n\n    // immediate register & UI update\n    const id = escrowPda.toBase58();\n    await fetch(`${API}/wagers`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        id,\n        amount: Number(wager),\n        creator: walletAddress,\n        feePercent: 5,\n      }),\n    });\n    setCurrentMatch({ id, amount: Number(wager), creator: walletAddress });\n    socket.emit(\"joinMatch\", id);\n    setMatchStatus(\"waiting\");\n  }\n\n  // acceptMatch\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect your wallet\");\n    setIsAccepting(true);\n    try {\n      await joinAndDeposit(new PublicKey(m.id));\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ accepter: walletAddress }),\n      });\n      setCurrentMatch({ ...m, accepter: walletAddress });\n      setMatchStatus(\"ready\");\n      setCountdown(3);\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"accept failed:\", e);\n      setCurrentMatch(null);\n      alert(\"Accept error:\\n\" + e.message);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  // cancelMatch\n  async function cancelMatch(m) {\n    try {\n      await cancelEscrow(\n        new PublicKey(m.id),\n        new PublicKey(m.creator),\n        new PublicKey(m.accepter || m.creator)\n      );\n      await fetch(`${API}/wagers/${m.id}/cancel`, { method: \"POST\" });\n      resetGame();\n    } catch (e) {\n      console.error(\"cancel failed:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n\n  // handleInput\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") { e.preventDefault(); return; }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", { matchId: currentMatch.id, wallet: walletAddress, progress: rawProg });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ winner: walletAddress }),\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: \"win\" });\n    }\n  }\n\n  // UI renderers\n  const renderMatchmaking = () => (\n    <section className=\"matchmaking\">\n      <h2>Create a Match</h2>\n      <label>\n        Wager (SOL):\n        <input\n          type=\"number\"\n          min=\"0.01\"\n          step=\"0.01\"\n          value={wager}\n          onChange={(e) => setWager(e.target.value)}\n        />\n      </label>\n      <button onClick={createMatch} disabled={!wager || wager <= 0}>\n        Create Match\n      </button>\n      <h2 style={{ marginTop: 20 }}>Open Matches</h2>\n      {openMatches.length === 0 ? (\n        <p>No open matches. Create one!</p>\n      ) : (\n        <ul>\n          {openMatches.map((m) => (\n            <li key={m.id}>\n              {m.id.slice(0, 6)}… | {m.amount} SOL{\" \"}\n              {m.creator === walletAddress ? (\n                <button onClick={() => cancelMatch(m)} style={{ marginLeft: 10 }}>\n                  Cancel\n                </button>\n              ) : (\n                <button\n                  onClick={() => acceptMatch(m)}\n                  disabled={!!currentMatch || isAccepting}\n                  style={{ marginLeft: 10 }}\n                >\n                  {isAccepting ? \"Accepting…\" : \"Accept\"}\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </section>\n  );\n\n  const renderWaiting = () => (\n    <section className=\"waiting-section\">\n      <h2>Waiting for opponent…</h2>\n      <button onClick={() => cancelMatch(currentMatch)}>Cancel Match</button>\n    </section>\n  );\n\n  const renderRace = () => (\n    <section className=\"race-section\">\n      {matchStatus === \"ready\" && <h2>Starting in {countdown}</h2>}\n      {matchStatus === \"racing\" && (\n        <>\n          <div className=\"sentence-display\">{sentence}</div>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInput}\n            onPaste={handleInput}\n            placeholder=\"Start typing…\"\n            disabled={isInputDisabled}\n            autoFocus\n          />\n          <div className=\"track\">\n            <div className=\"lane\">\n              <div className=\"car car-player\" style={{ left: `${playerProgress * 100}%` }}>\n                🚗\n              </div>\n            </div>\n            <div className=\"lane\">\n              <div className=\"car car-opponent\" style={{ left: `${opponentProgress * 100}%` }}>\n                🏎️\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"win\" && (\n        <div className=\"results results-win\">\n          <h2 style={{ fontSize: \"2rem\" }}>🏆 You Won!</h2>\n          <button\n            onClick={async () => {\n              try {\n                await resolveEscrow(new PublicKey(currentMatch.id), publicKey);\n                resetGame();\n              } catch (e) {\n                console.error(e);\n                alert(\"Payout error:\\n\" + e.message);\n              }\n            }}\n          >\n            Claim Winnings\n          </button>\n        </div>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"lose\" && (\n        <div className=\"results results-lose\" style={{ textAlign: \"center\" }}>\n          <h2 style={{ fontSize: \"2rem\", color: \"#c0392b\" }}>😢 You Lost!</h2>\n          <p>Better luck next time!</p>\n          <button onClick={resetGame}>Back to Matches</button>\n        </div>\n      )}\n    </section>\n  );\n\n  const renderChat = () => (\n    <section className=\"chat-section\">\n      <h2>Chat</h2>\n      <div className=\"chat-messages\" style={{ maxHeight: 150, overflowY: \"auto\" }}>\n        {chatMessages.map((msg, i) => (\n          <p key={i} className={msg.sender === walletAddress ? \"self\" : \"other\"}>\n            <strong>{msg.sender.slice(0, 6)}…:</strong> {msg.message}\n          </p>\n        ))}\n      </div>\n      <input\n        value={chatInput}\n        onChange={(e) => setChatInput(e.target.value)}\n        onKeyDown={(e) =>\n          e.key === \"Enter\" &&\n          socket.emit(\"message\", { matchId: currentMatch.id, sender: walletAddress, message: chatInput }) &&\n          setChatInput(\"\")\n        }\n      />\n      <button\n        onClick={() => {\n          socket.emit(\"message\", { matchId: currentMatch.id, sender: walletAddress, message: chatInput });\n          setChatInput(\"\");\n        }}\n        disabled={!chatInput.trim()}\n      >\n        Send\n      </button>\n    </section>\n  );\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Type Racer</h1>\n        {connected ? (\n          <div className=\"wallet-info\">\n            {walletAddress.slice(0, 6)}… ({walletBalance.toFixed(2)} SOL)\n          </div>\n        ) : (\n          <WalletMultiButton />\n        )}\n      </header>\n\n      {!connected && <p>Please connect your wallet to play.</p>}\n      {connected && !currentMatch && renderMatchmaking()}\n      {connected && currentMatch && matchStatus === \"waiting\" && renderWaiting()}\n      {connected &&\n        currentMatch &&\n        (matchStatus === \"ready\" || matchStatus === \"racing\" || matchStatus === \"finished\") &&\n        renderRace()}\n      {connected && currentMatch && matchStatus === \"finished\" && renderChat()}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}