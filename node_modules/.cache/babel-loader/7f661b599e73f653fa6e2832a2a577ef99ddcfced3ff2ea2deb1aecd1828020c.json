{"ast":null,"code":"// frontend/src/escrow.js\nimport * as anchor from \"@coral-xyz/anchor\";\nimport { getProgram } from \"./solana\";\n\n/**\n * Initialize the escrow on‑chain and return its PDA.\n */\nexport async function initializeEscrow(wagerLamports) {\n  const program = getProgram();\n  const walletPk = program.provider.wallet.publicKey;\n\n  // random nonce for PDA uniqueness\n  const nonce = new anchor.BN(Math.floor(Math.random() * Number.MAX_SAFE_INTEGER), 10, \"le\");\n  const [escrowPda] = await anchor.web3.PublicKey.findProgramAddress([Buffer.from(\"escrow\"), walletPk.toBuffer(), nonce.toArrayLike(Buffer, \"le\", 8)], program.programId);\n  try {\n    const sig = await program.methods.initialize(new anchor.BN(wagerLamports), nonce).accounts({\n      escrow: escrowPda,\n      player1: walletPk,\n      authority: walletPk,\n      systemProgram: anchor.web3.SystemProgram.programId\n    }).rpc({\n      skipPreflight: true,\n      preflightCommitment: \"confirmed\"\n    });\n    console.log(\"[escrow.js] Sent initialize tx\", sig);\n    // NO confirmation wait!\n  } catch (e) {\n    console.error(\"initializeEscrow failed:\", e);\n    if (e.getLogs) console.error(\"Logs:\", await e.getLogs());else if (e.logs) console.error(\"Logs:\", e.logs);\n    // Don't block or throw!\n  }\n  return escrowPda;\n}\n\n/**\n * Join the escrow. Returns tx signature.\n */\nexport async function joinEscrow(escrowPda) {\n  const program = getProgram();\n  try {\n    const sig = await program.methods.join().accounts({\n      escrow: escrowPda,\n      player2: program.provider.wallet.publicKey\n    }).rpc({\n      skipPreflight: true,\n      preflightCommitment: \"confirmed\"\n    });\n    console.log(\"[escrow.js] Sent join tx\", sig);\n    // NO confirmation wait!\n    return sig;\n  } catch (e) {\n    console.error(\"joinEscrow failed:\", e);\n    if (e.getLogs) console.error(\"Logs:\", await e.getLogs());else if (e.logs) console.error(\"Logs:\", e.logs);\n    // Don't block or throw!\n  }\n}\n\n/**\n * Deposit into the escrow. Returns tx signature.\n */\nexport async function depositToEscrow(escrowPda) {\n  const program = getProgram();\n  try {\n    const sig = await program.methods.deposit().accounts({\n      escrow: escrowPda,\n      payer: program.provider.wallet.publicKey,\n      escrowAccount: escrowPda,\n      systemProgram: anchor.web3.SystemProgram.programId\n    }).rpc({\n      skipPreflight: true,\n      preflightCommitment: \"confirmed\"\n    });\n    console.log(\"[escrow.js] Sent deposit tx\", sig);\n    // NO confirmation wait!\n    return sig;\n  } catch (e) {\n    console.error(\"depositToEscrow failed:\", e);\n    if (e.getLogs) console.error(\"Logs:\", await e.getLogs());else if (e.logs) console.error(\"Logs:\", e.logs);\n    // Don't block or throw!\n  }\n}\n\n/**\n * Resolve the escrow, paying out the winner and house. Returns tx signature.\n */\nexport async function resolveEscrow(escrowPda, winnerPubkey) {\n  const program = getProgram();\n  const house = new anchor.web3.PublicKey(\"A32Burni3cYyFAqjZM3CvCrStAKRFCfftk196Xfpx9Hs\");\n  try {\n    const sig = await program.methods.resolve(winnerPubkey).accounts({\n      escrow: escrowPda,\n      winner: winnerPubkey,\n      house,\n      escrowAccount: escrowPda,\n      authority: program.provider.wallet.publicKey\n    }).rpc({\n      skipPreflight: true,\n      preflightCommitment: \"confirmed\"\n    });\n    console.log(\"[escrow.js] Sent resolve tx\", sig);\n    // NO confirmation wait!\n    return sig;\n  } catch (e) {\n    console.error(\"resolveEscrow failed:\", e);\n    if (e.getLogs) console.error(\"Logs:\", await e.getLogs());else if (e.logs) console.error(\"Logs:\", e.logs);\n    // Don't block or throw!\n  }\n}\n\n/**\n * Cancel the escrow and refund both players. Returns tx signature.\n */\nexport async function cancelEscrow(escrowPda, player1, player2) {\n  const program = getProgram();\n  try {\n    const sig = await program.methods.cancel().accounts({\n      escrow: escrowPda,\n      player1,\n      player2,\n      escrowAccount: escrowPda,\n      authority: program.provider.wallet.publicKey\n    }).rpc({\n      skipPreflight: true,\n      preflightCommitment: \"confirmed\"\n    });\n    console.log(\"[escrow.js] Sent cancel tx\", sig);\n    // NO confirmation wait!\n    return sig;\n  } catch (e) {\n    console.error(\"cancelEscrow failed:\", e);\n    if (e.getLogs) console.error(\"Logs:\", await e.getLogs());else if (e.logs) console.error(\"Logs:\", e.logs);\n    // Don't block or throw!\n  }\n}","map":{"version":3,"names":["anchor","getProgram","initializeEscrow","wagerLamports","program","walletPk","provider","wallet","publicKey","nonce","BN","Math","floor","random","Number","MAX_SAFE_INTEGER","escrowPda","web3","PublicKey","findProgramAddress","Buffer","from","toBuffer","toArrayLike","programId","sig","methods","initialize","accounts","escrow","player1","authority","systemProgram","SystemProgram","rpc","skipPreflight","preflightCommitment","console","log","e","error","getLogs","logs","joinEscrow","join","player2","depositToEscrow","deposit","payer","escrowAccount","resolveEscrow","winnerPubkey","house","resolve","winner","cancelEscrow","cancel"],"sources":["/home/kokoi/sol-wager-app/frontend/src/escrow.js"],"sourcesContent":["// frontend/src/escrow.js\nimport * as anchor from \"@coral-xyz/anchor\";\nimport { getProgram } from \"./solana\";\n\n/**\n * Initialize the escrow on‑chain and return its PDA.\n */\nexport async function initializeEscrow(wagerLamports) {\n  const program = getProgram();\n  const walletPk = program.provider.wallet.publicKey;\n\n  // random nonce for PDA uniqueness\n  const nonce = new anchor.BN(\n    Math.floor(Math.random() * Number.MAX_SAFE_INTEGER),\n    10,\n    \"le\"\n  );\n\n  const [escrowPda] = await anchor.web3.PublicKey.findProgramAddress(\n    [\n      Buffer.from(\"escrow\"),\n      walletPk.toBuffer(),\n      nonce.toArrayLike(Buffer, \"le\", 8),\n    ],\n    program.programId\n  );\n\n  try {\n    const sig = await program.methods\n      .initialize(new anchor.BN(wagerLamports), nonce)\n      .accounts({\n        escrow: escrowPda,\n        player1: walletPk,\n        authority: walletPk,\n        systemProgram: anchor.web3.SystemProgram.programId,\n      })\n      .rpc({\n        skipPreflight: true,\n        preflightCommitment: \"confirmed\",\n      });\n    console.log(\"[escrow.js] Sent initialize tx\", sig);\n    // NO confirmation wait!\n  } catch (e) {\n    console.error(\"initializeEscrow failed:\", e);\n    if (e.getLogs) console.error(\"Logs:\", await e.getLogs());\n    else if (e.logs) console.error(\"Logs:\", e.logs);\n    // Don't block or throw!\n  }\n\n  return escrowPda;\n}\n\n/**\n * Join the escrow. Returns tx signature.\n */\nexport async function joinEscrow(escrowPda) {\n  const program = getProgram();\n  try {\n    const sig = await program.methods\n      .join()\n      .accounts({\n        escrow: escrowPda,\n        player2: program.provider.wallet.publicKey,\n      })\n      .rpc({\n        skipPreflight: true,\n        preflightCommitment: \"confirmed\",\n      });\n    console.log(\"[escrow.js] Sent join tx\", sig);\n    // NO confirmation wait!\n    return sig;\n  } catch (e) {\n    console.error(\"joinEscrow failed:\", e);\n    if (e.getLogs) console.error(\"Logs:\", await e.getLogs());\n    else if (e.logs) console.error(\"Logs:\", e.logs);\n    // Don't block or throw!\n  }\n}\n\n/**\n * Deposit into the escrow. Returns tx signature.\n */\nexport async function depositToEscrow(escrowPda) {\n  const program = getProgram();\n  try {\n    const sig = await program.methods\n      .deposit()\n      .accounts({\n        escrow: escrowPda,\n        payer: program.provider.wallet.publicKey,\n        escrowAccount: escrowPda,\n        systemProgram: anchor.web3.SystemProgram.programId,\n      })\n      .rpc({\n        skipPreflight: true,\n        preflightCommitment: \"confirmed\",\n      });\n    console.log(\"[escrow.js] Sent deposit tx\", sig);\n    // NO confirmation wait!\n    return sig;\n  } catch (e) {\n    console.error(\"depositToEscrow failed:\", e);\n    if (e.getLogs) console.error(\"Logs:\", await e.getLogs());\n    else if (e.logs) console.error(\"Logs:\", e.logs);\n    // Don't block or throw!\n  }\n}\n\n/**\n * Resolve the escrow, paying out the winner and house. Returns tx signature.\n */\nexport async function resolveEscrow(escrowPda, winnerPubkey) {\n  const program = getProgram();\n  const house = new anchor.web3.PublicKey(\n    \"A32Burni3cYyFAqjZM3CvCrStAKRFCfftk196Xfpx9Hs\"\n  );\n  try {\n    const sig = await program.methods\n      .resolve(winnerPubkey)\n      .accounts({\n        escrow: escrowPda,\n        winner: winnerPubkey,\n        house,\n        escrowAccount: escrowPda,\n        authority: program.provider.wallet.publicKey,\n      })\n      .rpc({\n        skipPreflight: true,\n        preflightCommitment: \"confirmed\",\n      });\n    console.log(\"[escrow.js] Sent resolve tx\", sig);\n    // NO confirmation wait!\n    return sig;\n  } catch (e) {\n    console.error(\"resolveEscrow failed:\", e);\n    if (e.getLogs) console.error(\"Logs:\", await e.getLogs());\n    else if (e.logs) console.error(\"Logs:\", e.logs);\n    // Don't block or throw!\n  }\n}\n\n/**\n * Cancel the escrow and refund both players. Returns tx signature.\n */\nexport async function cancelEscrow(escrowPda, player1, player2) {\n  const program = getProgram();\n  try {\n    const sig = await program.methods\n      .cancel()\n      .accounts({\n        escrow: escrowPda,\n        player1,\n        player2,\n        escrowAccount: escrowPda,\n        authority: program.provider.wallet.publicKey,\n      })\n      .rpc({\n        skipPreflight: true,\n        preflightCommitment: \"confirmed\",\n      });\n    console.log(\"[escrow.js] Sent cancel tx\", sig);\n    // NO confirmation wait!\n    return sig;\n  } catch (e) {\n    console.error(\"cancelEscrow failed:\", e);\n    if (e.getLogs) console.error(\"Logs:\", await e.getLogs());\n    else if (e.logs) console.error(\"Logs:\", e.logs);\n    // Don't block or throw!\n  }\n}\n"],"mappings":"AAAA;AACA,OAAO,KAAKA,MAAM,MAAM,mBAAmB;AAC3C,SAASC,UAAU,QAAQ,UAAU;;AAErC;AACA;AACA;AACA,OAAO,eAAeC,gBAAgBA,CAACC,aAAa,EAAE;EACpD,MAAMC,OAAO,GAAGH,UAAU,CAAC,CAAC;EAC5B,MAAMI,QAAQ,GAAGD,OAAO,CAACE,QAAQ,CAACC,MAAM,CAACC,SAAS;;EAElD;EACA,MAAMC,KAAK,GAAG,IAAIT,MAAM,CAACU,EAAE,CACzBC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGC,MAAM,CAACC,gBAAgB,CAAC,EACnD,EAAE,EACF,IACF,CAAC;EAED,MAAM,CAACC,SAAS,CAAC,GAAG,MAAMhB,MAAM,CAACiB,IAAI,CAACC,SAAS,CAACC,kBAAkB,CAChE,CACEC,MAAM,CAACC,IAAI,CAAC,QAAQ,CAAC,EACrBhB,QAAQ,CAACiB,QAAQ,CAAC,CAAC,EACnBb,KAAK,CAACc,WAAW,CAACH,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CACnC,EACDhB,OAAO,CAACoB,SACV,CAAC;EAED,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMrB,OAAO,CAACsB,OAAO,CAC9BC,UAAU,CAAC,IAAI3B,MAAM,CAACU,EAAE,CAACP,aAAa,CAAC,EAAEM,KAAK,CAAC,CAC/CmB,QAAQ,CAAC;MACRC,MAAM,EAAEb,SAAS;MACjBc,OAAO,EAAEzB,QAAQ;MACjB0B,SAAS,EAAE1B,QAAQ;MACnB2B,aAAa,EAAEhC,MAAM,CAACiB,IAAI,CAACgB,aAAa,CAACT;IAC3C,CAAC,CAAC,CACDU,GAAG,CAAC;MACHC,aAAa,EAAE,IAAI;MACnBC,mBAAmB,EAAE;IACvB,CAAC,CAAC;IACJC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEb,GAAG,CAAC;IAClD;EACF,CAAC,CAAC,OAAOc,CAAC,EAAE;IACVF,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAED,CAAC,CAAC;IAC5C,IAAIA,CAAC,CAACE,OAAO,EAAEJ,OAAO,CAACG,KAAK,CAAC,OAAO,EAAE,MAAMD,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,KACpD,IAAIF,CAAC,CAACG,IAAI,EAAEL,OAAO,CAACG,KAAK,CAAC,OAAO,EAAED,CAAC,CAACG,IAAI,CAAC;IAC/C;EACF;EAEA,OAAO1B,SAAS;AAClB;;AAEA;AACA;AACA;AACA,OAAO,eAAe2B,UAAUA,CAAC3B,SAAS,EAAE;EAC1C,MAAMZ,OAAO,GAAGH,UAAU,CAAC,CAAC;EAC5B,IAAI;IACF,MAAMwB,GAAG,GAAG,MAAMrB,OAAO,CAACsB,OAAO,CAC9BkB,IAAI,CAAC,CAAC,CACNhB,QAAQ,CAAC;MACRC,MAAM,EAAEb,SAAS;MACjB6B,OAAO,EAAEzC,OAAO,CAACE,QAAQ,CAACC,MAAM,CAACC;IACnC,CAAC,CAAC,CACD0B,GAAG,CAAC;MACHC,aAAa,EAAE,IAAI;MACnBC,mBAAmB,EAAE;IACvB,CAAC,CAAC;IACJC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEb,GAAG,CAAC;IAC5C;IACA,OAAOA,GAAG;EACZ,CAAC,CAAC,OAAOc,CAAC,EAAE;IACVF,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAED,CAAC,CAAC;IACtC,IAAIA,CAAC,CAACE,OAAO,EAAEJ,OAAO,CAACG,KAAK,CAAC,OAAO,EAAE,MAAMD,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,KACpD,IAAIF,CAAC,CAACG,IAAI,EAAEL,OAAO,CAACG,KAAK,CAAC,OAAO,EAAED,CAAC,CAACG,IAAI,CAAC;IAC/C;EACF;AACF;;AAEA;AACA;AACA;AACA,OAAO,eAAeI,eAAeA,CAAC9B,SAAS,EAAE;EAC/C,MAAMZ,OAAO,GAAGH,UAAU,CAAC,CAAC;EAC5B,IAAI;IACF,MAAMwB,GAAG,GAAG,MAAMrB,OAAO,CAACsB,OAAO,CAC9BqB,OAAO,CAAC,CAAC,CACTnB,QAAQ,CAAC;MACRC,MAAM,EAAEb,SAAS;MACjBgC,KAAK,EAAE5C,OAAO,CAACE,QAAQ,CAACC,MAAM,CAACC,SAAS;MACxCyC,aAAa,EAAEjC,SAAS;MACxBgB,aAAa,EAAEhC,MAAM,CAACiB,IAAI,CAACgB,aAAa,CAACT;IAC3C,CAAC,CAAC,CACDU,GAAG,CAAC;MACHC,aAAa,EAAE,IAAI;MACnBC,mBAAmB,EAAE;IACvB,CAAC,CAAC;IACJC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEb,GAAG,CAAC;IAC/C;IACA,OAAOA,GAAG;EACZ,CAAC,CAAC,OAAOc,CAAC,EAAE;IACVF,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAED,CAAC,CAAC;IAC3C,IAAIA,CAAC,CAACE,OAAO,EAAEJ,OAAO,CAACG,KAAK,CAAC,OAAO,EAAE,MAAMD,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,KACpD,IAAIF,CAAC,CAACG,IAAI,EAAEL,OAAO,CAACG,KAAK,CAAC,OAAO,EAAED,CAAC,CAACG,IAAI,CAAC;IAC/C;EACF;AACF;;AAEA;AACA;AACA;AACA,OAAO,eAAeQ,aAAaA,CAAClC,SAAS,EAAEmC,YAAY,EAAE;EAC3D,MAAM/C,OAAO,GAAGH,UAAU,CAAC,CAAC;EAC5B,MAAMmD,KAAK,GAAG,IAAIpD,MAAM,CAACiB,IAAI,CAACC,SAAS,CACrC,8CACF,CAAC;EACD,IAAI;IACF,MAAMO,GAAG,GAAG,MAAMrB,OAAO,CAACsB,OAAO,CAC9B2B,OAAO,CAACF,YAAY,CAAC,CACrBvB,QAAQ,CAAC;MACRC,MAAM,EAAEb,SAAS;MACjBsC,MAAM,EAAEH,YAAY;MACpBC,KAAK;MACLH,aAAa,EAAEjC,SAAS;MACxBe,SAAS,EAAE3B,OAAO,CAACE,QAAQ,CAACC,MAAM,CAACC;IACrC,CAAC,CAAC,CACD0B,GAAG,CAAC;MACHC,aAAa,EAAE,IAAI;MACnBC,mBAAmB,EAAE;IACvB,CAAC,CAAC;IACJC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEb,GAAG,CAAC;IAC/C;IACA,OAAOA,GAAG;EACZ,CAAC,CAAC,OAAOc,CAAC,EAAE;IACVF,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAED,CAAC,CAAC;IACzC,IAAIA,CAAC,CAACE,OAAO,EAAEJ,OAAO,CAACG,KAAK,CAAC,OAAO,EAAE,MAAMD,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,KACpD,IAAIF,CAAC,CAACG,IAAI,EAAEL,OAAO,CAACG,KAAK,CAAC,OAAO,EAAED,CAAC,CAACG,IAAI,CAAC;IAC/C;EACF;AACF;;AAEA;AACA;AACA;AACA,OAAO,eAAea,YAAYA,CAACvC,SAAS,EAAEc,OAAO,EAAEe,OAAO,EAAE;EAC9D,MAAMzC,OAAO,GAAGH,UAAU,CAAC,CAAC;EAC5B,IAAI;IACF,MAAMwB,GAAG,GAAG,MAAMrB,OAAO,CAACsB,OAAO,CAC9B8B,MAAM,CAAC,CAAC,CACR5B,QAAQ,CAAC;MACRC,MAAM,EAAEb,SAAS;MACjBc,OAAO;MACPe,OAAO;MACPI,aAAa,EAAEjC,SAAS;MACxBe,SAAS,EAAE3B,OAAO,CAACE,QAAQ,CAACC,MAAM,CAACC;IACrC,CAAC,CAAC,CACD0B,GAAG,CAAC;MACHC,aAAa,EAAE,IAAI;MACnBC,mBAAmB,EAAE;IACvB,CAAC,CAAC;IACJC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEb,GAAG,CAAC;IAC9C;IACA,OAAOA,GAAG;EACZ,CAAC,CAAC,OAAOc,CAAC,EAAE;IACVF,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAED,CAAC,CAAC;IACxC,IAAIA,CAAC,CAACE,OAAO,EAAEJ,OAAO,CAACG,KAAK,CAAC,OAAO,EAAE,MAAMD,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,KACpD,IAAIF,CAAC,CAACG,IAAI,EAAEL,OAAO,CAACG,KAAK,CAAC,OAAO,EAAED,CAAC,CAACG,IAAI,CAAC;IAC/C;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}