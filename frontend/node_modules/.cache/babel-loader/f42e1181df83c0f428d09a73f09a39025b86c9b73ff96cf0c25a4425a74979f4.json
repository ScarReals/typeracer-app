{"ast":null,"code":"var _jsxFileName = \"/home/kokoi/sol-wager-app/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey, SystemProgram, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport idl from \"./idl/typeracer_escrow.json\";\n\n// Program ID from IDL\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PROGRAM_ID = new PublicKey(idl.address);\nexport default function App() {\n  _s();\n  const {\n    connection\n  } = useConnection();\n  const wallet = useWallet();\n  const {\n    publicKey,\n    connected\n  } = wallet;\n  const walletAddress = (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) || \"\";\n  const providerRef = useRef(null);\n\n  // --- Anchor provider setup ---\n  useEffect(() => {\n    if (connected && connection) {\n      const provider = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\"\n      });\n      anchor.setProvider(provider);\n      providerRef.current = provider;\n    }\n  }, [connected, connection, wallet]);\n\n  // --- Wallet balance ---\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (!connection || !publicKey) return;\n    connection.getBalance(publicKey).then(lamports => setWalletBalance(lamports / LAMPORTS_PER_SOL)).catch(console.warn);\n  }, [connection, publicKey]);\n\n  // --- Game state ---\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n\n  // --- Race state ---\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // --- Chat state ---\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // --- Anti-cheat ---\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // --- Socket listeners ---\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", ms => setOpenMatches(ms));\n    socket.on(\"newMatch\", m => setOpenMatches(os => [...os, m]));\n    socket.on(\"removeMatch\", id => setOpenMatches(os => os.filter(m => m.id !== id)));\n    socket.on(\"startMatch\", ({\n      id,\n      players\n    }) => {\n      if ((currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.id) === id) {\n        setMatchStatus(\"ready\");\n        setSentence(chooseSentence(id));\n        setCountdown(3);\n        setOpponentWallet(players.find(w => w !== walletAddress));\n      }\n    });\n    socket.on(\"opponentProgress\", ({\n      wallet: w,\n      progress\n    }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({\n      winner,\n      progressMap\n    }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: winner === walletAddress ? \"win\" : \"lose\"\n      });\n      if (progressMap) {\n        var _progressMap$walletAd, _progressMap$opponent;\n        setPlayerProgress((_progressMap$walletAd = progressMap[walletAddress]) !== null && _progressMap$walletAd !== void 0 ? _progressMap$walletAd : 0);\n        setOpponentProgress((_progressMap$opponent = progressMap[opponentWallet]) !== null && _progressMap$opponent !== void 0 ? _progressMap$opponent : 0);\n      }\n    });\n    socket.on(\"chat\", msgs => setChatMessages(msgs));\n    socket.on(\"opponentLeft\", async () => {\n      if (matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && currentMatch !== null && currentMatch !== void 0 && currentMatch.id) {\n        try {\n          await resolveEscrow(new PublicKey(currentMatch.id), publicKey, providerRef.current);\n        } catch (e) {\n          console.error(\"Auto-claim failed:\", e);\n        }\n      }\n      resetGame();\n    });\n    return () => socket.removeAllListeners();\n  }, [currentMatch, walletAddress, opponentWallet, matchStatus, raceResult, publicKey]);\n\n  // --- Countdown effect ---\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown(c => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      var _inputRef$current;\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // --- Helpers ---\n  const chooseSentence = id => {\n    const sum = Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0);\n    return sentences[sum % sentences.length];\n  };\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // === Bundled createMatch ===\n  async function createMatch() {\n    if (!connected) return alert(\"Connect your wallet first\");\n    const provider = providerRef.current;\n    if (!provider) return alert(\"Provider not ready\");\n    const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n    const program = new anchor.Program(idl, PROGRAM_ID, provider);\n    const nonce = Math.floor(Math.random() * 1000000);\n    try {\n      // 1) Derive escrow PDA\n      const [escrowPda] = await PublicKey.findProgramAddress([Buffer.from(\"escrow\"), provider.wallet.publicKey.toBuffer(), new anchor.BN(nonce).toArrayLike(Buffer, \"le\", 8)], program.programId);\n\n      // 2) Initialize instruction\n      const ixInit = await program.methods.initialize(new anchor.BN(lamports), new anchor.BN(nonce)).accounts({\n        escrow: escrowPda,\n        player1: provider.wallet.publicKey,\n        authority: provider.wallet.publicKey,\n        systemProgram: SystemProgram.programId\n      }).instruction();\n\n      // 3) Fetch vault PDA from on‑chain escrow account\n      const escrowAccount = await program.account.escrow.fetch(escrowPda);\n      const vaultPda = escrowAccount.escrowAccount;\n\n      // 4) Deposit instruction\n      const ixDeposit = await program.methods.deposit().accounts({\n        escrow: escrowPda,\n        payer: provider.wallet.publicKey,\n        escrowAccount: vaultPda,\n        systemProgram: SystemProgram.programId\n      }).instruction();\n\n      // 5) Bundle tx, set feePayer and blockhash\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      tx.feePayer = provider.wallet.publicKey;\n      const {\n        blockhash\n      } = await provider.connection.getLatestBlockhash(\"confirmed\");\n      tx.recentBlockhash = blockhash;\n\n      // 6) Sign once (one popup)\n      const signed = await provider.wallet.signTransaction(tx);\n\n      // 7) Send & confirm\n      const sig = await provider.connection.sendRawTransaction(signed.serialize(), {\n        skipPreflight: false,\n        preflightCommitment: \"confirmed\"\n      });\n      await provider.connection.confirmTransaction(sig, \"confirmed\");\n      console.log(\"createMatch tx:\", sig);\n\n      // 8) Register match backend & socket\n      const id = escrowPda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddress,\n          feePercent: 5\n        })\n      });\n      setCurrentMatch({\n        id,\n        amount: Number(wager),\n        creator: walletAddress\n      });\n      socket.emit(\"joinMatch\", id);\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"createMatch failed:\", e);\n      alert(`Failed to create match:\\n${e.message || e}`);\n    }\n  }\n\n  // --- acceptMatch, cancelMatch, handleInput, and renderers below ---\n\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect your wallet first\");\n    setIsAccepting(true);\n    const provider = providerRef.current;\n    const program = new anchor.Program(idl, PROGRAM_ID, provider);\n    const pda = new PublicKey(m.id);\n    setCurrentMatch({\n      ...m,\n      accepter: walletAddress\n    });\n    socket.emit(\"joinMatch\", m.id);\n    try {\n      await program.methods.joinAndDeposit().accounts({\n        escrow: pda,\n        player2: provider.wallet.publicKey,\n        escrowAccount: (await program.account.escrow.fetch(pda)).escrowAccount,\n        systemProgram: SystemProgram.programId\n      }).rpc();\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          accepter: walletAddress\n        })\n      });\n      setMatchStatus(\"ready\");\n      setCountdown(3);\n    } catch (e) {\n      console.error(\"acceptMatch failed:\", e);\n      alert(`Failed to accept match:\\n${e.message || e}`);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n  async function cancelMatch(m) {\n    const provider = providerRef.current;\n    const program = new anchor.Program(idl, PROGRAM_ID, provider);\n    const pda = new PublicKey(m.id);\n    try {\n      await program.methods.cancel().accounts({\n        escrow: pda,\n        player1: new PublicKey(m.creator),\n        player2: new PublicKey(m.accepter || m.creator),\n        escrowAccount: (await program.account.escrow.fetch(pda)).escrowAccount,\n        authority: provider.wallet.publicKey\n      }).rpc();\n      await fetch(`${API}/wagers/${m.id}/cancel`, {\n        method: \"POST\"\n      });\n      resetGame();\n    } catch (e) {\n      console.error(\"cancelMatch failed:\", e);\n      alert(`Failed to cancel match:\\n${e.message || e}`);\n    }\n  }\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: rawProg\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          winner: walletAddress\n        })\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: \"win\"\n      });\n    }\n  }\n  const renderMatchmaking = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"matchmaking\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Wager (SOL):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0.01\",\n        step: \"0.01\",\n        value: wager,\n        onChange: e => setWager(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createMatch,\n      disabled: !wager || wager <= 0,\n      children: \"Create Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: 20\n      },\n      children: \"Open Matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), openMatches.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No open matches. Create one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: openMatches.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [m.id.slice(0, 6), \"\\u2026 | \", m.amount, \" SOL\", \" \", m.creator === walletAddress ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cancelMatch(m),\n          style: {\n            marginLeft: 10\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptMatch(m),\n          disabled: !!currentMatch || isAccepting,\n          style: {\n            marginLeft: 10\n          },\n          children: isAccepting ? \"Accepting…\" : \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 17\n        }, this)]\n      }, m.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 5\n  }, this);\n  const renderWaiting = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"waiting-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for opponent\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => cancelMatch(currentMatch),\n      children: \"Cancel Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 406,\n    columnNumber: 5\n  }, this);\n  const renderRace = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"race-section\",\n    children: [matchStatus === \"ready\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Starting in \", countdown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 35\n    }, this), matchStatus === \"racing\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence-display\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInput,\n        onPaste: handleInput,\n        placeholder: \"Start typing\\u2026\",\n        disabled: isInputDisabled,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-player\",\n            style: {\n              left: `${playerProgress * 100}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-opponent\",\n            style: {\n              left: `${opponentProgress * 100}%`\n            },\n            children: \"\\uD83C\\uDFCE\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-win\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\"\n        },\n        children: \"\\uD83C\\uDFC6 You Won!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          try {\n            await resolveEscrow(new PublicKey(currentMatch.id), publicKey, providerRef.current);\n            resetGame();\n          } catch (e) {\n            console.error(e);\n            alert(\"Payout error: \" + (e.message || e));\n          }\n        },\n        children: \"Claim Winnings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }, this), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"lose\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-lose\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\",\n          color: \"#c0392b\"\n        },\n        children: \"\\uD83D\\uDE22 You Lost!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Better luck next time!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Back to Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 413,\n    columnNumber: 5\n  }, this);\n  const renderChat = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      style: {\n        maxHeight: 150,\n        overflowY: \"auto\"\n      },\n      children: chatMessages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: msg.sender === walletAddress ? \"self\" : \"other\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender.slice(0, 6), \"\\u2026:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: chatInput,\n      onChange: e => setChatInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && socket.emit(\"message\", {\n        matchId: currentMatch.id,\n        sender: walletAddress,\n        message: chatInput\n      }) && setChatInput(\"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        socket.emit(\"message\", {\n          matchId: currentMatch.id,\n          sender: walletAddress,\n          message: chatInput\n        });\n        setChatInput(\"\");\n      },\n      disabled: !chatInput.trim(),\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 481,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Type Racer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 9\n      }, this), connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: [walletAddress.slice(0, 6), \"\\u2026 (\", walletBalance.toFixed(2), \" SOL)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 7\n    }, this), !connected && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your wallet to play.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 22\n    }, this), connected && !currentMatch && renderMatchmaking(), connected && currentMatch && matchStatus === \"waiting\" && renderWaiting(), connected && currentMatch && (matchStatus === \"ready\" || matchStatus === \"racing\" || matchStatus === \"finished\") && renderRace(), connected && currentMatch && matchStatus === \"finished\" && renderChat()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 520,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wu2fuNG/zk/9+z8/jdN4mkZm/2Q=\", false, function () {\n  return [useConnection, useWallet];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","sentences","useConnection","useWallet","WalletMultiButton","LAMPORTS_PER_SOL","PublicKey","SystemProgram","Transaction","socket","anchor","idl","jsxDEV","_jsxDEV","Fragment","_Fragment","PROGRAM_ID","address","App","_s","connection","wallet","publicKey","connected","walletAddress","toBase58","providerRef","provider","AnchorProvider","preflightCommitment","setProvider","current","walletBalance","setWalletBalance","getBalance","then","lamports","catch","console","warn","wager","setWager","openMatches","setOpenMatches","currentMatch","setCurrentMatch","matchStatus","setMatchStatus","sentence","setSentence","inputValue","setInputValue","playerProgress","setPlayerProgress","opponentProgress","setOpponentProgress","countdown","setCountdown","raceResult","setRaceResult","isInputDisabled","setIsInputDisabled","isAccepting","setIsAccepting","opponentWallet","setOpponentWallet","chatMessages","setChatMessages","chatInput","setChatInput","inputRef","API","process","env","REACT_APP_API_URL","lastProgTime","setLastProgTime","Date","now","lastProg","setLastProg","MAX_CPS","connect","on","ms","m","os","id","filter","players","chooseSentence","find","w","progress","winner","progressMap","result","_progressMap$walletAd","_progressMap$opponent","msgs","resolveEscrow","e","error","resetGame","removeAllListeners","t","setTimeout","c","clearTimeout","_inputRef$current","focus","sum","Array","from","reduce","a","charCodeAt","length","fetchOpenMatches","res","fetch","json","createMatch","alert","Math","floor","program","Program","nonce","random","escrowPda","findProgramAddress","Buffer","toBuffer","BN","toArrayLike","programId","ixInit","methods","initialize","accounts","escrow","player1","authority","systemProgram","instruction","escrowAccount","account","vaultPda","ixDeposit","deposit","payer","tx","add","feePayer","blockhash","getLatestBlockhash","recentBlockhash","signed","signTransaction","sig","sendRawTransaction","serialize","skipPreflight","confirmTransaction","log","method","headers","body","JSON","stringify","amount","Number","creator","feePercent","emit","message","acceptMatch","pda","accepter","joinAndDeposit","player2","rpc","cancelMatch","cancel","handleInput","type","preventDefault","val","target","value","rawProg","min","deltaProg","deltaTime","chars","cps","matchId","renderMatchmaking","className","children","fileName","_jsxFileName","lineNumber","columnNumber","step","onChange","onClick","disabled","style","marginTop","map","slice","marginLeft","renderWaiting","renderRace","ref","onPaste","placeholder","autoFocus","left","fontSize","textAlign","color","renderChat","maxHeight","overflowY","msg","i","sender","onKeyDown","key","trim","toFixed","_c","$RefreshReg$"],"sources":["/home/kokoi/sol-wager-app/frontend/src/App.jsx"],"sourcesContent":["// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport {\n  LAMPORTS_PER_SOL,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n} from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport idl from \"./idl/typeracer_escrow.json\";\n\n// Program ID from IDL\nconst PROGRAM_ID = new PublicKey(idl.address);\n\nexport default function App() {\n  const { connection } = useConnection();\n  const wallet = useWallet();\n  const { publicKey, connected } = wallet;\n  const walletAddress = publicKey?.toBase58() || \"\";\n  const providerRef = useRef(null);\n\n  // --- Anchor provider setup ---\n  useEffect(() => {\n    if (connected && connection) {\n      const provider = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n      });\n      anchor.setProvider(provider);\n      providerRef.current = provider;\n    }\n  }, [connected, connection, wallet]);\n\n  // --- Wallet balance ---\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (!connection || !publicKey) return;\n    connection\n      .getBalance(publicKey)\n      .then((lamports) => setWalletBalance(lamports / LAMPORTS_PER_SOL))\n      .catch(console.warn);\n  }, [connection, publicKey]);\n\n  // --- Game state ---\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n\n  // --- Race state ---\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // --- Chat state ---\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // --- Anti-cheat ---\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // --- Socket listeners ---\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", (ms) => setOpenMatches(ms));\n    socket.on(\"newMatch\", (m) => setOpenMatches((os) => [...os, m]));\n    socket.on(\"removeMatch\", (id) =>\n      setOpenMatches((os) => os.filter((m) => m.id !== id))\n    );\n    socket.on(\"startMatch\", ({ id, players }) => {\n      if (currentMatch?.id === id) {\n        setMatchStatus(\"ready\");\n        setSentence(chooseSentence(id));\n        setCountdown(3);\n        setOpponentWallet(players.find((w) => w !== walletAddress));\n      }\n    });\n    socket.on(\"opponentProgress\", ({ wallet: w, progress }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({ winner, progressMap }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: winner === walletAddress ? \"win\" : \"lose\" });\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddress] ?? 0);\n        setOpponentProgress(progressMap[opponentWallet] ?? 0);\n      }\n    });\n    socket.on(\"chat\", (msgs) => setChatMessages(msgs));\n    socket.on(\"opponentLeft\", async () => {\n      if (\n        matchStatus === \"finished\" &&\n        raceResult?.result === \"win\" &&\n        currentMatch?.id\n      ) {\n        try {\n          await resolveEscrow(\n            new PublicKey(currentMatch.id),\n            publicKey,\n            providerRef.current\n          );\n        } catch (e) {\n          console.error(\"Auto-claim failed:\", e);\n        }\n      }\n      resetGame();\n    });\n    return () => socket.removeAllListeners();\n  }, [\n    currentMatch,\n    walletAddress,\n    opponentWallet,\n    matchStatus,\n    raceResult,\n    publicKey,\n  ]);\n\n  // --- Countdown effect ---\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown((c) => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      inputRef.current?.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // --- Helpers ---\n  const chooseSentence = (id) => {\n    const sum = Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0);\n    return sentences[sum % sentences.length];\n  };\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // === Bundled createMatch ===\n  async function createMatch() {\n    if (!connected) return alert(\"Connect your wallet first\");\n    const provider = providerRef.current;\n    if (!provider) return alert(\"Provider not ready\");\n\n    const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n    const program = new anchor.Program(idl, PROGRAM_ID, provider);\n    const nonce = Math.floor(Math.random() * 1_000_000);\n\n    try {\n      // 1) Derive escrow PDA\n      const [escrowPda] = await PublicKey.findProgramAddress(\n        [\n          Buffer.from(\"escrow\"),\n          provider.wallet.publicKey.toBuffer(),\n          new anchor.BN(nonce).toArrayLike(Buffer, \"le\", 8),\n        ],\n        program.programId\n      );\n\n      // 2) Initialize instruction\n      const ixInit = await program.methods\n        .initialize(new anchor.BN(lamports), new anchor.BN(nonce))\n        .accounts({\n          escrow: escrowPda,\n          player1: provider.wallet.publicKey,\n          authority: provider.wallet.publicKey,\n          systemProgram: SystemProgram.programId,\n        })\n        .instruction();\n\n      // 3) Fetch vault PDA from on‑chain escrow account\n      const escrowAccount = await program.account.escrow.fetch(escrowPda);\n      const vaultPda = escrowAccount.escrowAccount;\n\n      // 4) Deposit instruction\n      const ixDeposit = await program.methods\n        .deposit()\n        .accounts({\n          escrow: escrowPda,\n          payer: provider.wallet.publicKey,\n          escrowAccount: vaultPda,\n          systemProgram: SystemProgram.programId,\n        })\n        .instruction();\n\n      // 5) Bundle tx, set feePayer and blockhash\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      tx.feePayer = provider.wallet.publicKey;\n      const { blockhash } = await provider.connection.getLatestBlockhash(\n        \"confirmed\"\n      );\n      tx.recentBlockhash = blockhash;\n\n      // 6) Sign once (one popup)\n      const signed = await provider.wallet.signTransaction(tx);\n\n      // 7) Send & confirm\n      const sig = await provider.connection.sendRawTransaction(\n        signed.serialize(),\n        { skipPreflight: false, preflightCommitment: \"confirmed\" }\n      );\n      await provider.connection.confirmTransaction(sig, \"confirmed\");\n      console.log(\"createMatch tx:\", sig);\n\n      // 8) Register match backend & socket\n      const id = escrowPda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddress,\n          feePercent: 5,\n        }),\n      });\n      setCurrentMatch({ id, amount: Number(wager), creator: walletAddress });\n      socket.emit(\"joinMatch\", id);\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"createMatch failed:\", e);\n      alert(`Failed to create match:\\n${e.message || e}`);\n    }\n  }\n\n  // --- acceptMatch, cancelMatch, handleInput, and renderers below ---\n\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect your wallet first\");\n    setIsAccepting(true);\n    const provider = providerRef.current;\n    const program = new anchor.Program(idl, PROGRAM_ID, provider);\n    const pda = new PublicKey(m.id);\n    setCurrentMatch({ ...m, accepter: walletAddress });\n    socket.emit(\"joinMatch\", m.id);\n\n    try {\n      await program.methods\n        .joinAndDeposit()\n        .accounts({\n          escrow: pda,\n          player2: provider.wallet.publicKey,\n          escrowAccount: (await program.account.escrow.fetch(pda)).escrowAccount,\n          systemProgram: SystemProgram.programId,\n        })\n        .rpc();\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ accepter: walletAddress }),\n      });\n      setMatchStatus(\"ready\");\n      setCountdown(3);\n    } catch (e) {\n      console.error(\"acceptMatch failed:\", e);\n      alert(`Failed to accept match:\\n${e.message || e}`);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  async function cancelMatch(m) {\n    const provider = providerRef.current;\n    const program = new anchor.Program(idl, PROGRAM_ID, provider);\n    const pda = new PublicKey(m.id);\n\n    try {\n      await program.methods\n        .cancel()\n        .accounts({\n          escrow: pda,\n          player1: new PublicKey(m.creator),\n          player2: new PublicKey(m.accepter || m.creator),\n          escrowAccount: (await program.account.escrow.fetch(pda))\n            .escrowAccount,\n          authority: provider.wallet.publicKey,\n        })\n        .rpc();\n      await fetch(`${API}/wagers/${m.id}/cancel`, { method: \"POST\" });\n      resetGame();\n    } catch (e) {\n      console.error(\"cancelMatch failed:\", e);\n      alert(`Failed to cancel match:\\n${e.message || e}`);\n    }\n  }\n\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: rawProg,\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ winner: walletAddress }),\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: \"win\" });\n    }\n  }\n\n  const renderMatchmaking = () => (\n    <section className=\"matchmaking\">\n      <h2>Create a Match</h2>\n      <label>\n        Wager (SOL):\n        <input\n          type=\"number\"\n          min=\"0.01\"\n          step=\"0.01\"\n          value={wager}\n          onChange={(e) => setWager(e.target.value)}\n        />\n      </label>\n      <button onClick={createMatch} disabled={!wager || wager <= 0}>\n        Create Match\n      </button>\n      <h2 style={{ marginTop: 20 }}>Open Matches</h2>\n      {openMatches.length === 0 ? (\n        <p>No open matches. Create one!</p>\n      ) : (\n        <ul>\n          {openMatches.map((m) => (\n            <li key={m.id}>\n              {m.id.slice(0, 6)}… | {m.amount} SOL{\" \"}\n              {m.creator === walletAddress ? (\n                <button\n                  onClick={() => cancelMatch(m)}\n                  style={{ marginLeft: 10 }}\n                >\n                  Cancel\n                </button>\n              ) : (\n                <button\n                  onClick={() => acceptMatch(m)}\n                  disabled={!!currentMatch || isAccepting}\n                  style={{ marginLeft: 10 }}\n                >\n                  {isAccepting ? \"Accepting…\" : \"Accept\"}\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </section>\n  );\n\n  const renderWaiting = () => (\n    <section className=\"waiting-section\">\n      <h2>Waiting for opponent…</h2>\n      <button onClick={() => cancelMatch(currentMatch)}>Cancel Match</button>\n    </section>\n  );\n\n  const renderRace = () => (\n    <section className=\"race-section\">\n      {matchStatus === \"ready\" && <h2>Starting in {countdown}</h2>}\n      {matchStatus === \"racing\" && (\n        <>\n          <div className=\"sentence-display\">{sentence}</div>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInput}\n            onPaste={handleInput}\n            placeholder=\"Start typing…\"\n            disabled={isInputDisabled}\n            autoFocus\n          />\n          <div className=\"track\">\n            <div className=\"lane\">\n              <div\n                className=\"car car-player\"\n                style={{ left: `${playerProgress * 100}%` }}\n              >\n                🚗\n              </div>\n            </div>\n            <div className=\"lane\">\n              <div\n                className=\"car car-opponent\"\n                style={{ left: `${opponentProgress * 100}%` }}\n              >\n                🏎️\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"win\" && (\n        <div className=\"results results-win\">\n          <h2 style={{ fontSize: \"2rem\" }}>🏆 You Won!</h2>\n          <button\n            onClick={async () => {\n              try {\n                await resolveEscrow(\n                  new PublicKey(currentMatch.id),\n                  publicKey,\n                  providerRef.current\n                );\n                resetGame();\n              } catch (e) {\n                console.error(e);\n                alert(\"Payout error: \" + (e.message || e));\n              }\n            }}\n          >\n            Claim Winnings\n          </button>\n        </div>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"lose\" && (\n        <div className=\"results results-lose\" style={{ textAlign: \"center\" }}>\n          <h2 style={{ fontSize: \"2rem\", color: \"#c0392b\" }}>😢 You Lost!</h2>\n          <p>Better luck next time!</p>\n          <button onClick={resetGame}>Back to Matches</button>\n        </div>\n      )}\n    </section>\n  );\n\n  const renderChat = () => (\n    <section className=\"chat-section\">\n      <h2>Chat</h2>\n      <div className=\"chat-messages\" style={{ maxHeight: 150, overflowY: \"auto\" }}>\n        {chatMessages.map((msg, i) => (\n          <p key={i} className={msg.sender === walletAddress ? \"self\" : \"other\"}>\n            <strong>{msg.sender.slice(0, 6)}…:</strong> {msg.message}\n          </p>\n        ))}\n      </div>\n      <input\n        value={chatInput}\n        onChange={(e) => setChatInput(e.target.value)}\n        onKeyDown={(e) =>\n          e.key === \"Enter\" &&\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddress,\n            message: chatInput,\n          }) &&\n          setChatInput(\"\")\n        }\n      />\n      <button\n        onClick={() => {\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddress,\n            message: chatInput,\n          });\n          setChatInput(\"\");\n        }}\n        disabled={!chatInput.trim()}\n      >\n        Send\n      </button>\n    </section>\n  );\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Type Racer</h1>\n        {connected ? (\n          <div className=\"wallet-info\">\n            {walletAddress.slice(0, 6)}… ({walletBalance.toFixed(2)} SOL)\n          </div>\n        ) : (\n          <WalletMultiButton />\n        )}\n      </header>\n\n      {!connected && <p>Please connect your wallet to play.</p>}\n      {connected && !currentMatch && renderMatchmaking()}\n      {connected && currentMatch && matchStatus === \"waiting\" && renderWaiting()}\n      {connected &&\n        currentMatch &&\n        (matchStatus === \"ready\" ||\n          matchStatus === \"racing\" ||\n          matchStatus === \"finished\") &&\n        renderRace()}\n      {connected && currentMatch && matchStatus === \"finished\" && renderChat()}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}