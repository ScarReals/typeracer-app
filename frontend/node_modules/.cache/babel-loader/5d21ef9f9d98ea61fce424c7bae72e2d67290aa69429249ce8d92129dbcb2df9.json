{"ast":null,"code":"var _jsxFileName = \"/home/kokoi/sol-wager-app/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport idl from \"./idl/typeracer_escrow.json\";\nimport { setProvider } from \"./solana\";\nimport { buildInitializeAndDepositIxns, buildJoinAndDepositIxn, buildCancelIxn } from \"./escrow\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    connection\n  } = useConnection();\n  const wallet = useWallet();\n  const {\n    publicKey,\n    connected\n  } = wallet;\n  const walletAddr = (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) || \"\";\n  const walletAddrRef = useRef(walletAddr);\n  useEffect(() => {\n    walletAddrRef.current = walletAddr;\n  }, [walletAddr]);\n\n  // Anchor provider\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\"\n      });\n      anchor.setProvider(prov);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n\n  // BALANCE\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then(lamports => setWalletBalance(lamports / LAMPORTS_PER_SOL));\n    }\n  }, [connection, publicKey]);\n\n  // GAME STATE\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n  const [matchCreatedAt, setMatchCreatedAt] = useState(0);\n\n  // RACE STATE\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // CHAT\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // ANTI‑CHEAT\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // HELPERS\n  const chooseSentence = id => sentences[Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length];\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // SOCKET.IO\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", m => setOpenMatches(os => [...os, m]));\n    socket.on(\"removeMatch\", id => setOpenMatches(os => os.filter(m => m.id !== id)));\n    socket.on(\"startMatch\", ({\n      id,\n      players\n    }) => {\n      setCurrentMatch({\n        id,\n        amount: (currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.amount) || 0,\n        creator: players[0],\n        accepter: players[1],\n        nonce: currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.nonce\n      });\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(id));\n      setCountdown(3);\n      setOpponentWallet(players.find(w => w !== walletAddrRef.current));\n    });\n    socket.on(\"opponentProgress\", ({\n      wallet: w,\n      progress\n    }) => {\n      if (w !== walletAddrRef.current) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({\n      winner,\n      progressMap\n    }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: winner === walletAddrRef.current ? \"win\" : \"lose\"\n      });\n      if (progressMap) {\n        var _progressMap$walletAd, _progressMap$opponent;\n        setPlayerProgress((_progressMap$walletAd = progressMap[walletAddrRef.current]) !== null && _progressMap$walletAd !== void 0 ? _progressMap$walletAd : 0);\n        setOpponentProgress((_progressMap$opponent = progressMap[opponentWallet]) !== null && _progressMap$opponent !== void 0 ? _progressMap$opponent : 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", () => resetGame());\n    fetchOpenMatches();\n    return () => {\n      socket.removeAllListeners();\n      socket.disconnect();\n    };\n  }, []);\n\n  // COUNTDOWN\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown(c => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      var _inputRef$current;\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  //  ─── MATCHMAKING ─────────────────────────────────────────\n\n  // 1) CREATE MATCH\n  async function createMatch() {\n    if (!connected) return alert(\"Connect wallet\");\n    try {\n      // calculate & build\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const nonce = Math.floor(Math.random() * 1000000);\n      const {\n        ixInit,\n        ixDeposit,\n        escrowPda\n      } = await buildInitializeAndDepositIxns(lamports, publicKey, nonce);\n\n      // send both in one TX\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      const sig = await wallet.sendTransaction(tx, connection);\n      console.log(\"createMatch tx:\", sig);\n      setCurrentMatch({\n        id: escrowPda.toBase58(),\n        amount: wager,\n        creator: walletAddrRef.current,\n        nonce\n      });\n      setMatchCreatedAt(Date.now());\n      socket.emit(\"joinMatch\", escrowPda.toBase58());\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"Create error:\", e);\n      alert(\"Create match failed:\\n\" + e.message);\n    }\n  }\n\n  // 2) ACCEPT MATCH\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(m.id);\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(m.id));\n      setCountdown(3);\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          accepter: walletAddrRef.current\n        })\n      });\n      setCurrentMatch({\n        ...m,\n        accepter: walletAddrRef.current\n      });\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"Accept error:\", e);\n      alert(\"Accept error:\\n\" + e.message);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  // 3) CANCEL MATCH (disabled <90s)\n  async function cancelMatch(m) {\n    try {\n      const elapsed = Date.now() - matchCreatedAt;\n      if (elapsed < 90000) return;\n      const ix = await buildCancelIxn(m.id, m.creator, m.accepter || m.creator);\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      await fetch(`${API}/wagers/${m.id}/cancel`, {\n        method: \"POST\"\n      });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel error:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n\n  // 4) TYPING INPUT\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const raw = Math.min(1, val.length / sentence.length);\n    const delta = raw - lastProg;\n    const dt = (now - lastProgTime) / 1000;\n    const cps = dt > 0 ? delta * sentence.length / dt : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(raw);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(raw);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddrRef.current,\n      progress: raw\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          winner: walletAddrRef.current\n        })\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: \"win\"\n      });\n    }\n  }\n\n  // RENDERERS\n  const CAN_CANCEL = Date.now() - matchCreatedAt >= 90000;\n  const renderMatchmaking = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"matchmaking\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Wager (SOL):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0.01\",\n        step: \"0.01\",\n        value: wager,\n        onChange: e => setWager(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createMatch,\n      disabled: !wager || wager <= 0,\n      children: \"Create Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: 20\n      },\n      children: \"Open Matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), openMatches.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No open matches. Create one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: openMatches.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [m.id.slice(0, 6), \"\\u2026 | \", m.amount, \" SOL\", \" \", m.creator === walletAddrRef.current ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cancelMatch(m),\n          disabled: !CAN_CANCEL,\n          style: {\n            marginLeft: 10,\n            opacity: CAN_CANCEL ? 1 : 0.5\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptMatch(m),\n          disabled: !!currentMatch || isAccepting,\n          style: {\n            marginLeft: 10\n          },\n          children: isAccepting ? \"Accepting…\" : \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }, this)]\n      }, m.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n  const renderWaiting = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"waiting-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for opponent\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => cancelMatch(currentMatch),\n      disabled: !CAN_CANCEL,\n      style: {\n        opacity: CAN_CANCEL ? 1 : 0.5\n      },\n      children: \"Cancel Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n  const renderRace = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"race-section\",\n    children: [matchStatus === \"ready\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Starting in \", countdown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 33\n    }, this), matchStatus === \"racing\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence-display\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInput,\n        onPaste: handleInput,\n        placeholder: \"Start typing\\u2026\",\n        disabled: isInputDisabled,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-player\",\n            style: {\n              left: `${playerProgress * 100}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-opponent\",\n            style: {\n              left: `${opponentProgress * 100}%`\n            },\n            children: \"\\uD83C\\uDFCE\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-win\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\"\n        },\n        children: \"\\uD83C\\uDFC6 You Won!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          try {\n            const res = await fetch(`${API}/wagers/${currentMatch.id}/resolve`, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                winner: walletAddrRef.current\n              })\n            });\n            const {\n              success,\n              signature,\n              error\n            } = await res.json();\n            if (success) {\n              alert(\"Winnings claimed!\\n\" + signature);\n              resetGame();\n            } else {\n              throw new Error(error || \"Payout failed\");\n            }\n          } catch (e) {\n            console.error(\"Claim error:\", e);\n            alert(\"Payout error:\\n\" + e.message);\n          }\n        },\n        children: \"Claim Winnings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }, this), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"lose\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-lose\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\",\n          color: \"#c0392b\"\n        },\n        children: \"\\uD83D\\uDE22 You Lost!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Better luck next time!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Back to Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n  const renderChat = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      style: {\n        maxHeight: 150,\n        overflowY: \"auto\"\n      },\n      children: chatMessages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: msg.sender === walletAddrRef.current ? \"self\" : \"other\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender.slice(0, 6), \"\\u2026:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: chatInput,\n      onChange: e => setChatInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && socket.emit(\"message\", {\n        matchId: currentMatch.id,\n        sender: walletAddrRef.current,\n        message: chatInput\n      }) && setChatInput(\"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        socket.emit(\"message\", {\n          matchId: currentMatch.id,\n          sender: walletAddrRef.current,\n          message: chatInput\n        });\n        setChatInput(\"\");\n      },\n      disabled: !chatInput.trim(),\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 418,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Type Racer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: [walletAddrRef.current.slice(0, 6), \"\\u2026 (\", walletBalance.toFixed(2), \" SOL)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this), !connected && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your wallet to play.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 22\n    }, this), connected && !currentMatch && renderMatchmaking(), connected && currentMatch && matchStatus === \"waiting\" && renderWaiting(), connected && currentMatch && (matchStatus === \"ready\" || matchStatus === \"racing\" || matchStatus === \"finished\") && renderRace(), connected && currentMatch && matchStatus === \"finished\" && renderChat()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 450,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oOSh+42gGX+9wSaaEyimeGx8MPQ=\", false, function () {\n  return [useConnection, useWallet];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","sentences","useConnection","useWallet","WalletMultiButton","LAMPORTS_PER_SOL","PublicKey","Transaction","socket","anchor","idl","setProvider","buildInitializeAndDepositIxns","buildJoinAndDepositIxn","buildCancelIxn","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","connection","wallet","publicKey","connected","walletAddr","toBase58","walletAddrRef","current","prov","AnchorProvider","preflightCommitment","commitment","walletBalance","setWalletBalance","getBalance","then","lamports","wager","setWager","openMatches","setOpenMatches","currentMatch","setCurrentMatch","matchStatus","setMatchStatus","matchCreatedAt","setMatchCreatedAt","sentence","setSentence","inputValue","setInputValue","playerProgress","setPlayerProgress","opponentProgress","setOpponentProgress","countdown","setCountdown","raceResult","setRaceResult","isInputDisabled","setIsInputDisabled","isAccepting","setIsAccepting","opponentWallet","setOpponentWallet","chatMessages","setChatMessages","chatInput","setChatInput","inputRef","API","process","env","REACT_APP_API_URL","lastProgTime","setLastProgTime","Date","now","lastProg","setLastProg","MAX_CPS","chooseSentence","id","Array","from","reduce","a","c","charCodeAt","length","fetchOpenMatches","res","fetch","json","resetGame","connect","on","m","os","filter","players","amount","creator","accepter","nonce","find","w","progress","winner","progressMap","result","_progressMap$walletAd","_progressMap$opponent","removeAllListeners","disconnect","t","setTimeout","clearTimeout","_inputRef$current","focus","createMatch","alert","Math","floor","random","ixInit","ixDeposit","escrowPda","tx","add","sig","sendTransaction","console","log","emit","e","error","message","acceptMatch","ix","method","headers","body","JSON","stringify","cancelMatch","elapsed","handleInput","type","preventDefault","val","target","value","raw","min","delta","dt","cps","matchId","CAN_CANCEL","renderMatchmaking","className","children","fileName","_jsxFileName","lineNumber","columnNumber","step","onChange","Number","onClick","disabled","style","marginTop","map","slice","marginLeft","opacity","renderWaiting","renderRace","ref","onPaste","placeholder","autoFocus","left","fontSize","success","signature","Error","textAlign","color","renderChat","maxHeight","overflowY","msg","i","sender","onKeyDown","key","trim","toFixed","_c","$RefreshReg$"],"sources":["/home/kokoi/sol-wager-app/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport idl from \"./idl/typeracer_escrow.json\";\nimport { setProvider } from \"./solana\";\nimport {\n  buildInitializeAndDepositIxns,\n  buildJoinAndDepositIxn,\n  buildCancelIxn,\n} from \"./escrow\";\n\nexport default function App() {\n  const { connection } = useConnection();\n  const wallet = useWallet();\n  const { publicKey, connected } = wallet;\n  const walletAddr = publicKey?.toBase58() || \"\";\n\n  const walletAddrRef = useRef(walletAddr);\n  useEffect(() => { walletAddrRef.current = walletAddr; }, [walletAddr]);\n\n  // Anchor provider\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\",\n      });\n      anchor.setProvider(prov);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n\n  // BALANCE\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then((lamports) =>\n        setWalletBalance(lamports / LAMPORTS_PER_SOL)\n      );\n    }\n  }, [connection, publicKey]);\n\n  // GAME STATE\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n  const [matchCreatedAt, setMatchCreatedAt] = useState(0);\n\n  // RACE STATE\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // CHAT\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // ANTI‑CHEAT\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // HELPERS\n  const chooseSentence = (id) =>\n    sentences[\n      Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length\n    ];\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // SOCKET.IO\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", (m) => setOpenMatches((os) => [...os, m]));\n    socket.on(\"removeMatch\", (id) =>\n      setOpenMatches((os) => os.filter((m) => m.id !== id))\n    );\n    socket.on(\"startMatch\", ({ id, players }) => {\n      setCurrentMatch({\n        id,\n        amount: currentMatch?.amount || 0,\n        creator: players[0],\n        accepter: players[1],\n        nonce: currentMatch?.nonce,\n      });\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(id));\n      setCountdown(3);\n      setOpponentWallet(players.find((w) => w !== walletAddrRef.current));\n    });\n    socket.on(\"opponentProgress\", ({ wallet: w, progress }) => {\n      if (w !== walletAddrRef.current) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({ winner, progressMap }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: winner === walletAddrRef.current ? \"win\" : \"lose\",\n      });\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddrRef.current] ?? 0);\n        setOpponentProgress(progressMap[opponentWallet] ?? 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", () => resetGame());\n    fetchOpenMatches();\n    return () => {\n      socket.removeAllListeners();\n      socket.disconnect();\n    };\n  }, []);\n\n  // COUNTDOWN\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown((c) => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      inputRef.current?.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  //  ─── MATCHMAKING ─────────────────────────────────────────\n\n  // 1) CREATE MATCH\n  async function createMatch() {\n    if (!connected) return alert(\"Connect wallet\");\n    try {\n      // calculate & build\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const nonce     = Math.floor(Math.random() * 1_000_000);\n      const { ixInit, ixDeposit, escrowPda } =\n        await buildInitializeAndDepositIxns(\n          lamports,\n          publicKey,\n          nonce\n        );\n\n      // send both in one TX\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      const sig = await wallet.sendTransaction(tx, connection);\n\n      console.log(\"createMatch tx:\", sig);\n      setCurrentMatch({ id: escrowPda.toBase58(), amount: wager, creator: walletAddrRef.current, nonce });\n      setMatchCreatedAt(Date.now());\n      socket.emit(\"joinMatch\", escrowPda.toBase58());\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"Create error:\", e);\n      alert(\"Create match failed:\\n\" + e.message);\n    }\n  }\n\n  // 2) ACCEPT MATCH\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(m.id);\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(m.id));\n      setCountdown(3);\n\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ accepter: walletAddrRef.current }),\n      });\n      setCurrentMatch({ ...m, accepter: walletAddrRef.current });\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"Accept error:\", e);\n      alert(\"Accept error:\\n\" + e.message);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  // 3) CANCEL MATCH (disabled <90s)\n  async function cancelMatch(m) {\n    try {\n      const elapsed = Date.now() - matchCreatedAt;\n      if (elapsed < 90_000) return;\n      const ix = await buildCancelIxn(\n        m.id,\n        m.creator,\n        m.accepter || m.creator\n      );\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      await fetch(`${API}/wagers/${m.id}/cancel`, { method: \"POST\" });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel error:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n\n  // 4) TYPING INPUT\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now  = Date.now();\n    const val  = e.target.value;\n    const raw  = Math.min(1, val.length / sentence.length);\n    const delta= raw - lastProg;\n    const dt   = (now - lastProgTime) / 1000;\n    const cps  = dt > 0 ? (delta * sentence.length) / dt : 0;\n    if (cps > MAX_CPS) return;\n\n    setLastProg(raw);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(raw);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet:  walletAddrRef.current,\n      progress: raw,\n    });\n\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\":\"application/json\" },\n        body: JSON.stringify({ winner: walletAddrRef.current }),\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: \"win\" });\n    }\n  }\n\n  // RENDERERS\n  const CAN_CANCEL = Date.now() - matchCreatedAt >= 90_000;\n\n  const renderMatchmaking = () => (\n    <section className=\"matchmaking\">\n      <h2>Create a Match</h2>\n      <label>\n        Wager (SOL):\n        <input\n          type=\"number\"\n          min=\"0.01\"\n          step=\"0.01\"\n          value={wager}\n          onChange={(e) => setWager(Number(e.target.value))}\n        />\n      </label>\n      <button onClick={createMatch} disabled={!wager || wager <= 0}>\n        Create Match\n      </button>\n      <h2 style={{ marginTop: 20 }}>Open Matches</h2>\n      {openMatches.length === 0 ? (\n        <p>No open matches. Create one!</p>\n      ) : (\n        <ul>\n          {openMatches.map((m) => (\n            <li key={m.id}>\n              {m.id.slice(0,6)}… | {m.amount} SOL{\" \"}\n              {m.creator === walletAddrRef.current ? (\n                <button\n                  onClick={() => cancelMatch(m)}\n                  disabled={!CAN_CANCEL}\n                  style={{ marginLeft: 10, opacity: CAN_CANCEL?1:0.5 }}\n                >\n                  Cancel\n                </button>\n              ) : (\n                <button\n                  onClick={()=>acceptMatch(m)}\n                  disabled={!!currentMatch || isAccepting}\n                  style={{ marginLeft:10 }}\n                >\n                  {isAccepting?\"Accepting…\":\"Accept\"}\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </section>\n  );\n\n  const renderWaiting = () => (\n    <section className=\"waiting-section\">\n      <h2>Waiting for opponent…</h2>\n      <button\n        onClick={() => cancelMatch(currentMatch)}\n        disabled={!CAN_CANCEL}\n        style={{ opacity: CAN_CANCEL?1:0.5 }}\n      >\n        Cancel Match\n      </button>\n    </section>\n  );\n\n  const renderRace = () => (\n    <section className=\"race-section\">\n      {matchStatus===\"ready\" && <h2>Starting in {countdown}</h2>}\n      {matchStatus===\"racing\" && (\n        <>\n          <div className=\"sentence-display\">{sentence}</div>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInput}\n            onPaste={handleInput}\n            placeholder=\"Start typing…\"\n            disabled={isInputDisabled}\n            autoFocus\n          />\n          <div className=\"track\">\n            <div className=\"lane\">\n              <div\n                className=\"car car-player\"\n                style={{ left:`${playerProgress*100}%` }}\n              >\n                🚗\n              </div>\n            </div>\n            <div className=\"lane\">\n              <div\n                className=\"car car-opponent\"\n                style={{ left:`${opponentProgress*100}%` }}\n              >\n                🏎️\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n      {matchStatus===\"finished\" && raceResult?.result===\"win\" && (\n        <div className=\"results results-win\">\n          <h2 style={{fontSize:\"2rem\"}}>🏆 You Won!</h2>\n          <button\n            onClick={async ()=>{\n              try {\n                const res = await fetch(\n                  `${API}/wagers/${currentMatch.id}/resolve`,\n                  {\n                    method:\"POST\",\n                    headers:{\"Content-Type\":\"application/json\"},\n                    body:JSON.stringify({ winner: walletAddrRef.current })\n                  }\n                );\n                const { success, signature, error } = await res.json();\n                if (success) {\n                  alert(\"Winnings claimed!\\n\" + signature);\n                  resetGame();\n                } else {\n                  throw new Error(error||\"Payout failed\");\n                }\n              } catch(e) {\n                console.error(\"Claim error:\",e);\n                alert(\"Payout error:\\n\"+e.message);\n              }\n            }}\n          >\n            Claim Winnings\n          </button>\n        </div>\n      )}\n      {matchStatus===\"finished\" && raceResult?.result===\"lose\" && (\n        <div className=\"results results-lose\" style={{textAlign:\"center\"}}>\n          <h2 style={{fontSize:\"2rem\",color:\"#c0392b\"}}>😢 You Lost!</h2>\n          <p>Better luck next time!</p>\n          <button onClick={resetGame}>Back to Matches</button>\n        </div>\n      )}\n    </section>\n  );\n\n  const renderChat = () => (\n    <section className=\"chat-section\">\n      <h2>Chat</h2>\n      <div className=\"chat-messages\" style={{maxHeight:150,overflowY:\"auto\"}}>\n        {chatMessages.map((msg,i)=>(\n          <p key={i} className={msg.sender===walletAddrRef.current?\"self\":\"other\"}>\n            <strong>{msg.sender.slice(0,6)}…:</strong> {msg.message}\n          </p>\n        ))}\n      </div>\n      <input\n        value={chatInput}\n        onChange={e=>setChatInput(e.target.value)}\n        onKeyDown={e=>e.key===\"Enter\"&&socket.emit(\"message\",{\n          matchId:currentMatch.id,\n          sender:walletAddrRef.current,\n          message:chatInput\n        })&&setChatInput(\"\")}\n      />\n      <button onClick={()=>{\n        socket.emit(\"message\",{\n          matchId:currentMatch.id,\n          sender:walletAddrRef.current,\n          message:chatInput\n        });\n        setChatInput(\"\");\n      }} disabled={!chatInput.trim()}>\n        Send\n      </button>\n    </section>\n  );\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Type Racer</h1>\n        {connected ? (\n          <div className=\"wallet-info\">\n            {walletAddrRef.current.slice(0,6)}… ({walletBalance.toFixed(2)} SOL)\n          </div>\n        ) : (\n          <WalletMultiButton />\n        )}\n      </header>\n\n      {!connected && <p>Please connect your wallet to play.</p>}\n      {connected && !currentMatch && renderMatchmaking()}\n      {connected && currentMatch && matchStatus===\"waiting\" && renderWaiting()}\n      {connected && currentMatch && (matchStatus===\"ready\"||matchStatus===\"racing\"||matchStatus===\"finished\") && renderRace()}\n      {connected && currentMatch && matchStatus===\"finished\" && renderChat()}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}