{"ast":null,"code":"var _jsxFileName = \"/home/kokoi/typeracer-app/frontend/src/App.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport { setProvider } from \"./solana\";\nimport { buildInitializeAndDepositIxns, buildJoinAndDepositIxn, buildCancelIxn, buildResolveIxn } from \"./escrow\";\n\n// ──────────────────────────────\n// Reusable Modal\n// ──────────────────────────────\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Modal({\n  isOpen,\n  onClose,\n  children,\n  fullscreen\n}) {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: !fullscreen ? onClose : undefined,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal-content ${fullscreen ? \"fullscreen\" : \"\"}`,\n      onClick: e => e.stopPropagation(),\n      children: [!fullscreen && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close\",\n        onClick: onClose,\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = Modal;\nexport default function App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    connection\n  } = useConnection();\n  const wallet = useWallet();\n  const {\n    publicKey,\n    connected\n  } = wallet;\n  const walletAddress = (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) || \"\";\n  const walletAddressRef = useRef(walletAddress);\n  useEffect(() => {\n    walletAddressRef.current = walletAddress;\n  }, [walletAddress]);\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\"\n      });\n      anchor.setProvider(prov);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then(lamports => {\n        setWalletBalance(lamports / LAMPORTS_PER_SOL);\n      });\n    }\n  }, [connection, publicKey]);\n\n  // Game states\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n  const [matchCreatedAt, setMatchCreatedAt] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(0);\n  useEffect(() => {\n    if (!matchCreatedAt) return;\n    const tick = () => {\n      const elapsed = Date.now() - matchCreatedAt;\n      const secs = Math.ceil((90000 - elapsed) / 1000);\n      setTimeLeft(secs > 0 ? secs : 0);\n    };\n    tick();\n    const iv = setInterval(tick, 1000);\n    return () => clearInterval(iv);\n  }, [matchCreatedAt]);\n\n  // Race states\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n  const [hasError, setHasError] = useState(false);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n  const chooseSentence = id => sentences[Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length];\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      const wm = await res.json();\n      setOpenMatches(wm.filter(m => !m.accepter));\n    } catch {}\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    setMatchCreatedAt(0);\n    setTimeLeft(0);\n    setHasError(false);\n    fetchOpenMatches();\n  };\n\n  // Socket events\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", wm => setOpenMatches(wm.filter(m => !m.accepter)));\n    socket.on(\"newMatch\", m => setOpenMatches(os => [...os, m].filter(x => !x.accepter)));\n    socket.on(\"removeMatch\", id => setOpenMatches(os => os.filter(m => m.id !== id)));\n    socket.on(\"startMatch\", ({\n      id,\n      players\n    }) => {\n      socket.emit(\"joinMatch\", id);\n      setPlayerProgress(0);\n      setOpponentProgress(0);\n      setCurrentMatch({\n        id,\n        amount: (currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.amount) || 0,\n        creator: players[0],\n        accepter: players[1],\n        nonce: currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.nonce\n      });\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(id));\n      setCountdown(3);\n      setOpponentWallet(players.find(w => w !== walletAddressRef.current));\n      setHasError(false);\n    });\n    socket.on(\"opponentProgress\", ({\n      wallet: w,\n      progress\n    }) => {\n      if (w !== walletAddressRef.current) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({\n      winner,\n      progressMap\n    }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: winner === walletAddressRef.current ? \"win\" : \"lose\"\n      });\n      if (progressMap) {\n        var _progressMap$walletAd, _progressMap$opponent;\n        setPlayerProgress((_progressMap$walletAd = progressMap[walletAddressRef.current]) !== null && _progressMap$walletAd !== void 0 ? _progressMap$walletAd : 0);\n        setOpponentProgress((_progressMap$opponent = progressMap[opponentWallet]) !== null && _progressMap$opponent !== void 0 ? _progressMap$opponent : 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", resetGame);\n    fetchOpenMatches();\n    return () => {\n      socket.removeAllListeners();\n      socket.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown(c => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      var _inputRef$current;\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [countdown, matchStatus]);\n  const CAN_CANCEL = timeLeft === 0 && matchStatus === \"waiting\";\n\n  // ──────────────────────────────\n  // GAME ACTIONS\n  // ──────────────────────────────\n  async function createMatch() {\n    if (!connected) return alert(\"Connect wallet\");\n    try {\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const nonce = Math.floor(Math.random() * 1000000);\n      const {\n        ixInit,\n        ixDeposit,\n        escrowPda\n      } = await buildInitializeAndDepositIxns(lamports, publicKey, nonce);\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      await wallet.sendTransaction(tx, connection);\n      const id = escrowPda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id,\n          vault: id,\n          amount: Number(wager),\n          creator: walletAddressRef.current,\n          feePercent: 5,\n          nonce\n        })\n      });\n      setCurrentMatch({\n        id,\n        amount: Number(wager),\n        creator: walletAddressRef.current,\n        nonce\n      });\n      setMatchCreatedAt(Date.now());\n      setMatchStatus(\"waiting\");\n      socket.emit(\"joinMatch\", id);\n      fetchOpenMatches();\n    } catch (e) {\n      console.error(\"Create error:\", e);\n      alert(\"Create match failed:\\n\" + e.message);\n    }\n  }\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(m.id);\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(m.id));\n      setCountdown(3);\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          accepter: walletAddressRef.current\n        })\n      });\n      setCurrentMatch({\n        ...m,\n        accepter: walletAddressRef.current\n      });\n      socket.emit(\"joinMatch\", m.id);\n      setHasError(false);\n    } catch (e) {\n      console.error(\"Accept error:\", e);\n      alert(\"Accept error:\\n\" + e.message);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n  async function cancelMatch(m) {\n    if (!CAN_CANCEL) return;\n    try {\n      const ix = await buildCancelIxn(m.id, m.creator, m.accepter || m.creator);\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      await fetch(`${API}/wagers/${m.id}/cancel`, {\n        method: \"POST\"\n      });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel error:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const val = e.target.value;\n    if (!sentence.startsWith(val)) {\n      setHasError(true);\n      return;\n    }\n    setHasError(false);\n    const now = Date.now();\n    const raw = Math.min(1, val.length / sentence.length);\n    const delta = raw - lastProg;\n    const dt = (now - lastProgTime) / 1000;\n    const cps = dt > 0 ? delta * sentence.length / dt : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(raw);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(raw);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddressRef.current,\n      progress: raw\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          winner: walletAddressRef.current\n        })\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: \"win\"\n      });\n    }\n  }\n\n  // ──────────────────────────────\n  // HOMEPAGE SECTIONS\n  // ──────────────────────────────\n  const HowItWorks = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"how-it-works\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"How It Works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-num\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create Match\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Set a wager and create your match.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-num\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Join Match\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Pick an open match and join with your wallet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-num\",\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Race & Win\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Type faster, win the prize pot instantly.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n  const FAQ = () => {\n    _s();\n    const [openIndex, setOpenIndex] = useState(null);\n    const toggle = i => setOpenIndex(openIndex === i ? null : i);\n    const faqs = [{\n      q: \"What is Type Racer?\",\n      a: \"A decentralized typing race game where you wager SOL and compete against others in real-time.\"\n    }, {\n      q: \"How do payouts work?\",\n      a: \"The winner receives the prize pot minus a small house fee, paid instantly to their wallet.\"\n    }, {\n      q: \"Do I need SOL to play?\",\n      a: \"Yes, you need a Solana wallet (e.g. Phantom) funded with SOL to create or join matches.\"\n    }];\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"faq\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"FAQ\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), faqs.map((f, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `faq-item ${openIndex === i ? \"open\" : \"\"}`,\n        onClick: () => toggle(i),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"faq-question\",\n          children: f.q\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), openIndex === i && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"faq-answer\",\n          children: f.a\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 33\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this);\n  };\n  _s(FAQ, \"7z1SfW1ag/kVV/D8SOtFgmPOJ8o=\");\n  const Homepage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-card\",\n        onClick: () => createMatch(),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create Match\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Set your wager and start a new race.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-card\",\n        onClick: () => fetchOpenMatches(),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Join Match\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Browse open matches and join instantly.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HowItWorks, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FAQ, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 402,\n    columnNumber: 5\n  }, this);\n\n  // ──────────────────────────────\n  // MODALS (in-match UI)\n  // ──────────────────────────────\n  const renderWaiting = () => /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: currentMatch && matchStatus === \"waiting\",\n    fullscreen: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for opponent\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Match ID: \", currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.id.slice(0, 6), \"\\u2026\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-cancel\",\n      onClick: () => cancelMatch(currentMatch),\n      disabled: !CAN_CANCEL,\n      children: \"Cancel Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 422,\n    columnNumber: 5\n  }, this);\n  const renderRace = () => /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: currentMatch && [\"ready\", \"racing\"].includes(matchStatus),\n    fullscreen: true,\n    children: [matchStatus === \"ready\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Starting in \", countdown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 35\n    }, this), matchStatus === \"racing\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence-display\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInput,\n        onPaste: handleInput,\n        placeholder: \"Start typing\\u2026\",\n        disabled: isInputDisabled,\n        autoFocus: true,\n        className: hasError ? \"input-error\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-text\",\n        children: \"Mistake detected \\u2013 fix it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-player\",\n            style: {\n              left: `${playerProgress * 100}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-opponent\",\n            style: {\n              left: `${opponentProgress * 100}%`\n            },\n            children: \"\\uD83C\\uDFCE\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 436,\n    columnNumber: 5\n  }, this);\n  const renderResults = () => /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: matchStatus === \"finished\",\n    fullscreen: true,\n    children: (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-win\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDFC6 You Won!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: async () => {\n          try {\n            const ix = await buildResolveIxn(currentMatch.id, walletAddressRef.current);\n            const tx = new Transaction().add(ix);\n            await wallet.sendTransaction(tx, connection);\n            resetGame();\n          } catch (e) {\n            console.error(\"Claim error:\", e);\n            alert(\"Payout error:\\n\" + e.message);\n          }\n        },\n        children: \"Claim Winnings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-lose\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDE22 You Lost!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline\",\n        onClick: resetGame,\n        children: \"Back to Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 474,\n    columnNumber: 5\n  }, this);\n  const renderChat = () => /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: matchStatus === \"finished\",\n    fullscreen: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: chatMessages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: msg.sender === walletAddressRef.current ? \"self\" : \"other\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender.slice(0, 6), \"\\u2026:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: chatInput,\n        onChange: e => setChatInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && socket.emit(\"message\", {\n          matchId: currentMatch.id,\n          sender: walletAddressRef.current,\n          message: chatInput\n        }) && setChatInput(\"\"),\n        placeholder: \"Type message\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        disabled: !chatInput.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 510,\n    columnNumber: 5\n  }, this);\n\n  // ──────────────────────────────\n  // RETURN\n  // ──────────────────────────────\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Type Racer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this), connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: [walletAddressRef.current.slice(0, 6), \"\\u2026 (\", walletBalance.toFixed(2), \" SOL)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(WalletMultiButton, {\n        className: \"connect-btn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }, this), !connected && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center-note\",\n      children: \"Please connect your wallet to play.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 22\n    }, this), connected && !currentMatch && /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 38\n    }, this), connected && renderWaiting(), connected && renderRace(), connected && renderResults(), connected && renderChat()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 548,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"aa6UxMlKAM7a0d8HxfXCsRtoJbY=\", false, function () {\n  return [useConnection, useWallet];\n});\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","sentences","useConnection","useWallet","WalletMultiButton","LAMPORTS_PER_SOL","Transaction","socket","anchor","setProvider","buildInitializeAndDepositIxns","buildJoinAndDepositIxn","buildCancelIxn","buildResolveIxn","jsxDEV","_jsxDEV","Fragment","_Fragment","Modal","isOpen","onClose","children","fullscreen","className","onClick","undefined","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s2","_s","$RefreshSig$","connection","wallet","publicKey","connected","walletAddress","toBase58","walletAddressRef","current","prov","AnchorProvider","preflightCommitment","commitment","walletBalance","setWalletBalance","getBalance","then","lamports","wager","setWager","openMatches","setOpenMatches","currentMatch","setCurrentMatch","matchStatus","setMatchStatus","matchCreatedAt","setMatchCreatedAt","timeLeft","setTimeLeft","tick","elapsed","Date","now","secs","Math","ceil","iv","setInterval","clearInterval","sentence","setSentence","inputValue","setInputValue","playerProgress","setPlayerProgress","opponentProgress","setOpponentProgress","countdown","setCountdown","raceResult","setRaceResult","isInputDisabled","setIsInputDisabled","isAccepting","setIsAccepting","opponentWallet","setOpponentWallet","hasError","setHasError","chatMessages","setChatMessages","chatInput","setChatInput","inputRef","API","process","env","REACT_APP_API_URL","lastProgTime","setLastProgTime","lastProg","setLastProg","MAX_CPS","chooseSentence","id","Array","from","reduce","a","c","charCodeAt","length","fetchOpenMatches","res","fetch","wm","json","filter","m","accepter","resetGame","connect","on","os","x","players","emit","amount","creator","nonce","find","w","progress","winner","progressMap","result","_progressMap$walletAd","_progressMap$opponent","removeAllListeners","disconnect","t","setTimeout","clearTimeout","_inputRef$current","focus","CAN_CANCEL","createMatch","alert","floor","random","ixInit","ixDeposit","escrowPda","tx","add","sendTransaction","method","headers","body","JSON","stringify","vault","Number","feePercent","console","error","message","acceptMatch","ix","cancelMatch","handleInput","type","preventDefault","val","target","value","startsWith","raw","min","delta","dt","cps","matchId","HowItWorks","FAQ","openIndex","setOpenIndex","toggle","i","faqs","q","map","f","Homepage","renderWaiting","slice","disabled","renderRace","includes","ref","onChange","onPaste","placeholder","autoFocus","style","left","renderResults","renderChat","msg","sender","onKeyDown","key","trim","toFixed","_c2","$RefreshReg$"],"sources":["/home/kokoi/typeracer-app/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport { setProvider } from \"./solana\";\nimport {\n  buildInitializeAndDepositIxns,\n  buildJoinAndDepositIxn,\n  buildCancelIxn,\n  buildResolveIxn,\n} from \"./escrow\";\n\n// ──────────────────────────────\n// Reusable Modal\n// ──────────────────────────────\nfunction Modal({ isOpen, onClose, children, fullscreen }) {\n  if (!isOpen) return null;\n  return (\n    <div className=\"modal-overlay\" onClick={!fullscreen ? onClose : undefined}>\n      <div\n        className={`modal-content ${fullscreen ? \"fullscreen\" : \"\"}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {!fullscreen && (\n          <button className=\"modal-close\" onClick={onClose}>\n            ✕\n          </button>\n        )}\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default function App() {\n  const { connection } = useConnection();\n  const wallet = useWallet();\n  const { publicKey, connected } = wallet;\n  const walletAddress = publicKey?.toBase58() || \"\";\n\n  const walletAddressRef = useRef(walletAddress);\n  useEffect(() => {\n    walletAddressRef.current = walletAddress;\n  }, [walletAddress]);\n\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\",\n      });\n      anchor.setProvider(prov);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then((lamports) => {\n        setWalletBalance(lamports / LAMPORTS_PER_SOL);\n      });\n    }\n  }, [connection, publicKey]);\n\n  // Game states\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n\n  const [matchCreatedAt, setMatchCreatedAt] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(0);\n\n  useEffect(() => {\n    if (!matchCreatedAt) return;\n    const tick = () => {\n      const elapsed = Date.now() - matchCreatedAt;\n      const secs = Math.ceil((90_000 - elapsed) / 1000);\n      setTimeLeft(secs > 0 ? secs : 0);\n    };\n    tick();\n    const iv = setInterval(tick, 1000);\n    return () => clearInterval(iv);\n  }, [matchCreatedAt]);\n\n  // Race states\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  const [hasError, setHasError] = useState(false);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n\n  const API = process.env.REACT_APP_API_URL;\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  const chooseSentence = (id) =>\n    sentences[\n      Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length\n    ];\n\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      const wm = await res.json();\n      setOpenMatches(wm.filter((m) => !m.accepter));\n    } catch {}\n  };\n\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    setMatchCreatedAt(0);\n    setTimeLeft(0);\n    setHasError(false);\n    fetchOpenMatches();\n  };\n\n  // Socket events\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", (wm) =>\n      setOpenMatches(wm.filter((m) => !m.accepter))\n    );\n    socket.on(\"newMatch\", (m) =>\n      setOpenMatches((os) => [...os, m].filter((x) => !x.accepter))\n    );\n    socket.on(\"removeMatch\", (id) =>\n      setOpenMatches((os) => os.filter((m) => m.id !== id))\n    );\n    socket.on(\"startMatch\", ({ id, players }) => {\n      socket.emit(\"joinMatch\", id);\n      setPlayerProgress(0);\n      setOpponentProgress(0);\n      setCurrentMatch({\n        id,\n        amount: currentMatch?.amount || 0,\n        creator: players[0],\n        accepter: players[1],\n        nonce: currentMatch?.nonce,\n      });\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(id));\n      setCountdown(3);\n      setOpponentWallet(players.find((w) => w !== walletAddressRef.current));\n      setHasError(false);\n    });\n    socket.on(\"opponentProgress\", ({ wallet: w, progress }) => {\n      if (w !== walletAddressRef.current) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({ winner, progressMap }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: winner === walletAddressRef.current ? \"win\" : \"lose\",\n      });\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddressRef.current] ?? 0);\n        setOpponentProgress(progressMap[opponentWallet] ?? 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", resetGame);\n    fetchOpenMatches();\n    return () => {\n      socket.removeAllListeners();\n      socket.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown((c) => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      inputRef.current?.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  const CAN_CANCEL = timeLeft === 0 && matchStatus === \"waiting\";\n\n  // ──────────────────────────────\n  // GAME ACTIONS\n  // ──────────────────────────────\n  async function createMatch() {\n    if (!connected) return alert(\"Connect wallet\");\n    try {\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const nonce = Math.floor(Math.random() * 1_000_000);\n      const { ixInit, ixDeposit, escrowPda } =\n        await buildInitializeAndDepositIxns(lamports, publicKey, nonce);\n\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      await wallet.sendTransaction(tx, connection);\n\n      const id = escrowPda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id,\n          vault: id,\n          amount: Number(wager),\n          creator: walletAddressRef.current,\n          feePercent: 5,\n          nonce,\n        }),\n      });\n\n      setCurrentMatch({\n        id,\n        amount: Number(wager),\n        creator: walletAddressRef.current,\n        nonce,\n      });\n      setMatchCreatedAt(Date.now());\n      setMatchStatus(\"waiting\");\n      socket.emit(\"joinMatch\", id);\n      fetchOpenMatches();\n    } catch (e) {\n      console.error(\"Create error:\", e);\n      alert(\"Create match failed:\\n\" + e.message);\n    }\n  }\n\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(m.id);\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(m.id));\n      setCountdown(3);\n\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ accepter: walletAddressRef.current }),\n      });\n      setCurrentMatch({ ...m, accepter: walletAddressRef.current });\n      socket.emit(\"joinMatch\", m.id);\n      setHasError(false);\n    } catch (e) {\n      console.error(\"Accept error:\", e);\n      alert(\"Accept error:\\n\" + e.message);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  async function cancelMatch(m) {\n    if (!CAN_CANCEL) return;\n    try {\n      const ix = await buildCancelIxn(\n        m.id,\n        m.creator,\n        m.accepter || m.creator\n      );\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      await fetch(`${API}/wagers/${m.id}/cancel`, { method: \"POST\" });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel error:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const val = e.target.value;\n    if (!sentence.startsWith(val)) {\n      setHasError(true);\n      return;\n    }\n    setHasError(false);\n\n    const now = Date.now();\n    const raw = Math.min(1, val.length / sentence.length);\n    const delta = raw - lastProg;\n    const dt = (now - lastProgTime) / 1000;\n    const cps = dt > 0 ? (delta * sentence.length) / dt : 0;\n    if (cps > MAX_CPS) return;\n\n    setLastProg(raw);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(raw);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddressRef.current,\n      progress: raw,\n    });\n\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ winner: walletAddressRef.current }),\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: \"win\" });\n    }\n  }\n\n  // ──────────────────────────────\n  // HOMEPAGE SECTIONS\n  // ──────────────────────────────\n  const HowItWorks = () => (\n    <section className=\"how-it-works\">\n      <h2>How It Works</h2>\n      <div className=\"steps\">\n        <div className=\"step\">\n          <span className=\"step-num\">1</span>\n          <h3>Create Match</h3>\n          <p>Set a wager and create your match.</p>\n        </div>\n        <div className=\"step\">\n          <span className=\"step-num\">2</span>\n          <h3>Join Match</h3>\n          <p>Pick an open match and join with your wallet.</p>\n        </div>\n        <div className=\"step\">\n          <span className=\"step-num\">3</span>\n          <h3>Race &amp; Win</h3>\n          <p>Type faster, win the prize pot instantly.</p>\n        </div>\n      </div>\n    </section>\n  );\n\n  const FAQ = () => {\n    const [openIndex, setOpenIndex] = useState(null);\n    const toggle = (i) => setOpenIndex(openIndex === i ? null : i);\n\n    const faqs = [\n      {\n        q: \"What is Type Racer?\",\n        a: \"A decentralized typing race game where you wager SOL and compete against others in real-time.\",\n      },\n      {\n        q: \"How do payouts work?\",\n        a: \"The winner receives the prize pot minus a small house fee, paid instantly to their wallet.\",\n      },\n      {\n        q: \"Do I need SOL to play?\",\n        a: \"Yes, you need a Solana wallet (e.g. Phantom) funded with SOL to create or join matches.\",\n      },\n    ];\n\n    return (\n      <section className=\"faq\">\n        <h2>FAQ</h2>\n        {faqs.map((f, i) => (\n          <div\n            key={i}\n            className={`faq-item ${openIndex === i ? \"open\" : \"\"}`}\n            onClick={() => toggle(i)}\n          >\n            <div className=\"faq-question\">{f.q}</div>\n            {openIndex === i && <div className=\"faq-answer\">{f.a}</div>}\n          </div>\n        ))}\n      </section>\n    );\n  };\n\n  const Homepage = () => (\n    <div className=\"homepage\">\n      <div className=\"cards\">\n        <div className=\"home-card\" onClick={() => createMatch()}>\n          <h3>Create Match</h3>\n          <p>Set your wager and start a new race.</p>\n        </div>\n        <div className=\"home-card\" onClick={() => fetchOpenMatches()}>\n          <h3>Join Match</h3>\n          <p>Browse open matches and join instantly.</p>\n        </div>\n      </div>\n      <HowItWorks />\n      <FAQ />\n    </div>\n  );\n\n  // ──────────────────────────────\n  // MODALS (in-match UI)\n  // ──────────────────────────────\n  const renderWaiting = () => (\n    <Modal isOpen={currentMatch && matchStatus === \"waiting\"} fullscreen>\n      <h2>Waiting for opponent…</h2>\n      <p>Match ID: {currentMatch?.id.slice(0, 6)}…</p>\n      <button\n        className=\"btn btn-cancel\"\n        onClick={() => cancelMatch(currentMatch)}\n        disabled={!CAN_CANCEL}\n      >\n        Cancel Match\n      </button>\n    </Modal>\n  );\n\n  const renderRace = () => (\n    <Modal\n      isOpen={currentMatch && [\"ready\", \"racing\"].includes(matchStatus)}\n      fullscreen\n    >\n      {matchStatus === \"ready\" && <h2>Starting in {countdown}</h2>}\n      {matchStatus === \"racing\" && (\n        <>\n          <div className=\"sentence-display\">{sentence}</div>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInput}\n            onPaste={handleInput}\n            placeholder=\"Start typing…\"\n            disabled={isInputDisabled}\n            autoFocus\n            className={hasError ? \"input-error\" : \"\"}\n          />\n          {hasError && <div className=\"error-text\">Mistake detected – fix it.</div>}\n          <div className=\"track\">\n            <div className=\"lane\">\n              <div className=\"car car-player\" style={{ left: `${playerProgress * 100}%` }}>\n                🚗\n              </div>\n            </div>\n            <div className=\"lane\">\n              <div className=\"car car-opponent\" style={{ left: `${opponentProgress * 100}%` }}>\n                🏎️\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </Modal>\n  );\n\n  const renderResults = () => (\n    <Modal isOpen={matchStatus === \"finished\"} fullscreen>\n      {raceResult?.result === \"win\" ? (\n        <div className=\"results results-win\">\n          <h2>🏆 You Won!</h2>\n          <button\n            className=\"btn\"\n            onClick={async () => {\n              try {\n                const ix = await buildResolveIxn(\n                  currentMatch.id,\n                  walletAddressRef.current\n                );\n                const tx = new Transaction().add(ix);\n                await wallet.sendTransaction(tx, connection);\n                resetGame();\n              } catch (e) {\n                console.error(\"Claim error:\", e);\n                alert(\"Payout error:\\n\" + e.message);\n              }\n            }}\n          >\n            Claim Winnings\n          </button>\n        </div>\n      ) : (\n        <div className=\"results results-lose\">\n          <h2>😢 You Lost!</h2>\n          <button className=\"btn btn-outline\" onClick={resetGame}>\n            Back to Matches\n          </button>\n        </div>\n      )}\n    </Modal>\n  );\n\n  const renderChat = () => (\n    <Modal isOpen={matchStatus === \"finished\"} fullscreen>\n      <h2>Chat</h2>\n      <div className=\"chat-messages\">\n        {chatMessages.map((msg, i) => (\n          <p\n            key={i}\n            className={msg.sender === walletAddressRef.current ? \"self\" : \"other\"}\n          >\n            <strong>{msg.sender.slice(0, 6)}…:</strong> {msg.message}\n          </p>\n        ))}\n      </div>\n      <div className=\"chat-input\">\n        <input\n          value={chatInput}\n          onChange={(e) => setChatInput(e.target.value)}\n          onKeyDown={(e) =>\n            e.key === \"Enter\" &&\n            socket.emit(\"message\", {\n              matchId: currentMatch.id,\n              sender: walletAddressRef.current,\n              message: chatInput,\n            }) &&\n            setChatInput(\"\")\n          }\n          placeholder=\"Type message…\"\n        />\n        <button className=\"btn\" disabled={!chatInput.trim()}>\n          Send\n        </button>\n      </div>\n    </Modal>\n  );\n\n  // ──────────────────────────────\n  // RETURN\n  // ──────────────────────────────\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1 className=\"title\">Type Racer</h1>\n        {connected ? (\n          <div className=\"wallet-info\">\n            {walletAddressRef.current.slice(0, 6)}… ({walletBalance.toFixed(2)} SOL)\n          </div>\n        ) : (\n          <WalletMultiButton className=\"connect-btn\" />\n        )}\n      </header>\n\n      {!connected && <p className=\"center-note\">Please connect your wallet to play.</p>}\n      {connected && !currentMatch && <Homepage />}\n      {connected && renderWaiting()}\n      {connected && renderRace()}\n      {connected && renderResults()}\n      {connected && renderChat()}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}