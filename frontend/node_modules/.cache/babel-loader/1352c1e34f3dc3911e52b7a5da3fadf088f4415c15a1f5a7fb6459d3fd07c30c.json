{"ast":null,"code":"// src/escrow.js\nimport * as anchor from \"@coral-xyz/anchor\";\nimport { PublicKey, SystemProgram } from \"@solana/web3.js\";\nimport idl from \"./idl/typeracer_escrow.json\";\nimport { PROGRAM_ID, provider, program } from \"./solana\";\n\n/** Initialize & deposit */\nexport async function buildInitializeAndDepositIxns(wagerLamports, playerPublicKey, nonce) {\n  const escrowSeeds = [Buffer.from(\"escrow\"), playerPublicKey.toBuffer(), new anchor.BN(nonce).toArrayLike(Buffer, \"le\", 8)];\n  const [escrowPda] = await PublicKey.findProgramAddress(escrowSeeds, PROGRAM_ID);\n  const ixInit = await program.methods.initialize(new anchor.BN(wagerLamports), new anchor.BN(nonce)).accounts({\n    escrow: escrowPda,\n    player1: playerPublicKey,\n    authority: provider.wallet.publicKey,\n    systemProgram: SystemProgram.programId\n  }).instruction();\n  const ixDeposit = await program.methods.deposit().accounts({\n    escrow: escrowPda,\n    payer: playerPublicKey,\n    escrowAccount: escrowPda,\n    systemProgram: SystemProgram.programId\n  }).instruction();\n  return {\n    ixInit,\n    ixDeposit,\n    escrowPda\n  };\n}\n\n/** Join & deposit */\nexport async function buildJoinAndDepositIxn(escrowPda) {\n  const ix = await program.methods.joinAndDeposit().accounts({\n    escrow: escrowPda,\n    player2: provider.wallet.publicKey,\n    escrowAccount: escrowPda,\n    systemProgram: SystemProgram.programId\n  }).instruction();\n  return ix;\n}\n\n/** Cancel */\nexport async function buildCancelIxn(escrowPda, player1, player2) {\n  const ix = await program.methods.cancel().accounts({\n    escrow: escrowPda,\n    player1,\n    player2,\n    escrowAccount: escrowPda,\n    authority: provider.wallet.publicKey\n  }).instruction();\n  return ix;\n}","map":{"version":3,"names":["anchor","PublicKey","SystemProgram","idl","PROGRAM_ID","provider","program","buildInitializeAndDepositIxns","wagerLamports","playerPublicKey","nonce","escrowSeeds","Buffer","from","toBuffer","BN","toArrayLike","escrowPda","findProgramAddress","ixInit","methods","initialize","accounts","escrow","player1","authority","wallet","publicKey","systemProgram","programId","instruction","ixDeposit","deposit","payer","escrowAccount","buildJoinAndDepositIxn","ix","joinAndDeposit","player2","buildCancelIxn","cancel"],"sources":["/home/kokoi/sol-wager-app/frontend/src/escrow.js"],"sourcesContent":["// src/escrow.js\nimport * as anchor from \"@coral-xyz/anchor\";\nimport { PublicKey, SystemProgram } from \"@solana/web3.js\";\nimport idl from \"./idl/typeracer_escrow.json\";\nimport { PROGRAM_ID, provider, program } from \"./solana\";\n\n/** Initialize & deposit */\nexport async function buildInitializeAndDepositIxns(\n  wagerLamports,\n  playerPublicKey,\n  nonce\n) {\n  const escrowSeeds = [\n    Buffer.from(\"escrow\"),\n    playerPublicKey.toBuffer(),\n    new anchor.BN(nonce).toArrayLike(Buffer, \"le\", 8),\n  ];\n  const [escrowPda] = await PublicKey.findProgramAddress(escrowSeeds, PROGRAM_ID);\n\n  const ixInit = await program.methods\n    .initialize(new anchor.BN(wagerLamports), new anchor.BN(nonce))\n    .accounts({\n      escrow: escrowPda,\n      player1: playerPublicKey,\n      authority: provider.wallet.publicKey,\n      systemProgram: SystemProgram.programId,\n    })\n    .instruction();\n\n  const ixDeposit = await program.methods\n    .deposit()\n    .accounts({\n      escrow: escrowPda,\n      payer: playerPublicKey,\n      escrowAccount: escrowPda,\n      systemProgram: SystemProgram.programId,\n    })\n    .instruction();\n\n  return { ixInit, ixDeposit, escrowPda };\n}\n\n/** Join & deposit */\nexport async function buildJoinAndDepositIxn(escrowPda) {\n  const ix = await program.methods\n    .joinAndDeposit()\n    .accounts({\n      escrow: escrowPda,\n      player2: provider.wallet.publicKey,\n      escrowAccount: escrowPda,\n      systemProgram: SystemProgram.programId,\n    })\n    .instruction();\n  return ix;\n}\n\n/** Cancel */\nexport async function buildCancelIxn(escrowPda, player1, player2) {\n  const ix = await program.methods\n    .cancel()\n    .accounts({\n      escrow: escrowPda,\n      player1,\n      player2,\n      escrowAccount: escrowPda,\n      authority: provider.wallet.publicKey,\n    })\n    .instruction();\n  return ix;\n}\n"],"mappings":"AAAA;AACA,OAAO,KAAKA,MAAM,MAAM,mBAAmB;AAC3C,SAASC,SAAS,EAAEC,aAAa,QAAQ,iBAAiB;AAC1D,OAAOC,GAAG,MAAM,6BAA6B;AAC7C,SAASC,UAAU,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,UAAU;;AAExD;AACA,OAAO,eAAeC,6BAA6BA,CACjDC,aAAa,EACbC,eAAe,EACfC,KAAK,EACL;EACA,MAAMC,WAAW,GAAG,CAClBC,MAAM,CAACC,IAAI,CAAC,QAAQ,CAAC,EACrBJ,eAAe,CAACK,QAAQ,CAAC,CAAC,EAC1B,IAAId,MAAM,CAACe,EAAE,CAACL,KAAK,CAAC,CAACM,WAAW,CAACJ,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAClD;EACD,MAAM,CAACK,SAAS,CAAC,GAAG,MAAMhB,SAAS,CAACiB,kBAAkB,CAACP,WAAW,EAAEP,UAAU,CAAC;EAE/E,MAAMe,MAAM,GAAG,MAAMb,OAAO,CAACc,OAAO,CACjCC,UAAU,CAAC,IAAIrB,MAAM,CAACe,EAAE,CAACP,aAAa,CAAC,EAAE,IAAIR,MAAM,CAACe,EAAE,CAACL,KAAK,CAAC,CAAC,CAC9DY,QAAQ,CAAC;IACRC,MAAM,EAAEN,SAAS;IACjBO,OAAO,EAAEf,eAAe;IACxBgB,SAAS,EAAEpB,QAAQ,CAACqB,MAAM,CAACC,SAAS;IACpCC,aAAa,EAAE1B,aAAa,CAAC2B;EAC/B,CAAC,CAAC,CACDC,WAAW,CAAC,CAAC;EAEhB,MAAMC,SAAS,GAAG,MAAMzB,OAAO,CAACc,OAAO,CACpCY,OAAO,CAAC,CAAC,CACTV,QAAQ,CAAC;IACRC,MAAM,EAAEN,SAAS;IACjBgB,KAAK,EAAExB,eAAe;IACtByB,aAAa,EAAEjB,SAAS;IACxBW,aAAa,EAAE1B,aAAa,CAAC2B;EAC/B,CAAC,CAAC,CACDC,WAAW,CAAC,CAAC;EAEhB,OAAO;IAAEX,MAAM;IAAEY,SAAS;IAAEd;EAAU,CAAC;AACzC;;AAEA;AACA,OAAO,eAAekB,sBAAsBA,CAAClB,SAAS,EAAE;EACtD,MAAMmB,EAAE,GAAG,MAAM9B,OAAO,CAACc,OAAO,CAC7BiB,cAAc,CAAC,CAAC,CAChBf,QAAQ,CAAC;IACRC,MAAM,EAAEN,SAAS;IACjBqB,OAAO,EAAEjC,QAAQ,CAACqB,MAAM,CAACC,SAAS;IAClCO,aAAa,EAAEjB,SAAS;IACxBW,aAAa,EAAE1B,aAAa,CAAC2B;EAC/B,CAAC,CAAC,CACDC,WAAW,CAAC,CAAC;EAChB,OAAOM,EAAE;AACX;;AAEA;AACA,OAAO,eAAeG,cAAcA,CAACtB,SAAS,EAAEO,OAAO,EAAEc,OAAO,EAAE;EAChE,MAAMF,EAAE,GAAG,MAAM9B,OAAO,CAACc,OAAO,CAC7BoB,MAAM,CAAC,CAAC,CACRlB,QAAQ,CAAC;IACRC,MAAM,EAAEN,SAAS;IACjBO,OAAO;IACPc,OAAO;IACPJ,aAAa,EAAEjB,SAAS;IACxBQ,SAAS,EAAEpB,QAAQ,CAACqB,MAAM,CAACC;EAC7B,CAAC,CAAC,CACDG,WAAW,CAAC,CAAC;EAChB,OAAOM,EAAE;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}