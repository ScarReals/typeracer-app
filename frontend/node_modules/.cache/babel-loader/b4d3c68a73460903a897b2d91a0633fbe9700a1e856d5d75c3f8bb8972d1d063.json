{"ast":null,"code":"var _jsxFileName = \"/home/kokoi/sol-wager-app/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport { setProvider } from \"./solana\";\nimport { buildInitializeAndDepositIxns, buildJoinAndDepositIxn, buildCancelIxn, buildResolveIxn } from \"./escrow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    connection\n  } = useConnection();\n  const wallet = useWallet();\n  const {\n    publicKey,\n    connected\n  } = wallet;\n  const walletAddress = (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) || \"\";\n\n  // ── Setup Anchor provider ─────────────────────────────────────────────────\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\"\n      });\n      anchor.setProvider(prov);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n\n  // ── Wallet balance (errors silenced) ────────────────────────────────────────\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then(lamports => setWalletBalance(lamports / LAMPORTS_PER_SOL)).catch(() => {});\n    }\n  }, [connection, publicKey]);\n\n  // ── Game & Race State ───────────────────────────────────────────────────────\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // ── Socket Listeners ────────────────────────────────────────────────────────\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", m => setOpenMatches(os => [...os, m]));\n    socket.on(\"removeMatch\", id => setOpenMatches(os => os.filter(m => m.id !== id)));\n    socket.on(\"startMatch\", ({\n      id,\n      players\n    }) => {\n      setCurrentMatch({\n        id,\n        amount: (currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.amount) || 0,\n        creator: players[0],\n        accepter: players[1]\n      });\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(id));\n      setCountdown(3);\n      setOpponentWallet(players.find(w => w !== walletAddress));\n    });\n    socket.on(\"opponentProgress\", ({\n      wallet: w,\n      progress\n    }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({\n      winner,\n      progressMap\n    }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: winner === walletAddress ? \"win\" : \"lose\"\n      });\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddress] || 0);\n        setOpponentProgress(progressMap[opponentWallet] || 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", () => resetGame());\n    fetchOpenMatches();\n    return () => {\n      socket.disconnect();\n      socket.removeAllListeners();\n    };\n  }, [walletAddress, currentMatch, opponentWallet]);\n\n  // ── Countdown Effect ────────────────────────────────────────────────────────\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown(c => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      var _inputRef$current;\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // ── Helpers ─────────────────────────────────────────────────────────────────\n  const chooseSentence = id => sentences[Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length];\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // ── 1) CREATE MATCH ─────────────────────────────────────────────────────────\n  async function createMatch() {\n    if (!connected) return alert(\"Connect wallet\");\n    try {\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const nonce = Math.floor(Math.random() * 1e6);\n      const {\n        ixInit,\n        ixDeposit,\n        escrowPda\n      } = await buildInitializeAndDepositIxns(lamports, publicKey, nonce);\n\n      // fire and forget—don’t await confirmation\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      wallet.sendTransaction(tx, connection).catch(() => {});\n\n      // immediately show waiting\n      const id = escrowPda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddress,\n          feePercent: 5,\n          vault: id,\n          nonce\n        })\n      });\n      setCurrentMatch({\n        id,\n        amount: Number(wager),\n        creator: walletAddress,\n        nonce\n      });\n      socket.emit(\"joinMatch\", id);\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"Create match failed:\", e);\n      alert(\"Create match failed\");\n    }\n  }\n\n  // ── 2) ACCEPT MATCH ─────────────────────────────────────────────────────────\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(new PublicKey(m.id));\n      const tx = new Transaction().add(ix);\n      wallet.sendTransaction(tx, connection).catch(() => {});\n\n      // immediately start racing locally\n      setCurrentMatch(m);\n      setMatchStatus(\"racing\");\n      setSentence(chooseSentence(m.id));\n      setInputValue(\"\");\n      setPlayerProgress(0);\n      setOpponentProgress(0);\n      setIsInputDisabled(false);\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          accepter: walletAddress,\n          vault: m.id\n        })\n      });\n    } catch (e) {\n      console.error(\"Accept failed:\", e);\n      alert(\"Accept failed\");\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  // ── 3) CANCEL MATCH ─────────────────────────────────────────────────────────\n  async function cancelMatch(m) {\n    try {\n      const escrowPda = new PublicKey(m.id);\n      const ix = buildCancelIxn(escrowPda, publicKey, new PublicKey(m.accepter || m.creator));\n      const tx = new Transaction().add(ix);\n      wallet.sendTransaction(tx, connection).catch(() => {});\n      await fetch(`${API}/wagers/${m.id}/cancel`, {\n        method: \"POST\"\n      });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel failed:\", e);\n      alert(\"Cancel failed\");\n    }\n  }\n\n  // ── 4) TYPING INPUT ─────────────────────────────────────────────────────────\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const prog = Math.min(1, val.length / sentence.length);\n    const delta = prog - lastProg;\n    const dt = (now - lastProgTime) / 1000;\n    const chars = delta * sentence.length;\n    const cps = dt > 0 ? chars / dt : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(prog);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(prog);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: prog\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          winner: walletAddress\n        })\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: \"win\"\n      });\n    }\n  }\n\n  // ── RENDER ──────────────────────────────────────────────────────────────────\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Type Racer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: [walletAddress.slice(0, 6), \"\\u2026 (\", walletBalance.toFixed(2), \" SOL)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), !connected && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your wallet to play.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 22\n    }, this), connected && !currentMatch && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"matchmaking\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Wager (SOL):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          value: wager,\n          onChange: e => setWager(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createMatch,\n        disabled: !wager || wager <= 0,\n        children: \"Create Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Open Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: openMatches.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [m.id.slice(0, 6), \"\\u2026 | \", m.amount, \" SOL\", \" \", m.creator === walletAddress ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => cancelMatch(m),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => acceptMatch(m),\n            disabled: !!currentMatch || isAccepting,\n            children: isAccepting ? \"Accepting…\" : \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 19\n          }, this)]\n        }, m.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }, this), connected && currentMatch && matchStatus === \"racing\" && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"race-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence-display\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInput,\n        onPaste: handleInput,\n        placeholder: \"Start typing\\u2026\",\n        disabled: isInputDisabled,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-player\",\n            style: {\n              left: `${playerProgress * 100}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-opponent\",\n            style: {\n              left: `${opponentProgress * 100}%`\n            },\n            children: \"\\uD83C\\uDFCE\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }, this), connected && currentMatch && matchStatus === \"finished\" && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-chat\",\n      children: [(raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results results-win\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDFC6 You Won!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: async () => {\n            const ix = await buildResolveIxn(new PublicKey(currentMatch.id), publicKey);\n            const tx = new Transaction().add(ix);\n            wallet.sendTransaction(tx, connection).catch(() => {});\n            resetGame();\n          },\n          children: \"Claim Winnings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results results-lose\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDE22 You Lost!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          children: \"Back to Matches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: chatMessages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [msg.sender.slice(0, 6), \"\\u2026:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 19\n            }, this), \" \", msg.message]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: chatInput,\n          onChange: e => setChatInput(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddress,\n            message: chatInput\n          }) && setChatInput(\"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            socket.emit(\"message\", {\n              matchId: currentMatch.id,\n              sender: walletAddress,\n              message: chatInput\n            });\n            setChatInput(\"\");\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EyRLO56gPIrL5vKLsC3H/teYJsA=\", false, function () {\n  return [useConnection, useWallet];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","sentences","useConnection","useWallet","WalletMultiButton","LAMPORTS_PER_SOL","PublicKey","Transaction","socket","anchor","setProvider","buildInitializeAndDepositIxns","buildJoinAndDepositIxn","buildCancelIxn","buildResolveIxn","jsxDEV","_jsxDEV","App","_s","connection","wallet","publicKey","connected","walletAddress","toBase58","prov","AnchorProvider","preflightCommitment","commitment","walletBalance","setWalletBalance","getBalance","then","lamports","catch","wager","setWager","openMatches","setOpenMatches","currentMatch","setCurrentMatch","matchStatus","setMatchStatus","sentence","setSentence","inputValue","setInputValue","playerProgress","setPlayerProgress","opponentProgress","setOpponentProgress","countdown","setCountdown","raceResult","setRaceResult","isInputDisabled","setIsInputDisabled","isAccepting","setIsAccepting","opponentWallet","setOpponentWallet","chatMessages","setChatMessages","chatInput","setChatInput","inputRef","API","process","env","REACT_APP_API_URL","lastProgTime","setLastProgTime","Date","now","lastProg","setLastProg","MAX_CPS","connect","on","m","os","id","filter","players","amount","creator","accepter","chooseSentence","find","w","progress","winner","progressMap","result","resetGame","fetchOpenMatches","disconnect","removeAllListeners","t","setTimeout","c","clearTimeout","_inputRef$current","current","focus","Array","from","reduce","a","charCodeAt","length","res","fetch","json","createMatch","alert","Math","floor","nonce","random","ixInit","ixDeposit","escrowPda","tx","add","sendTransaction","method","headers","body","JSON","stringify","Number","feePercent","vault","emit","e","console","error","acceptMatch","ix","cancelMatch","handleInput","type","preventDefault","val","target","value","prog","min","delta","dt","chars","cps","matchId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","toFixed","step","onChange","onClick","disabled","map","ref","onPaste","placeholder","autoFocus","style","left","msg","i","sender","message","onKeyDown","key","_c","$RefreshReg$"],"sources":["/home/kokoi/sol-wager-app/frontend/src/App.jsx"],"sourcesContent":["// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport {\n  LAMPORTS_PER_SOL,\n  PublicKey,\n  Transaction,\n} from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport { setProvider } from \"./solana\";\nimport {\n  buildInitializeAndDepositIxns,\n  buildJoinAndDepositIxn,\n  buildCancelIxn,\n  buildResolveIxn,\n} from \"./escrow\";\n\nexport default function App() {\n  const { connection } = useConnection();\n  const wallet = useWallet();\n  const { publicKey, connected } = wallet;\n  const walletAddress = publicKey?.toBase58() || \"\";\n\n  // ── Setup Anchor provider ─────────────────────────────────────────────────\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\",\n      });\n      anchor.setProvider(prov);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n\n  // ── Wallet balance (errors silenced) ────────────────────────────────────────\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection\n        .getBalance(publicKey)\n        .then((lamports) => setWalletBalance(lamports / LAMPORTS_PER_SOL))\n        .catch(() => {});\n    }\n  }, [connection, publicKey]);\n\n  // ── Game & Race State ───────────────────────────────────────────────────────\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // ── Socket Listeners ────────────────────────────────────────────────────────\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", (m) => setOpenMatches((os) => [...os, m]));\n    socket.on(\"removeMatch\", (id) =>\n      setOpenMatches((os) => os.filter((m) => m.id !== id))\n    );\n    socket.on(\"startMatch\", ({ id, players }) => {\n      setCurrentMatch({\n        id,\n        amount: currentMatch?.amount || 0,\n        creator: players[0],\n        accepter: players[1],\n      });\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(id));\n      setCountdown(3);\n      setOpponentWallet(players.find((w) => w !== walletAddress));\n    });\n    socket.on(\"opponentProgress\", ({ wallet: w, progress }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({ winner, progressMap }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: winner === walletAddress ? \"win\" : \"lose\" });\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddress] || 0);\n        setOpponentProgress(progressMap[opponentWallet] || 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", () => resetGame());\n    fetchOpenMatches();\n    return () => {\n      socket.disconnect();\n      socket.removeAllListeners();\n    };\n  }, [walletAddress, currentMatch, opponentWallet]);\n\n  // ── Countdown Effect ────────────────────────────────────────────────────────\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown((c) => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      inputRef.current?.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // ── Helpers ─────────────────────────────────────────────────────────────────\n  const chooseSentence = (id) =>\n    sentences[\n      Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length\n    ];\n\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // ── 1) CREATE MATCH ─────────────────────────────────────────────────────────\n  async function createMatch() {\n    if (!connected) return alert(\"Connect wallet\");\n    try {\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const nonce = Math.floor(Math.random() * 1e6);\n      const { ixInit, ixDeposit, escrowPda } =\n        await buildInitializeAndDepositIxns(lamports, publicKey, nonce);\n\n      // fire and forget—don’t await confirmation\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      wallet.sendTransaction(tx, connection).catch(() => {});\n\n      // immediately show waiting\n      const id = escrowPda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddress,\n          feePercent: 5,\n          vault: id,\n          nonce,\n        }),\n      });\n      setCurrentMatch({ id, amount: Number(wager), creator: walletAddress, nonce });\n      socket.emit(\"joinMatch\", id);\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"Create match failed:\", e);\n      alert(\"Create match failed\");\n    }\n  }\n\n  // ── 2) ACCEPT MATCH ─────────────────────────────────────────────────────────\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(new PublicKey(m.id));\n      const tx = new Transaction().add(ix);\n      wallet.sendTransaction(tx, connection).catch(() => {});\n\n      // immediately start racing locally\n      setCurrentMatch(m);\n      setMatchStatus(\"racing\");\n      setSentence(chooseSentence(m.id));\n      setInputValue(\"\");\n      setPlayerProgress(0);\n      setOpponentProgress(0);\n      setIsInputDisabled(false);\n\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ accepter: walletAddress, vault: m.id }),\n      });\n    } catch (e) {\n      console.error(\"Accept failed:\", e);\n      alert(\"Accept failed\");\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  // ── 3) CANCEL MATCH ─────────────────────────────────────────────────────────\n  async function cancelMatch(m) {\n    try {\n      const escrowPda = new PublicKey(m.id);\n      const ix = buildCancelIxn(\n        escrowPda,\n        publicKey,\n        new PublicKey(m.accepter || m.creator)\n      );\n      const tx = new Transaction().add(ix);\n      wallet.sendTransaction(tx, connection).catch(() => {});\n      await fetch(`${API}/wagers/${m.id}/cancel`, { method: \"POST\" });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel failed:\", e);\n      alert(\"Cancel failed\");\n    }\n  }\n\n  // ── 4) TYPING INPUT ─────────────────────────────────────────────────────────\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const prog = Math.min(1, val.length / sentence.length);\n    const delta = prog - lastProg;\n    const dt = (now - lastProgTime) / 1000;\n    const chars = delta * sentence.length;\n    const cps = dt > 0 ? chars / dt : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(prog);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(prog);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: prog,\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ winner: walletAddress }),\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: \"win\" });\n    }\n  }\n\n  // ── RENDER ──────────────────────────────────────────────────────────────────\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Type Racer</h1>\n        {connected ? (\n          <div className=\"wallet-info\">\n            {walletAddress.slice(0, 6)}… ({walletBalance.toFixed(2)} SOL)\n          </div>\n        ) : (\n          <WalletMultiButton />\n        )}\n      </header>\n      {!connected && <p>Please connect your wallet to play.</p>}\n\n      {connected && !currentMatch && (\n        <section className=\"matchmaking\">\n          <h2>Create a Match</h2>\n          <label>\n            Wager (SOL):\n            <input\n              type=\"number\"\n              min=\"0.01\"\n              step=\"0.01\"\n              value={wager}\n              onChange={(e) => setWager(Number(e.target.value))}\n            />\n          </label>\n          <button onClick={createMatch} disabled={!wager || wager <= 0}>\n            Create Match\n          </button>\n          <h2>Open Matches</h2>\n          <ul>\n            {openMatches.map((m) => (\n              <li key={m.id}>\n                {m.id.slice(0, 6)}… | {m.amount} SOL{\" \"}\n                {m.creator === walletAddress ? (\n                  <button onClick={() => cancelMatch(m)}>Cancel</button>\n                ) : (\n                  <button\n                    onClick={() => acceptMatch(m)}\n                    disabled={!!currentMatch || isAccepting}\n                  >\n                    {isAccepting ? \"Accepting…\" : \"Accept\"}\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n        </section>\n      )}\n\n      {connected && currentMatch && matchStatus === \"racing\" && (\n        <section className=\"race-section\">\n          <div className=\"sentence-display\">{sentence}</div>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInput}\n            onPaste={handleInput}\n            placeholder=\"Start typing…\"\n            disabled={isInputDisabled}\n            autoFocus\n          />\n          <div className=\"track\">\n            <div className=\"lane\">\n              <div\n                className=\"car car-player\"\n                style={{ left: `${playerProgress * 100}%` }}\n              >\n                🚗\n              </div>\n            </div>\n            <div className=\"lane\">\n              <div\n                className=\"car car-opponent\"\n                style={{ left: `${opponentProgress * 100}%` }}\n              >\n                🏎️\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n\n      {connected && currentMatch && matchStatus === \"finished\" && (\n        <section className=\"results-chat\">\n          {raceResult?.result === \"win\" ? (\n            <div className=\"results results-win\">\n              <h2>🏆 You Won!</h2>\n              <button\n                onClick={async () => {\n                  const ix = await buildResolveIxn(\n                    new PublicKey(currentMatch.id),\n                    publicKey\n                  );\n                  const tx = new Transaction().add(ix);\n                  wallet.sendTransaction(tx, connection).catch(() => {});\n                  resetGame();\n                }}\n              >\n                Claim Winnings\n              </button>\n            </div>\n          ) : (\n            <div className=\"results results-lose\">\n              <h2>😢 You Lost!</h2>\n              <button onClick={resetGame}>Back to Matches</button>\n            </div>\n          )}\n          <div className=\"chat-section\">\n            <h2>Chat</h2>\n            <div className=\"chat-messages\">\n              {chatMessages.map((msg, i) => (\n                <p key={i}>\n                  <strong>{msg.sender.slice(0, 6)}…:</strong> {msg.message}\n                </p>\n              ))}\n            </div>\n            <input\n              value={chatInput}\n              onChange={(e) => setChatInput(e.target.value)}\n              onKeyDown={(e) =>\n                e.key === \"Enter\" &&\n                socket.emit(\"message\", {\n                  matchId: currentMatch.id,\n                  sender: walletAddress,\n                  message: chatInput,\n                }) &&\n                setChatInput(\"\")\n              }\n            />\n            <button\n              onClick={() => {\n                socket.emit(\"message\", {\n                  matchId: currentMatch.id,\n                  sender: walletAddress,\n                  message: chatInput,\n                });\n                setChatInput(\"\");\n              }}\n            >\n              Send\n            </button>\n          </div>\n        </section>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,aAAa,EAAEC,SAAS,QAAQ,8BAA8B;AACvE,SAASC,iBAAiB,QAAQ,iCAAiC;AACnE,SACEC,gBAAgB,EAChBC,SAAS,EACTC,WAAW,QACN,iBAAiB;AACxB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,KAAKC,MAAM,MAAM,mBAAmB;AAC3C,SAASC,WAAW,QAAQ,UAAU;AACtC,SACEC,6BAA6B,EAC7BC,sBAAsB,EACtBC,cAAc,EACdC,eAAe,QACV,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElB,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAW,CAAC,GAAGjB,aAAa,CAAC,CAAC;EACtC,MAAMkB,MAAM,GAAGjB,SAAS,CAAC,CAAC;EAC1B,MAAM;IAAEkB,SAAS;IAAEC;EAAU,CAAC,GAAGF,MAAM;EACvC,MAAMG,aAAa,GAAG,CAAAF,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEG,QAAQ,CAAC,CAAC,KAAI,EAAE;;EAEjD;EACAzB,SAAS,CAAC,MAAM;IACd,IAAIuB,SAAS,IAAIH,UAAU,EAAE;MAC3B,MAAMM,IAAI,GAAG,IAAIhB,MAAM,CAACiB,cAAc,CAACP,UAAU,EAAEC,MAAM,EAAE;QACzDO,mBAAmB,EAAE,WAAW;QAChCC,UAAU,EAAE;MACd,CAAC,CAAC;MACFnB,MAAM,CAACC,WAAW,CAACe,IAAI,CAAC;MACxBf,WAAW,CAACU,MAAM,CAAC;IACrB;EACF,CAAC,EAAE,CAACE,SAAS,EAAEH,UAAU,EAAEC,MAAM,CAAC,CAAC;;EAEnC;EACA,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC;EACrDC,SAAS,CAAC,MAAM;IACd,IAAIoB,UAAU,IAAIE,SAAS,EAAE;MAC3BF,UAAU,CACPY,UAAU,CAACV,SAAS,CAAC,CACrBW,IAAI,CAAEC,QAAQ,IAAKH,gBAAgB,CAACG,QAAQ,GAAG5B,gBAAgB,CAAC,CAAC,CACjE6B,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACf,UAAU,EAAEE,SAAS,CAAC,CAAC;;EAE3B;EACA,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGtC,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACuC,WAAW,EAAEC,cAAc,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACyC,YAAY,EAAEC,eAAe,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC2C,WAAW,EAAEC,cAAc,CAAC,GAAG5C,QAAQ,CAAC,SAAS,CAAC;EAEzD,MAAM,CAAC6C,QAAQ,EAAEC,WAAW,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC+C,UAAU,EAAEC,aAAa,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiD,cAAc,EAAEC,iBAAiB,CAAC,GAAGlD,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACmD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpD,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACqD,SAAS,EAAEC,YAAY,CAAC,GAAGtD,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACuD,UAAU,EAAEC,aAAa,CAAC,GAAGxD,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACyD,eAAe,EAAEC,kBAAkB,CAAC,GAAG1D,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC2D,WAAW,EAAEC,cAAc,CAAC,GAAG5D,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC6D,cAAc,EAAEC,iBAAiB,CAAC,GAAG9D,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAM,CAAC+D,YAAY,EAAEC,eAAe,CAAC,GAAGhE,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiE,SAAS,EAAEC,YAAY,CAAC,GAAGlE,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMmE,QAAQ,GAAGjE,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMkE,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EAEzC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGzE,QAAQ,CAAC0E,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG7E,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM8E,OAAO,GAAG,EAAE;;EAElB;EACA7E,SAAS,CAAC,MAAM;IACdS,MAAM,CAACqE,OAAO,CAAC,CAAC;IAChBrE,MAAM,CAACsE,EAAE,CAAC,aAAa,EAAExC,cAAc,CAAC;IACxC9B,MAAM,CAACsE,EAAE,CAAC,UAAU,EAAGC,CAAC,IAAKzC,cAAc,CAAE0C,EAAE,IAAK,CAAC,GAAGA,EAAE,EAAED,CAAC,CAAC,CAAC,CAAC;IAChEvE,MAAM,CAACsE,EAAE,CAAC,aAAa,EAAGG,EAAE,IAC1B3C,cAAc,CAAE0C,EAAE,IAAKA,EAAE,CAACE,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACE,EAAE,KAAKA,EAAE,CAAC,CACtD,CAAC;IACDzE,MAAM,CAACsE,EAAE,CAAC,YAAY,EAAE,CAAC;MAAEG,EAAE;MAAEE;IAAQ,CAAC,KAAK;MAC3C3C,eAAe,CAAC;QACdyC,EAAE;QACFG,MAAM,EAAE,CAAA7C,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE6C,MAAM,KAAI,CAAC;QACjCC,OAAO,EAAEF,OAAO,CAAC,CAAC,CAAC;QACnBG,QAAQ,EAAEH,OAAO,CAAC,CAAC;MACrB,CAAC,CAAC;MACFzC,cAAc,CAAC,OAAO,CAAC;MACvBE,WAAW,CAAC2C,cAAc,CAACN,EAAE,CAAC,CAAC;MAC/B7B,YAAY,CAAC,CAAC,CAAC;MACfQ,iBAAiB,CAACuB,OAAO,CAACK,IAAI,CAAEC,CAAC,IAAKA,CAAC,KAAKlE,aAAa,CAAC,CAAC;IAC7D,CAAC,CAAC;IACFf,MAAM,CAACsE,EAAE,CAAC,kBAAkB,EAAE,CAAC;MAAE1D,MAAM,EAAEqE,CAAC;MAAEC;IAAS,CAAC,KAAK;MACzD,IAAID,CAAC,KAAKlE,aAAa,EAAE2B,mBAAmB,CAACwC,QAAQ,CAAC;IACxD,CAAC,CAAC;IACFlF,MAAM,CAACsE,EAAE,CAAC,SAAS,EAAE,CAAC;MAAEa,MAAM;MAAEC;IAAY,CAAC,KAAK;MAChDlD,cAAc,CAAC,UAAU,CAAC;MAC1Bc,kBAAkB,CAAC,IAAI,CAAC;MACxBF,aAAa,CAAC;QAAEuC,MAAM,EAAEF,MAAM,KAAKpE,aAAa,GAAG,KAAK,GAAG;MAAO,CAAC,CAAC;MACpE,IAAIqE,WAAW,EAAE;QACf5C,iBAAiB,CAAC4C,WAAW,CAACrE,aAAa,CAAC,IAAI,CAAC,CAAC;QAClD2B,mBAAmB,CAAC0C,WAAW,CAACjC,cAAc,CAAC,IAAI,CAAC,CAAC;MACvD;IACF,CAAC,CAAC;IACFnD,MAAM,CAACsE,EAAE,CAAC,MAAM,EAAEhB,eAAe,CAAC;IAClCtD,MAAM,CAACsE,EAAE,CAAC,cAAc,EAAE,MAAMgB,SAAS,CAAC,CAAC,CAAC;IAC5CC,gBAAgB,CAAC,CAAC;IAClB,OAAO,MAAM;MACXvF,MAAM,CAACwF,UAAU,CAAC,CAAC;MACnBxF,MAAM,CAACyF,kBAAkB,CAAC,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,CAAC1E,aAAa,EAAEgB,YAAY,EAAEoB,cAAc,CAAC,CAAC;;EAEjD;EACA5D,SAAS,CAAC,MAAM;IACd,IAAI0C,WAAW,KAAK,OAAO,IAAIU,SAAS,GAAG,CAAC,EAAE;MAC5C,MAAM+C,CAAC,GAAGC,UAAU,CAAC,MAAM/C,YAAY,CAAEgD,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;MAC5D,OAAO,MAAMC,YAAY,CAACH,CAAC,CAAC;IAC9B,CAAC,MAAM,IAAIzD,WAAW,KAAK,OAAO,IAAIU,SAAS,KAAK,CAAC,EAAE;MAAA,IAAAmD,iBAAA;MACrD5D,cAAc,CAAC,QAAQ,CAAC;MACxBc,kBAAkB,CAAC,KAAK,CAAC;MACzB,CAAA8C,iBAAA,GAAArC,QAAQ,CAACsC,OAAO,cAAAD,iBAAA,uBAAhBA,iBAAA,CAAkBE,KAAK,CAAC,CAAC;IAC3B;EACF,CAAC,EAAE,CAACrD,SAAS,EAAEV,WAAW,CAAC,CAAC;;EAE5B;EACA,MAAM8C,cAAc,GAAIN,EAAE,IACxBhF,SAAS,CACPwG,KAAK,CAACC,IAAI,CAACzB,EAAE,CAAC,CAAC0B,MAAM,CAAC,CAACC,CAAC,EAAER,CAAC,KAAKQ,CAAC,GAAGR,CAAC,CAACS,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG5G,SAAS,CAAC6G,MAAM,CAC3E;EAEH,MAAMf,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMgB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAG9C,GAAG,SAAS,CAAC;MACxC5B,cAAc,CAAC,MAAMyE,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,MAAM,CAAC;EACX,CAAC;EAED,MAAMnB,SAAS,GAAGA,CAAA,KAAM;IACtBtD,eAAe,CAAC,IAAI,CAAC;IACrBE,cAAc,CAAC,SAAS,CAAC;IACzBE,WAAW,CAAC,EAAE,CAAC;IACfE,aAAa,CAAC,EAAE,CAAC;IACjBE,iBAAiB,CAAC,CAAC,CAAC;IACpBE,mBAAmB,CAAC,CAAC,CAAC;IACtBE,YAAY,CAAC,CAAC,CAAC;IACfE,aAAa,CAAC,IAAI,CAAC;IACnBE,kBAAkB,CAAC,KAAK,CAAC;IACzBI,iBAAiB,CAAC,IAAI,CAAC;IACvBe,WAAW,CAAC,CAAC,CAAC;IACdJ,eAAe,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;IAC3BsB,gBAAgB,CAAC,CAAC;EACpB,CAAC;;EAED;EACA,eAAemB,WAAWA,CAAA,EAAG;IAC3B,IAAI,CAAC5F,SAAS,EAAE,OAAO6F,KAAK,CAAC,gBAAgB,CAAC;IAC9C,IAAI;MACF,MAAMlF,QAAQ,GAAGmF,IAAI,CAACC,KAAK,CAAClF,KAAK,GAAG9B,gBAAgB,CAAC;MACrD,MAAMiH,KAAK,GAAGF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;MAC7C,MAAM;QAAEC,MAAM;QAAEC,SAAS;QAAEC;MAAU,CAAC,GACpC,MAAM/G,6BAA6B,CAACsB,QAAQ,EAAEZ,SAAS,EAAEiG,KAAK,CAAC;;MAEjE;MACA,MAAMK,EAAE,GAAG,IAAIpH,WAAW,CAAC,CAAC,CAACqH,GAAG,CAACJ,MAAM,EAAEC,SAAS,CAAC;MACnDrG,MAAM,CAACyG,eAAe,CAACF,EAAE,EAAExG,UAAU,CAAC,CAACe,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;;MAEtD;MACA,MAAM+C,EAAE,GAAGyC,SAAS,CAAClG,QAAQ,CAAC,CAAC;MAC/B,MAAMwF,KAAK,CAAC,GAAG9C,GAAG,SAAS,EAAE;QAC3B4D,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBjD,EAAE;UACFG,MAAM,EAAE+C,MAAM,CAAChG,KAAK,CAAC;UACrBkD,OAAO,EAAE9D,aAAa;UACtB6G,UAAU,EAAE,CAAC;UACbC,KAAK,EAAEpD,EAAE;UACTqC;QACF,CAAC;MACH,CAAC,CAAC;MACF9E,eAAe,CAAC;QAAEyC,EAAE;QAAEG,MAAM,EAAE+C,MAAM,CAAChG,KAAK,CAAC;QAAEkD,OAAO,EAAE9D,aAAa;QAAE+F;MAAM,CAAC,CAAC;MAC7E9G,MAAM,CAAC8H,IAAI,CAAC,WAAW,EAAErD,EAAE,CAAC;MAC5BvC,cAAc,CAAC,SAAS,CAAC;IAC3B,CAAC,CAAC,OAAO6F,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,CAAC,CAAC;MACxCpB,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF;;EAEA;EACA,eAAeuB,WAAWA,CAAC3D,CAAC,EAAE;IAC5B,IAAI,CAACzD,SAAS,EAAE,OAAO6F,KAAK,CAAC,gBAAgB,CAAC;IAC9CzD,cAAc,CAAC,IAAI,CAAC;IACpB,IAAI;MACF,MAAMiF,EAAE,GAAG,MAAM/H,sBAAsB,CAAC,IAAIN,SAAS,CAACyE,CAAC,CAACE,EAAE,CAAC,CAAC;MAC5D,MAAM0C,EAAE,GAAG,IAAIpH,WAAW,CAAC,CAAC,CAACqH,GAAG,CAACe,EAAE,CAAC;MACpCvH,MAAM,CAACyG,eAAe,CAACF,EAAE,EAAExG,UAAU,CAAC,CAACe,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;;MAEtD;MACAM,eAAe,CAACuC,CAAC,CAAC;MAClBrC,cAAc,CAAC,QAAQ,CAAC;MACxBE,WAAW,CAAC2C,cAAc,CAACR,CAAC,CAACE,EAAE,CAAC,CAAC;MACjCnC,aAAa,CAAC,EAAE,CAAC;MACjBE,iBAAiB,CAAC,CAAC,CAAC;MACpBE,mBAAmB,CAAC,CAAC,CAAC;MACtBM,kBAAkB,CAAC,KAAK,CAAC;MAEzB,MAAMwD,KAAK,CAAC,GAAG9C,GAAG,WAAWa,CAAC,CAACE,EAAE,SAAS,EAAE;QAC1C6C,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE5C,QAAQ,EAAE/D,aAAa;UAAE8G,KAAK,EAAEtD,CAAC,CAACE;QAAG,CAAC;MAC/D,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOsD,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,CAAC,CAAC;MAClCpB,KAAK,CAAC,eAAe,CAAC;IACxB,CAAC,SAAS;MACRzD,cAAc,CAAC,KAAK,CAAC;IACvB;EACF;;EAEA;EACA,eAAekF,WAAWA,CAAC7D,CAAC,EAAE;IAC5B,IAAI;MACF,MAAM2C,SAAS,GAAG,IAAIpH,SAAS,CAACyE,CAAC,CAACE,EAAE,CAAC;MACrC,MAAM0D,EAAE,GAAG9H,cAAc,CACvB6G,SAAS,EACTrG,SAAS,EACT,IAAIf,SAAS,CAACyE,CAAC,CAACO,QAAQ,IAAIP,CAAC,CAACM,OAAO,CACvC,CAAC;MACD,MAAMsC,EAAE,GAAG,IAAIpH,WAAW,CAAC,CAAC,CAACqH,GAAG,CAACe,EAAE,CAAC;MACpCvH,MAAM,CAACyG,eAAe,CAACF,EAAE,EAAExG,UAAU,CAAC,CAACe,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;MACtD,MAAM8E,KAAK,CAAC,GAAG9C,GAAG,WAAWa,CAAC,CAACE,EAAE,SAAS,EAAE;QAAE6C,MAAM,EAAE;MAAO,CAAC,CAAC;MAC/DhC,SAAS,CAAC,CAAC;IACb,CAAC,CAAC,OAAOyC,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,CAAC,CAAC;MAClCpB,KAAK,CAAC,eAAe,CAAC;IACxB;EACF;;EAEA;EACA,SAAS0B,WAAWA,CAACN,CAAC,EAAE;IACtB,IAAIhF,eAAe,EAAE;IACrB,IAAIgF,CAAC,CAACO,IAAI,KAAK,OAAO,EAAE;MACtBP,CAAC,CAACQ,cAAc,CAAC,CAAC;MAClB;IACF;IACA,MAAMtE,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;IACtB,MAAMuE,GAAG,GAAGT,CAAC,CAACU,MAAM,CAACC,KAAK;IAC1B,MAAMC,IAAI,GAAG/B,IAAI,CAACgC,GAAG,CAAC,CAAC,EAAEJ,GAAG,CAAClC,MAAM,GAAGnE,QAAQ,CAACmE,MAAM,CAAC;IACtD,MAAMuC,KAAK,GAAGF,IAAI,GAAGzE,QAAQ;IAC7B,MAAM4E,EAAE,GAAG,CAAC7E,GAAG,GAAGH,YAAY,IAAI,IAAI;IACtC,MAAMiF,KAAK,GAAGF,KAAK,GAAG1G,QAAQ,CAACmE,MAAM;IACrC,MAAM0C,GAAG,GAAGF,EAAE,GAAG,CAAC,GAAGC,KAAK,GAAGD,EAAE,GAAG,CAAC;IACnC,IAAIE,GAAG,GAAG5E,OAAO,EAAE;IACnBD,WAAW,CAACwE,IAAI,CAAC;IACjB5E,eAAe,CAACE,GAAG,CAAC;IACpB3B,aAAa,CAACkG,GAAG,CAAC;IAClBhG,iBAAiB,CAACmG,IAAI,CAAC;IACvB3I,MAAM,CAAC8H,IAAI,CAAC,UAAU,EAAE;MACtBmB,OAAO,EAAElH,YAAY,CAAC0C,EAAE;MACxB7D,MAAM,EAAEG,aAAa;MACrBmE,QAAQ,EAAEyD;IACZ,CAAC,CAAC;IACF,IAAIH,GAAG,KAAKrG,QAAQ,EAAE;MACpBqE,KAAK,CAAC,GAAG9C,GAAG,WAAW3B,YAAY,CAAC0C,EAAE,WAAW,EAAE;QACjD6C,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEvC,MAAM,EAAEpE;QAAc,CAAC;MAChD,CAAC,CAAC;MACFmB,cAAc,CAAC,UAAU,CAAC;MAC1Bc,kBAAkB,CAAC,IAAI,CAAC;MACxBF,aAAa,CAAC;QAAEuC,MAAM,EAAE;MAAM,CAAC,CAAC;IAClC;EACF;;EAEA;EACA,oBACE7E,OAAA;IAAK0I,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB3I,OAAA;MAAA2I,QAAA,gBACE3I,OAAA;QAAA2I,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClBzI,SAAS,gBACRN,OAAA;QAAK0I,SAAS,EAAC,aAAa;QAAAC,QAAA,GACzBpI,aAAa,CAACyI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,UAAG,EAACnI,aAAa,CAACoI,OAAO,CAAC,CAAC,CAAC,EAAC,OAC1D;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAEN/I,OAAA,CAACZ,iBAAiB;QAAAwJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACrB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,EACR,CAACzI,SAAS,iBAAIN,OAAA;MAAA2I,QAAA,EAAG;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAExDzI,SAAS,IAAI,CAACiB,YAAY,iBACzBvB,OAAA;MAAS0I,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC9B3I,OAAA;QAAA2I,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB/I,OAAA;QAAA2I,QAAA,GAAO,cAEL,eAAA3I,OAAA;UACE8H,IAAI,EAAC,QAAQ;UACbM,GAAG,EAAC,MAAM;UACVc,IAAI,EAAC,MAAM;UACXhB,KAAK,EAAE/G,KAAM;UACbgI,QAAQ,EAAG5B,CAAC,IAAKnG,QAAQ,CAAC+F,MAAM,CAACI,CAAC,CAACU,MAAM,CAACC,KAAK,CAAC;QAAE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR/I,OAAA;QAAQoJ,OAAO,EAAElD,WAAY;QAACmD,QAAQ,EAAE,CAAClI,KAAK,IAAIA,KAAK,IAAI,CAAE;QAAAwH,QAAA,EAAC;MAE9D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT/I,OAAA;QAAA2I,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB/I,OAAA;QAAA2I,QAAA,EACGtH,WAAW,CAACiI,GAAG,CAAEvF,CAAC,iBACjB/D,OAAA;UAAA2I,QAAA,GACG5E,CAAC,CAACE,EAAE,CAAC+E,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,WAAI,EAACjF,CAAC,CAACK,MAAM,EAAC,MAAI,EAAC,GAAG,EACvCL,CAAC,CAACM,OAAO,KAAK9D,aAAa,gBAC1BP,OAAA;YAAQoJ,OAAO,EAAEA,CAAA,KAAMxB,WAAW,CAAC7D,CAAC,CAAE;YAAA4E,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,gBAEtD/I,OAAA;YACEoJ,OAAO,EAAEA,CAAA,KAAM1B,WAAW,CAAC3D,CAAC,CAAE;YAC9BsF,QAAQ,EAAE,CAAC,CAAC9H,YAAY,IAAIkB,WAAY;YAAAkG,QAAA,EAEvClG,WAAW,GAAG,YAAY,GAAG;UAAQ;YAAAmG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CACT;QAAA,GAXMhF,CAAC,CAACE,EAAE;UAAA2E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYT,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACV,EAEAzI,SAAS,IAAIiB,YAAY,IAAIE,WAAW,KAAK,QAAQ,iBACpDzB,OAAA;MAAS0I,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC/B3I,OAAA;QAAK0I,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAEhH;MAAQ;QAAAiH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClD/I,OAAA;QACEuJ,GAAG,EAAEtG,QAAS;QACd6E,IAAI,EAAC,MAAM;QACXI,KAAK,EAAErG,UAAW;QAClBsH,QAAQ,EAAEtB,WAAY;QACtB2B,OAAO,EAAE3B,WAAY;QACrB4B,WAAW,EAAC,oBAAe;QAC3BJ,QAAQ,EAAE9G,eAAgB;QAC1BmH,SAAS;MAAA;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACF/I,OAAA;QAAK0I,SAAS,EAAC,OAAO;QAAAC,QAAA,gBACpB3I,OAAA;UAAK0I,SAAS,EAAC,MAAM;UAAAC,QAAA,eACnB3I,OAAA;YACE0I,SAAS,EAAC,gBAAgB;YAC1BiB,KAAK,EAAE;cAAEC,IAAI,EAAE,GAAG7H,cAAc,GAAG,GAAG;YAAI,CAAE;YAAA4G,QAAA,EAC7C;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACN/I,OAAA;UAAK0I,SAAS,EAAC,MAAM;UAAAC,QAAA,eACnB3I,OAAA;YACE0I,SAAS,EAAC,kBAAkB;YAC5BiB,KAAK,EAAE;cAAEC,IAAI,EAAE,GAAG3H,gBAAgB,GAAG,GAAG;YAAI,CAAE;YAAA0G,QAAA,EAC/C;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACV,EAEAzI,SAAS,IAAIiB,YAAY,IAAIE,WAAW,KAAK,UAAU,iBACtDzB,OAAA;MAAS0I,SAAS,EAAC,cAAc;MAAAC,QAAA,GAC9B,CAAAtG,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEwC,MAAM,MAAK,KAAK,gBAC3B7E,OAAA;QAAK0I,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClC3I,OAAA;UAAA2I,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpB/I,OAAA;UACEoJ,OAAO,EAAE,MAAAA,CAAA,KAAY;YACnB,MAAMzB,EAAE,GAAG,MAAM7H,eAAe,CAC9B,IAAIR,SAAS,CAACiC,YAAY,CAAC0C,EAAE,CAAC,EAC9B5D,SACF,CAAC;YACD,MAAMsG,EAAE,GAAG,IAAIpH,WAAW,CAAC,CAAC,CAACqH,GAAG,CAACe,EAAE,CAAC;YACpCvH,MAAM,CAACyG,eAAe,CAACF,EAAE,EAAExG,UAAU,CAAC,CAACe,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YACtD4D,SAAS,CAAC,CAAC;UACb,CAAE;UAAA6D,QAAA,EACH;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,gBAEN/I,OAAA;QAAK0I,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnC3I,OAAA;UAAA2I,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrB/I,OAAA;UAAQoJ,OAAO,EAAEtE,SAAU;UAAA6D,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CACN,eACD/I,OAAA;QAAK0I,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B3I,OAAA;UAAA2I,QAAA,EAAI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACb/I,OAAA;UAAK0I,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC3B9F,YAAY,CAACyG,GAAG,CAAC,CAACO,GAAG,EAAEC,CAAC,kBACvB9J,OAAA;YAAA2I,QAAA,gBACE3I,OAAA;cAAA2I,QAAA,GAASkB,GAAG,CAACE,MAAM,CAACf,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,SAAE;YAAA;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACc,GAAG,CAACG,OAAO;UAAA,GADlDF,CAAC;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEN,CACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN/I,OAAA;UACEkI,KAAK,EAAEnF,SAAU;UACjBoG,QAAQ,EAAG5B,CAAC,IAAKvE,YAAY,CAACuE,CAAC,CAACU,MAAM,CAACC,KAAK,CAAE;UAC9C+B,SAAS,EAAG1C,CAAC,IACXA,CAAC,CAAC2C,GAAG,KAAK,OAAO,IACjB1K,MAAM,CAAC8H,IAAI,CAAC,SAAS,EAAE;YACrBmB,OAAO,EAAElH,YAAY,CAAC0C,EAAE;YACxB8F,MAAM,EAAExJ,aAAa;YACrByJ,OAAO,EAAEjH;UACX,CAAC,CAAC,IACFC,YAAY,CAAC,EAAE;QAChB;UAAA4F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACF/I,OAAA;UACEoJ,OAAO,EAAEA,CAAA,KAAM;YACb5J,MAAM,CAAC8H,IAAI,CAAC,SAAS,EAAE;cACrBmB,OAAO,EAAElH,YAAY,CAAC0C,EAAE;cACxB8F,MAAM,EAAExJ,aAAa;cACrByJ,OAAO,EAAEjH;YACX,CAAC,CAAC;YACFC,YAAY,CAAC,EAAE,CAAC;UAClB,CAAE;UAAA2F,QAAA,EACH;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACV;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC7I,EAAA,CAxZuBD,GAAG;EAAA,QACFf,aAAa,EACrBC,SAAS;AAAA;AAAAgL,EAAA,GAFFlK,GAAG;AAAA,IAAAkK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}