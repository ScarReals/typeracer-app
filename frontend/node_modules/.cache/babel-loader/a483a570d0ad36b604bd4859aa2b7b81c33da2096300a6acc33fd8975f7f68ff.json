{"ast":null,"code":"var _jsxFileName = \"/home/kokoi/sol-wager-app/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport idl from \"./idl/typeracer_escrow.json\";\nimport { setProvider } from \"./solana\";\nimport { buildInitializeAndDepositIxns, buildJoinAndDepositIxn, buildCancelIxn, buildResolveIxn } from \"./escrow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // ────────────────────────────────────────────────────────\n  // Hook up wallet + anchor provider\n  const {\n    connection\n  } = useConnection();\n  const wallet = useWallet();\n  const {\n    publicKey,\n    connected\n  } = wallet;\n  const walletAddress = (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) || \"\";\n  const walletAddressRef = useRef(walletAddress);\n  useEffect(() => {\n    walletAddressRef.current = walletAddress;\n  }, [walletAddress]);\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\"\n      });\n      anchor.setProvider(prov);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n  // ────────────────────────────────────────────────────────\n\n  // ────────────────────────────────────────────────────────\n  // Sound & Mute state\n  const [muted, setMuted] = useState(false);\n  const engineAudio = useRef(new Audio(\"/engine.mp3\"));\n  const countdownAudio = useRef(new Audio(\"/countdown.mp3\"));\n  const errorAudio = useRef(new Audio(\"/error.mp3\"));\n  useEffect(() => {\n    engineAudio.current.loop = true;\n  }, []);\n  function playEngine() {\n    if (!muted) engineAudio.current.play().catch(() => {});\n  }\n  function stopEngine() {\n    engineAudio.current.pause();\n    engineAudio.current.currentTime = 0;\n  }\n  function playCountdown() {\n    if (!muted) countdownAudio.current.play().catch(() => {});\n  }\n  function playError() {\n    if (!muted) errorAudio.current.play().catch(() => {});\n  }\n  // ────────────────────────────────────────────────────────\n\n  // ────────────────────────────────────────────────────────\n  // Wallet balance\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then(lamports => {\n        setWalletBalance(lamports / LAMPORTS_PER_SOL);\n      });\n    }\n  }, [connection, publicKey]);\n  // ────────────────────────────────────────────────────────\n\n  // ────────────────────────────────────────────────────────\n  // Game & matchmaking state\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n  // ────────────────────────────────────────────────────────\n\n  // ────────────────────────────────────────────────────────\n  // Race / typing state\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // error‐highlight if mistyped\n  const [hasError, setHasError] = useState(false);\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // anti‑cheat\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n  // ────────────────────────────────────────────────────────\n\n  // ────────────────────────────────────────────────────────\n  // Helpers\n  const chooseSentence = id => sentences[Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length];\n  async function fetchOpenMatches() {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  }\n  function resetGame() {\n    stopEngine();\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    setHasError(false);\n    fetchOpenMatches();\n  }\n\n  // ─ Socket.io setup ───────────────────────────────────────\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", m => setOpenMatches(os => [...os, m]));\n    socket.on(\"removeMatch\", id => setOpenMatches(os => os.filter(m => m.id !== id)));\n    socket.on(\"startMatch\", ({\n      id,\n      players\n    }) => {\n      // begin countdown\n      if (!currentMatch || currentMatch.id !== id) {\n        setCurrentMatch({\n          id,\n          amount: (currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.amount) || 0,\n          creator: players[0],\n          accepter: players[1],\n          nonce: currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.nonce\n        });\n      }\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(id));\n      setCountdown(3);\n      setOpponentWallet(players.find(w => w !== walletAddressRef.current));\n      playCountdown();\n    });\n    socket.on(\"opponentProgress\", ({\n      wallet: w,\n      progress\n    }) => {\n      if (w !== walletAddressRef.current) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({\n      winner,\n      progressMap\n    }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: winner === walletAddressRef.current ? \"win\" : \"lose\"\n      });\n      if (progressMap) {\n        var _progressMap$walletAd, _progressMap$opponent;\n        setPlayerProgress((_progressMap$walletAd = progressMap[walletAddressRef.current]) !== null && _progressMap$walletAd !== void 0 ? _progressMap$walletAd : 0);\n        setOpponentProgress((_progressMap$opponent = progressMap[opponentWallet]) !== null && _progressMap$opponent !== void 0 ? _progressMap$opponent : 0);\n      }\n      stopEngine();\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", () => resetGame());\n    fetchOpenMatches();\n    return () => {\n      socket.removeAllListeners();\n      socket.disconnect();\n    };\n  }, []); // once\n\n  // Countdown → “racing”\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown(c => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      var _inputRef$current;\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n      playEngine();\n    }\n  }, [countdown, matchStatus]);\n  // ────────────────────────────────────────────────────────\n\n  // ────────────────────────────────────────────────────────\n  // Typing input handler\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    // error if not prefix\n    if (!sentence.startsWith(val)) {\n      setHasError(true);\n      playError();\n      return;\n    }\n    setHasError(false);\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddressRef.current,\n      progress: rawProg\n    });\n\n    // on fully typed\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          winner: walletAddressRef.current\n        })\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: \"win\"\n      });\n      stopEngine();\n    }\n  }\n  // ────────────────────────────────────────────────────────\n\n  // ────────────────────────────────────────────────────────\n  // Matchmaking buttons\n  async function createMatch() {\n    if (!connected) return wallet.connect(); // auto‐open wallet\n    try {\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const nonce = Math.floor(Math.random() * 1000000);\n      const {\n        ixInit,\n        ixDeposit,\n        escrowPda\n      } = await buildInitializeAndDepositIxns(lamports, publicKey, nonce);\n\n      // send on‐chain\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      const sig = await wallet.sendTransaction(tx, connection);\n      // no await confirm: assume success\n      setCurrentMatch({\n        id: escrowPda.toBase58(),\n        amount: wager,\n        creator: walletAddressRef.current,\n        nonce\n      });\n      socket.emit(\"joinMatch\", escrowPda.toBase58());\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"Create error:\", e);\n      alert(\"Create match failed:\\n\" + e.message);\n    }\n  }\n  async function acceptMatch(m) {\n    if (!connected) return wallet.connect();\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(new PublicKey(m.id), m.amount);\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(m.id));\n      setCountdown(3);\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          accepter: walletAddressRef.current\n        })\n      });\n      setCurrentMatch({\n        ...m,\n        accepter: walletAddressRef.current\n      });\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"Accept error:\", e);\n      alert(\"Accept error:\\n\" + e.message);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n  async function cancelMatch(m) {\n    try {\n      const ix = await buildCancelIxn(new PublicKey(m.id), new PublicKey(m.creator), new PublicKey(m.accepter || m.creator));\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      await fetch(`${API}/wagers/${m.id}/cancel`, {\n        method: \"POST\"\n      });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel error:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n  // ────────────────────────────────────────────────────────\n\n  // ────────────────────────────────────────────────────────\n  // UI renderers\n  const renderMatchmaking = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"matches\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match-create\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Wager:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0.01\",\n        step: \"0.01\",\n        value: wager,\n        onChange: e => setWager(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createMatch,\n        children: \"Play!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Open Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), openMatches.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No open matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }, this) : openMatches.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [m.id.slice(0, 6), \"\\u2026 \\u2014 \", m.amount, \" SOL\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 17\n        }, this), m.creator === walletAddressRef.current ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cancelMatch(m),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !!currentMatch || isAccepting,\n          onClick: () => acceptMatch(m),\n          children: isAccepting ? \"…\" : \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this)]\n      }, m.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 5\n  }, this);\n  const renderWaiting = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"waiting\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for opponent\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => cancelMatch(currentMatch),\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 362,\n    columnNumber: 5\n  }, this);\n  const renderRace = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"race-container\",\n    children: [matchStatus === \"ready\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdown\",\n      children: countdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }, this), (matchStatus === \"racing\" || matchStatus === \"finished\") && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/car-player.png\",\n        className: \"car player\",\n        style: {\n          left: `${playerProgress * 100}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/car-opponent.png\",\n        className: \"car opponent\",\n        style: {\n          left: `${opponentProgress * 100}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"type-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        value: inputValue,\n        onChange: handleInput,\n        onPaste: handleInput,\n        disabled: isInputDisabled,\n        style: {\n          backgroundColor: hasError ? \"rgba(255,0,0,0.2)\" : undefined\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result result-win\",\n      children: [\"\\uD83C\\uDFC6 You won!\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          try {\n            await fetch(`${API}/wagers/${currentMatch.id}/resolve`, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                winner: walletAddressRef.current\n              })\n            });\n            resetGame();\n          } catch (e) {\n            console.error(e);\n            alert(e.message);\n          }\n        },\n        children: \"Claim\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 9\n    }, this), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"lose\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result result-lose\",\n      children: [\"\\uD83D\\uDE14 You lost.\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Back to Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 5\n  }, this);\n  // ────────────────────────────────────────────────────────\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Type Racer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: connected ? `${walletAddressRef.current.slice(0, 6)}… (${walletBalance.toFixed(2)} SOL)` : /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mute-btn\",\n        onClick: () => setMuted(m => !m),\n        children: muted ? \"🔇\" : \"🔊\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this), !connected && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"prompt\",\n      children: \"Please connect to play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 22\n    }, this), connected && !currentMatch && renderMatchmaking(), connected && currentMatch && matchStatus === \"waiting\" && renderWaiting(), connected && currentMatch && (matchStatus === \"ready\" || matchStatus === \"racing\" || matchStatus === \"finished\") && renderRace()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 414,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zpaDlnW/bfWHQxPFUUSAvzKQTUk=\", false, function () {\n  return [useConnection, useWallet];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","sentences","useConnection","useWallet","WalletMultiButton","LAMPORTS_PER_SOL","PublicKey","Transaction","socket","anchor","idl","setProvider","buildInitializeAndDepositIxns","buildJoinAndDepositIxn","buildCancelIxn","buildResolveIxn","jsxDEV","_jsxDEV","App","_s","connection","wallet","publicKey","connected","walletAddress","toBase58","walletAddressRef","current","prov","AnchorProvider","preflightCommitment","commitment","muted","setMuted","engineAudio","Audio","countdownAudio","errorAudio","loop","playEngine","play","catch","stopEngine","pause","currentTime","playCountdown","playError","walletBalance","setWalletBalance","getBalance","then","lamports","wager","setWager","openMatches","setOpenMatches","currentMatch","setCurrentMatch","matchStatus","setMatchStatus","sentence","setSentence","inputValue","setInputValue","playerProgress","setPlayerProgress","opponentProgress","setOpponentProgress","countdown","setCountdown","raceResult","setRaceResult","isInputDisabled","setIsInputDisabled","isAccepting","setIsAccepting","opponentWallet","setOpponentWallet","hasError","setHasError","inputRef","API","process","env","REACT_APP_API_URL","lastProgTime","setLastProgTime","Date","now","lastProg","setLastProg","MAX_CPS","chooseSentence","id","Array","from","reduce","a","c","charCodeAt","length","fetchOpenMatches","res","fetch","json","resetGame","connect","on","m","os","filter","players","amount","creator","accepter","nonce","find","w","progress","winner","progressMap","result","_progressMap$walletAd","_progressMap$opponent","setChatMessages","removeAllListeners","disconnect","t","setTimeout","clearTimeout","_inputRef$current","focus","handleInput","e","type","preventDefault","val","target","value","startsWith","rawProg","Math","min","deltaProg","deltaTime","chars","cps","emit","matchId","method","headers","body","JSON","stringify","createMatch","floor","random","ixInit","ixDeposit","escrowPda","tx","add","sig","sendTransaction","console","error","alert","message","acceptMatch","ix","cancelMatch","renderMatchmaking","className","children","fileName","_jsxFileName","lineNumber","columnNumber","step","onChange","Number","onClick","map","slice","disabled","renderWaiting","renderRace","src","style","left","ref","onPaste","backgroundColor","undefined","toFixed","_c","$RefreshReg$"],"sources":["/home/kokoi/sol-wager-app/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport {\n  LAMPORTS_PER_SOL,\n  PublicKey,\n  Transaction,\n} from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport idl from \"./idl/typeracer_escrow.json\";\nimport { setProvider } from \"./solana\";\nimport {\n  buildInitializeAndDepositIxns,\n  buildJoinAndDepositIxn,\n  buildCancelIxn,\n  buildResolveIxn,\n} from \"./escrow\";\n\nexport default function App() {\n  // ────────────────────────────────────────────────────────\n  // Hook up wallet + anchor provider\n  const { connection } = useConnection();\n  const wallet = useWallet();\n  const { publicKey, connected } = wallet;\n  const walletAddress = publicKey?.toBase58() || \"\";\n  const walletAddressRef = useRef(walletAddress);\n  useEffect(() => { walletAddressRef.current = walletAddress; }, [walletAddress]);\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\",\n      });\n      anchor.setProvider(prov);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n  // ────────────────────────────────────────────────────────\n\n  // ────────────────────────────────────────────────────────\n  // Sound & Mute state\n  const [muted, setMuted] = useState(false);\n  const engineAudio   = useRef(new Audio(\"/engine.mp3\"));\n  const countdownAudio= useRef(new Audio(\"/countdown.mp3\"));\n  const errorAudio    = useRef(new Audio(\"/error.mp3\"));\n  useEffect(() => {\n    engineAudio.current.loop = true;\n  }, []);\n  function playEngine() {\n    if (!muted) engineAudio.current.play().catch(() => {});\n  }\n  function stopEngine() {\n    engineAudio.current.pause();\n    engineAudio.current.currentTime = 0;\n  }\n  function playCountdown() {\n    if (!muted) countdownAudio.current.play().catch(() => {});\n  }\n  function playError() {\n    if (!muted) errorAudio.current.play().catch(() => {});\n  }\n  // ────────────────────────────────────────────────────────\n\n  // ────────────────────────────────────────────────────────\n  // Wallet balance\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then((lamports) => {\n        setWalletBalance(lamports / LAMPORTS_PER_SOL);\n      });\n    }\n  }, [connection, publicKey]);\n  // ────────────────────────────────────────────────────────\n\n  // ────────────────────────────────────────────────────────\n  // Game & matchmaking state\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n  // ────────────────────────────────────────────────────────\n\n  // ────────────────────────────────────────────────────────\n  // Race / typing state\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // error‐highlight if mistyped\n  const [hasError, setHasError] = useState(false);\n\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // anti‑cheat\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n  // ────────────────────────────────────────────────────────\n\n  // ────────────────────────────────────────────────────────\n  // Helpers\n  const chooseSentence = (id) =>\n    sentences[\n      Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) %\n        sentences.length\n    ];\n\n  async function fetchOpenMatches() {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  }\n\n  function resetGame() {\n    stopEngine();\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    setHasError(false);\n    fetchOpenMatches();\n  }\n\n  // ─ Socket.io setup ───────────────────────────────────────\n  useEffect(() => {\n    socket.connect();\n\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", (m) => setOpenMatches((os) => [...os, m]));\n    socket.on(\"removeMatch\", (id) =>\n      setOpenMatches((os) => os.filter((m) => m.id !== id))\n    );\n    socket.on(\"startMatch\", ({ id, players }) => {\n      // begin countdown\n      if (!currentMatch || currentMatch.id !== id) {\n        setCurrentMatch({\n          id,\n          amount: currentMatch?.amount || 0,\n          creator: players[0],\n          accepter: players[1],\n          nonce: currentMatch?.nonce,\n        });\n      }\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(id));\n      setCountdown(3);\n      setOpponentWallet(players.find((w) => w !== walletAddressRef.current));\n      playCountdown();\n    });\n    socket.on(\"opponentProgress\", ({ wallet: w, progress }) => {\n      if (w !== walletAddressRef.current) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({ winner, progressMap }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: winner === walletAddressRef.current ? \"win\" : \"lose\" });\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddressRef.current] ?? 0);\n        setOpponentProgress(progressMap[opponentWallet] ?? 0);\n      }\n      stopEngine();\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", () => resetGame());\n\n    fetchOpenMatches();\n\n    return () => {\n      socket.removeAllListeners();\n      socket.disconnect();\n    };\n  }, []); // once\n\n  // Countdown → “racing”\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown((c) => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      inputRef.current?.focus();\n      playEngine();\n    }\n  }, [countdown, matchStatus]);\n  // ────────────────────────────────────────────────────────\n\n  // ────────────────────────────────────────────────────────\n  // Typing input handler\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    // error if not prefix\n    if (!sentence.startsWith(val)) {\n      setHasError(true);\n      playError();\n      return;\n    }\n    setHasError(false);\n\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddressRef.current,\n      progress: rawProg,\n    });\n\n    // on fully typed\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ winner: walletAddressRef.current }),\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: \"win\" });\n      stopEngine();\n    }\n  }\n  // ────────────────────────────────────────────────────────\n\n  // ────────────────────────────────────────────────────────\n  // Matchmaking buttons\n  async function createMatch() {\n    if (!connected) return wallet.connect();      // auto‐open wallet\n    try {\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const nonce    = Math.floor(Math.random() * 1_000_000);\n      const { ixInit, ixDeposit, escrowPda } =\n        await buildInitializeAndDepositIxns(lamports, publicKey, nonce);\n\n      // send on‐chain\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      const sig = await wallet.sendTransaction(tx, connection);\n      // no await confirm: assume success\n      setCurrentMatch({ id: escrowPda.toBase58(), amount: wager, creator: walletAddressRef.current, nonce });\n      socket.emit(\"joinMatch\", escrowPda.toBase58());\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"Create error:\", e);\n      alert(\"Create match failed:\\n\" + e.message);\n    }\n  }\n\n  async function acceptMatch(m) {\n    if (!connected) return wallet.connect();\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(new PublicKey(m.id), m.amount);\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(m.id));\n      setCountdown(3);\n\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ accepter: walletAddressRef.current }),\n      });\n      setCurrentMatch({ ...m, accepter: walletAddressRef.current });\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"Accept error:\", e);\n      alert(\"Accept error:\\n\" + e.message);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  async function cancelMatch(m) {\n    try {\n      const ix = await buildCancelIxn(\n        new PublicKey(m.id),\n        new PublicKey(m.creator),\n        new PublicKey(m.accepter || m.creator)\n      );\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      await fetch(`${API}/wagers/${m.id}/cancel`, { method: \"POST\" });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel error:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n  // ────────────────────────────────────────────────────────\n\n  // ────────────────────────────────────────────────────────\n  // UI renderers\n  const renderMatchmaking = () => (\n    <div className=\"matches\">\n      <div className=\"match-create\">\n        <h2>Create Match</h2>\n        <label>Wager:</label>\n        <input\n          type=\"number\" min=\"0.01\" step=\"0.01\"\n          value={wager}\n          onChange={(e) => setWager(Number(e.target.value))}\n        />\n        <button onClick={createMatch}>Play!</button>\n      </div>\n      <div className=\"match-list\">\n        <h2>Open Matches</h2>\n        {openMatches.length === 0\n          ? <p>No open matches</p>\n          : openMatches.map(m => (\n              <div key={m.id} className=\"match-item\">\n                <span>{m.id.slice(0,6)}… — {m.amount} SOL</span>\n                {m.creator === walletAddressRef.current\n                  ? <button onClick={()=>cancelMatch(m)}>Cancel</button>\n                  : <button disabled={!!currentMatch||isAccepting}\n                      onClick={()=>acceptMatch(m)}>\n                      {isAccepting ? \"…\" : \"Join\"}\n                    </button>\n                }\n              </div>\n            ))\n        }\n      </div>\n    </div>\n  );\n\n  const renderWaiting = () => (\n    <div className=\"waiting\">\n      <h2>Waiting for opponent…</h2>\n      <button onClick={()=>cancelMatch(currentMatch)}>Cancel</button>\n    </div>\n  );\n\n  const renderRace = () => (\n    <div className=\"race-container\">\n      {matchStatus === \"ready\" && (\n        <div className=\"countdown\">{countdown}</div>\n      )}\n      { (matchStatus===\"racing\" || matchStatus===\"finished\") && (\n        <div className=\"track\">\n          <img src=\"/car-player.png\" className=\"car player\" style={{ left:`${playerProgress*100}%` }}/>\n          <img src=\"/car-opponent.png\" className=\"car opponent\" style={{ left:`${opponentProgress*100}%` }}/>\n        </div>\n      )}\n      <div className=\"type-box\">\n        <div className=\"sentence\">{sentence}</div>\n        <input\n          ref={inputRef}\n          value={inputValue}\n          onChange={handleInput}\n          onPaste={handleInput}\n          disabled={isInputDisabled}\n          style={{\n            backgroundColor: hasError ? \"rgba(255,0,0,0.2)\" : undefined\n          }}\n        />\n      </div>\n      {matchStatus===\"finished\" && raceResult?.result===\"win\" && (\n        <div className=\"result result-win\">\n          🏆 You won!{\" \"}\n          <button onClick={async()=>{\n            try {\n              await fetch(`${API}/wagers/${currentMatch.id}/resolve`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({winner:walletAddressRef.current})});\n              resetGame();\n            }catch(e){console.error(e);alert(e.message);}\n          }}>Claim</button>\n        </div>\n      )}\n      {matchStatus===\"finished\" && raceResult?.result===\"lose\" && (\n        <div className=\"result result-lose\">\n          😔 You lost.\n          <button onClick={resetGame}>Back to Matches</button>\n        </div>\n      )}\n    </div>\n  );\n  // ────────────────────────────────────────────────────────\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Type Racer</h1>\n        <div className=\"wallet-info\">\n          {connected\n            ? `${walletAddressRef.current.slice(0,6)}… (${walletBalance.toFixed(2)} SOL)`\n            : <WalletMultiButton />\n          }\n        </div>\n        <button className=\"mute-btn\" onClick={()=>setMuted(m=>!m)}>\n          {muted ? \"🔇\" : \"🔊\"}\n        </button>\n      </header>\n\n      {!connected && <p className=\"prompt\">Please connect to play</p>}\n      {connected && !currentMatch  && renderMatchmaking()}\n      {connected && currentMatch && matchStatus===\"waiting\" && renderWaiting()}\n      {connected && currentMatch && (matchStatus===\"ready\" || matchStatus===\"racing\" || matchStatus===\"finished\") && renderRace()}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}