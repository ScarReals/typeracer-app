{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TrezorConnect = exports.CoreInSuiteDesktop = void 0;\nconst tslib_1 = require(\"tslib\");\nconst events_1 = tslib_1.__importDefault(require(\"events\"));\nconst ERRORS = tslib_1.__importStar(require(\"@trezor/connect/lib/constants/errors\"));\nconst events_2 = require(\"@trezor/connect/lib/events\");\nconst factory_1 = require(\"@trezor/connect/lib/factory\");\nconst websocket_client_1 = require(\"@trezor/websocket-client\");\nconst client_1 = require(\"@trezor/websocket-client/lib/client\");\nconst connectSettings_1 = require(\"../connectSettings\");\nclass CoreInSuiteDesktop {\n  eventEmitter = new events_1.default();\n  _settings;\n  ws;\n  constructor() {\n    this._settings = (0, connectSettings_1.parseConnectSettings)();\n    this.ws = new websocket_client_1.WebsocketClient({\n      url: 'ws://127.0.0.1:21335/connect-ws'\n    });\n  }\n  manifest(data) {\n    this._settings = (0, connectSettings_1.parseConnectSettings)({\n      ...this._settings,\n      manifest: data\n    });\n  }\n  dispose() {\n    this.eventEmitter.removeAllListeners();\n    this._settings = (0, connectSettings_1.parseConnectSettings)();\n    this.ws.dispose();\n    return Promise.resolve(undefined);\n  }\n  cancel(_error) {\n    this.ws.sendMessage({\n      type: events_2.POPUP.CLOSED,\n      payload: {\n        error: _error\n      }\n    });\n  }\n  async handshake() {\n    if (!this.ws) {\n      throw ERRORS.TypedError('Desktop_ConnectionMissing', 'No websocket connection');\n    }\n    try {\n      const response = await this.ws.sendMessage({\n        type: events_2.POPUP.HANDSHAKE,\n        payload: {\n          settings: this._settings\n        }\n      }, {\n        timeout: 3000\n      });\n      if (!response) {\n        throw ERRORS.TypedError('Desktop_ConnectionMissing', 'No response');\n      }\n      return response;\n    } catch (err) {\n      throw ERRORS.TypedError('Desktop_ConnectionMissing', err.message);\n    }\n  }\n  async init(settings) {\n    const newSettings = (0, connectSettings_1.parseConnectSettings)({\n      ...this._settings,\n      ...settings\n    });\n    if (!newSettings.manifest || !newSettings.manifest.appName) {\n      throw ERRORS.TypedError('Init_ManifestMissing', 'Manifest is missing or manifest.appName is not set');\n    }\n    if (!newSettings.transports?.length) {\n      newSettings.transports = ['BridgeTransport', 'WebUsbTransport'];\n    }\n    this._settings = newSettings;\n    return await this.connect();\n  }\n  async connect() {\n    try {\n      await this.ws.connect();\n    } catch (err) {\n      throw err instanceof client_1.WebsocketError ? ERRORS.TypedError('Desktop_ConnectionMissing', err.message) : err;\n    }\n  }\n  setTransports() {\n    throw new Error('Unsupported');\n  }\n  async call(params) {\n    try {\n      if (!this.ws.isConnected()) {\n        await this.connect();\n      }\n      await this.handshake();\n      const response = await this.ws.sendMessage({\n        type: events_2.IFRAME.CALL,\n        payload: params\n      }, {\n        timeout: 0\n      });\n      if (!response) {\n        throw ERRORS.TypedError('Desktop_ConnectionMissing', 'No response');\n      }\n      return response;\n    } catch (err) {\n      return {\n        success: false,\n        payload: ERRORS.serializeError(err instanceof client_1.WebsocketError ? ERRORS.TypedError('Desktop_ConnectionMissing', err.message) : err)\n      };\n    }\n  }\n  uiResponse(_response) {\n    throw ERRORS.TypedError('Method_InvalidPackage');\n  }\n  requestLogin() {\n    throw ERRORS.TypedError('Method_InvalidPackage');\n  }\n  disableWebUSB() {\n    throw ERRORS.TypedError('Method_InvalidPackage');\n  }\n  requestWebUSBDevice() {\n    throw ERRORS.TypedError('Method_InvalidPackage');\n  }\n  renderWebUSBButton() {}\n}\nexports.CoreInSuiteDesktop = CoreInSuiteDesktop;\nconst impl = new CoreInSuiteDesktop();\nexports.TrezorConnect = (0, factory_1.factory)({\n  eventEmitter: impl.eventEmitter,\n  init: impl.init.bind(impl),\n  call: impl.call.bind(impl),\n  setTransports: impl.setTransports.bind(impl),\n  manifest: impl.manifest.bind(impl),\n  requestLogin: impl.requestLogin.bind(impl),\n  uiResponse: impl.uiResponse.bind(impl),\n  cancel: impl.cancel.bind(impl),\n  dispose: impl.dispose.bind(impl)\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","TrezorConnect","CoreInSuiteDesktop","tslib_1","require","events_1","__importDefault","ERRORS","__importStar","events_2","factory_1","websocket_client_1","client_1","connectSettings_1","eventEmitter","default","_settings","ws","constructor","parseConnectSettings","WebsocketClient","url","manifest","data","dispose","removeAllListeners","Promise","resolve","undefined","cancel","_error","sendMessage","type","POPUP","CLOSED","payload","error","handshake","TypedError","response","HANDSHAKE","settings","timeout","err","message","init","newSettings","appName","transports","length","connect","WebsocketError","setTransports","Error","call","params","isConnected","IFRAME","CALL","success","serializeError","uiResponse","_response","requestLogin","disableWebUSB","requestWebUSBDevice","renderWebUSBButton","impl","factory","bind"],"sources":["/home/kokoi/typeracer-app/frontend/node_modules/@trezor/connect-web/lib/impl/core-in-suite-desktop.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrezorConnect = exports.CoreInSuiteDesktop = void 0;\nconst tslib_1 = require(\"tslib\");\nconst events_1 = tslib_1.__importDefault(require(\"events\"));\nconst ERRORS = tslib_1.__importStar(require(\"@trezor/connect/lib/constants/errors\"));\nconst events_2 = require(\"@trezor/connect/lib/events\");\nconst factory_1 = require(\"@trezor/connect/lib/factory\");\nconst websocket_client_1 = require(\"@trezor/websocket-client\");\nconst client_1 = require(\"@trezor/websocket-client/lib/client\");\nconst connectSettings_1 = require(\"../connectSettings\");\nclass CoreInSuiteDesktop {\n    eventEmitter = new events_1.default();\n    _settings;\n    ws;\n    constructor() {\n        this._settings = (0, connectSettings_1.parseConnectSettings)();\n        this.ws = new websocket_client_1.WebsocketClient({ url: 'ws://127.0.0.1:21335/connect-ws' });\n    }\n    manifest(data) {\n        this._settings = (0, connectSettings_1.parseConnectSettings)({\n            ...this._settings,\n            manifest: data,\n        });\n    }\n    dispose() {\n        this.eventEmitter.removeAllListeners();\n        this._settings = (0, connectSettings_1.parseConnectSettings)();\n        this.ws.dispose();\n        return Promise.resolve(undefined);\n    }\n    cancel(_error) {\n        this.ws.sendMessage({\n            type: events_2.POPUP.CLOSED,\n            payload: { error: _error },\n        });\n    }\n    async handshake() {\n        if (!this.ws) {\n            throw ERRORS.TypedError('Desktop_ConnectionMissing', 'No websocket connection');\n        }\n        try {\n            const response = await this.ws.sendMessage({\n                type: events_2.POPUP.HANDSHAKE,\n                payload: {\n                    settings: this._settings,\n                },\n            }, {\n                timeout: 3000,\n            });\n            if (!response) {\n                throw ERRORS.TypedError('Desktop_ConnectionMissing', 'No response');\n            }\n            return response;\n        }\n        catch (err) {\n            throw ERRORS.TypedError('Desktop_ConnectionMissing', err.message);\n        }\n    }\n    async init(settings) {\n        const newSettings = (0, connectSettings_1.parseConnectSettings)({\n            ...this._settings,\n            ...settings,\n        });\n        if (!newSettings.manifest || !newSettings.manifest.appName) {\n            throw ERRORS.TypedError('Init_ManifestMissing', 'Manifest is missing or manifest.appName is not set');\n        }\n        if (!newSettings.transports?.length) {\n            newSettings.transports = ['BridgeTransport', 'WebUsbTransport'];\n        }\n        this._settings = newSettings;\n        return await this.connect();\n    }\n    async connect() {\n        try {\n            await this.ws.connect();\n        }\n        catch (err) {\n            throw err instanceof client_1.WebsocketError\n                ? ERRORS.TypedError('Desktop_ConnectionMissing', err.message)\n                : err;\n        }\n    }\n    setTransports() {\n        throw new Error('Unsupported');\n    }\n    async call(params) {\n        try {\n            if (!this.ws.isConnected()) {\n                await this.connect();\n            }\n            await this.handshake();\n            const response = await this.ws.sendMessage({\n                type: events_2.IFRAME.CALL,\n                payload: params,\n            }, {\n                timeout: 0,\n            });\n            if (!response) {\n                throw ERRORS.TypedError('Desktop_ConnectionMissing', 'No response');\n            }\n            return response;\n        }\n        catch (err) {\n            return {\n                success: false,\n                payload: ERRORS.serializeError(err instanceof client_1.WebsocketError\n                    ? ERRORS.TypedError('Desktop_ConnectionMissing', err.message)\n                    : err),\n            };\n        }\n    }\n    uiResponse(_response) {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    requestLogin() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    disableWebUSB() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    requestWebUSBDevice() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    renderWebUSBButton() { }\n}\nexports.CoreInSuiteDesktop = CoreInSuiteDesktop;\nconst impl = new CoreInSuiteDesktop();\nexports.TrezorConnect = (0, factory_1.factory)({\n    eventEmitter: impl.eventEmitter,\n    init: impl.init.bind(impl),\n    call: impl.call.bind(impl),\n    setTransports: impl.setTransports.bind(impl),\n    manifest: impl.manifest.bind(impl),\n    requestLogin: impl.requestLogin.bind(impl),\n    uiResponse: impl.uiResponse.bind(impl),\n    cancel: impl.cancel.bind(impl),\n    dispose: impl.dispose.bind(impl),\n});\n//# sourceMappingURL=core-in-suite-desktop.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}