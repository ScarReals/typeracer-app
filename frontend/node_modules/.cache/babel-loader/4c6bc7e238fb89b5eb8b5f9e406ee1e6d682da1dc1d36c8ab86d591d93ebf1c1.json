{"ast":null,"code":"var _jsxFileName = \"/home/kokoi/sol-wager-app/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport idl from \"./idl/typeracer_escrow.json\";\nimport { setProvider } from \"./solana\";\nimport { buildInitializeAndDepositIxns, buildJoinAndDepositIxn, buildCancelIxn, buildResolveIxn } from \"./escrow\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    connection\n  } = useConnection();\n  const wallet = useWallet();\n  const {\n    publicKey,\n    connected\n  } = wallet;\n  const walletAddress = (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) || \"\";\n\n  // Ref to always have the latest wallet address in listeners\n  const walletAddressRef = useRef(walletAddress);\n  useEffect(() => {\n    walletAddressRef.current = walletAddress;\n  }, [walletAddress]);\n\n  // wire up AnchorProvider + solana.js provider\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\"\n      });\n      anchor.setProvider(prov);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n\n  // wallet balance\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then(lamports => {\n        setWalletBalance(lamports / LAMPORTS_PER_SOL);\n      });\n    }\n  }, [connection, publicKey]);\n\n  // game state\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n\n  // race state\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // chat\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // anti-cheat\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // socket listeners (once)\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", m => setOpenMatches(os => [...os, m]));\n    socket.on(\"removeMatch\", id => setOpenMatches(os => os.filter(m => m.id !== id)));\n    socket.on(\"startMatch\", ({\n      id,\n      players\n    }) => {\n      if (!currentMatch || currentMatch.id !== id) {\n        setCurrentMatch({\n          id,\n          amount: (currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.amount) || 0,\n          creator: players[0],\n          accepter: players[1],\n          nonce: currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.nonce\n        });\n      }\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(id));\n      setCountdown(3);\n      setOpponentWallet(players.find(w => w !== walletAddressRef.current));\n    });\n    socket.on(\"opponentProgress\", ({\n      wallet: w,\n      progress\n    }) => {\n      if (w !== walletAddressRef.current) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({\n      winner,\n      progressMap\n    }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: winner === walletAddressRef.current ? \"win\" : \"lose\"\n      });\n      if (progressMap) {\n        var _progressMap$walletAd, _progressMap$opponent;\n        setPlayerProgress((_progressMap$walletAd = progressMap[walletAddressRef.current]) !== null && _progressMap$walletAd !== void 0 ? _progressMap$walletAd : 0);\n        setOpponentProgress((_progressMap$opponent = progressMap[opponentWallet]) !== null && _progressMap$opponent !== void 0 ? _progressMap$opponent : 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    fetchOpenMatches();\n    return () => {\n      socket.removeAllListeners();\n      socket.disconnect();\n    };\n  }, []); // empty deps\n\n  // countdown effect\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown(c => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      var _inputRef$current;\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // helpers\n  const chooseSentence = id => sentences[Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length];\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // ─── CREATE MATCH (fixed!) ─────────────────────────────────\n  async function createMatch() {\n    if (!connected) return alert(\"Connect wallet\");\n    try {\n      // 1) calculate lamports & nonce\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const nonce = Math.floor(Math.random() * 1000000);\n\n      // 2) build instructions (now passing your publicKey and nonce)\n      const {\n        ixInit,\n        ixDeposit,\n        escrowPda\n      } = await buildInitializeAndDepositIxns(lamports, publicKey,\n      // <- your PublicKey\n      nonce // <- the nonce\n      );\n\n      // 3) send transaction\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      const sig = await wallet.sendTransaction(tx, connection);\n      console.log(\"createMatch tx:\", sig);\n\n      // 4) register backend\n      const id = escrowPda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddress,\n          feePercent: 5,\n          vault: id,\n          nonce\n        })\n      });\n\n      // 5) update local state + socket\n      setCurrentMatch({\n        id,\n        amount: Number(wager),\n        creator: walletAddress,\n        nonce\n      });\n      socket.emit(\"joinMatch\", id);\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"Create error:\", e);\n      alert(\"Create match failed:\\n\" + e.message);\n    }\n  }\n\n  // acceptMatch, cancelMatch, handleInput, etc. remain unchanged:\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(new PublicKey(m.id));\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(m.id));\n      setCountdown(3);\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          accepter: walletAddressRef.current\n        })\n      });\n      setCurrentMatch({\n        ...m,\n        accepter: walletAddressRef.current\n      });\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"Accept error:\", e);\n      alert(\"Accept error:\\n\" + e.message);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n  async function cancelMatch(m) {\n    try {\n      const ix = await buildCancelIxn(new PublicKey(m.id), new PublicKey(m.creator), new PublicKey(m.accepter || m.creator),\n      // 👉 Debug: print out the account metas Anchor is generating\n      console.log(\"Cancel ix keys:\", ix.keys.map(k => ({\n        pubkey: k.pubkey.toBase58(),\n        isWritable: k.isWritable,\n        isSigner: k.isSigner\n      }))));\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      await fetch(`${API}/wagers/${m.id}/cancel`, {\n        method: \"POST\"\n      });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel error:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddressRef.current,\n      progress: rawProg\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          winner: walletAddressRef.current\n        })\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: \"win\"\n      });\n    }\n  }\n\n  // UI renderers (unchanged)...\n  const renderMatchmaking = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"matchmaking\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Wager (SOL):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0.01\",\n        step: \"0.01\",\n        value: wager,\n        onChange: e => setWager(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createMatch,\n      disabled: !wager || wager <= 0,\n      children: \"Create Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: 20\n      },\n      children: \"Open Matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), openMatches.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No open matches. Create one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: openMatches.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [m.id.slice(0, 6), \"\\u2026 | \", m.amount, \" SOL\", \" \", m.creator === walletAddressRef.current ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cancelMatch(m),\n          style: {\n            marginLeft: 10\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptMatch(m),\n          disabled: !!currentMatch || isAccepting,\n          style: {\n            marginLeft: 10\n          },\n          children: isAccepting ? \"Accepting…\" : \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 17\n        }, this)]\n      }, m.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n  const renderWaiting = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"waiting-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for opponent\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => cancelMatch(currentMatch),\n      children: \"Cancel Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 5\n  }, this);\n  const renderRace = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"race-section\",\n    children: [matchStatus === \"ready\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Starting in \", countdown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 35\n    }, this), matchStatus === \"racing\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence-display\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInput,\n        onPaste: handleInput,\n        placeholder: \"Start typing\\u2026\",\n        disabled: isInputDisabled,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-player\",\n            style: {\n              left: `${playerProgress * 100}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-opponent\",\n            style: {\n              left: `${opponentProgress * 100}%`\n            },\n            children: \"\\uD83C\\uDFCE\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-win\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\"\n        },\n        children: \"\\uD83C\\uDFC6 You Won!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          try {\n            const res = await fetch(`${API}/wagers/${currentMatch.id}/resolve`, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                winner: walletAddressRef.current\n              })\n            });\n            if (!res.ok) throw new Error(await res.text());\n            const {\n              signature\n            } = await res.json();\n            console.log(\"House-signed resolve tx:\", signature);\n            resetGame();\n          } catch (e) {\n            console.error(\"Payout error:\", e);\n            alert(\"Payout error:\\n\" + e.message);\n          }\n        },\n        children: \"Claim Winnings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }, this), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"lose\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-lose\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\",\n          color: \"#c0392b\"\n        },\n        children: \"\\uD83D\\uDE22 You Lost!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Better luck next time!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Back to Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n  const renderChat = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      style: {\n        maxHeight: 150,\n        overflowY: \"auto\"\n      },\n      children: chatMessages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: msg.sender === walletAddressRef.current ? \"self\" : \"other\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender.slice(0, 6), \"\\u2026:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: chatInput,\n      onChange: e => setChatInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && socket.emit(\"message\", {\n        matchId: currentMatch.id,\n        sender: walletAddressRef.current,\n        message: chatInput\n      }) && setChatInput(\"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        socket.emit(\"message\", {\n          matchId: currentMatch.id,\n          sender: walletAddressRef.current,\n          message: chatInput\n        });\n        setChatInput(\"\");\n      },\n      disabled: !chatInput.trim(),\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 437,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Type Racer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: [walletAddressRef.current.slice(0, 6), \"\\u2026 (\", walletBalance.toFixed(2), \" SOL)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }, this), !connected && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your wallet to play.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 22\n    }, this), connected && !currentMatch && renderMatchmaking(), connected && currentMatch && matchStatus === \"waiting\" && renderWaiting(), connected && currentMatch && (matchStatus === \"ready\" || matchStatus === \"racing\" || matchStatus === \"finished\") && renderRace(), connected && currentMatch && matchStatus === \"finished\" && renderChat()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 484,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UqIF5a99cXfYySOqS0SQLyAiUlI=\", false, function () {\n  return [useConnection, useWallet];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","sentences","useConnection","useWallet","WalletMultiButton","LAMPORTS_PER_SOL","PublicKey","Transaction","socket","anchor","idl","setProvider","buildInitializeAndDepositIxns","buildJoinAndDepositIxn","buildCancelIxn","buildResolveIxn","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","connection","wallet","publicKey","connected","walletAddress","toBase58","walletAddressRef","current","prov","AnchorProvider","preflightCommitment","commitment","walletBalance","setWalletBalance","getBalance","then","lamports","wager","setWager","openMatches","setOpenMatches","currentMatch","setCurrentMatch","matchStatus","setMatchStatus","sentence","setSentence","inputValue","setInputValue","playerProgress","setPlayerProgress","opponentProgress","setOpponentProgress","countdown","setCountdown","raceResult","setRaceResult","isInputDisabled","setIsInputDisabled","isAccepting","setIsAccepting","opponentWallet","setOpponentWallet","chatMessages","setChatMessages","chatInput","setChatInput","inputRef","API","process","env","REACT_APP_API_URL","lastProgTime","setLastProgTime","Date","now","lastProg","setLastProg","MAX_CPS","connect","on","m","os","id","filter","players","amount","creator","accepter","nonce","chooseSentence","find","w","progress","winner","progressMap","result","_progressMap$walletAd","_progressMap$opponent","fetchOpenMatches","removeAllListeners","disconnect","t","setTimeout","c","clearTimeout","_inputRef$current","focus","Array","from","reduce","a","charCodeAt","length","res","fetch","json","resetGame","createMatch","alert","Math","floor","random","ixInit","ixDeposit","escrowPda","tx","add","sig","sendTransaction","console","log","method","headers","body","JSON","stringify","Number","feePercent","vault","emit","e","error","message","acceptMatch","ix","cancelMatch","keys","map","k","pubkey","isWritable","isSigner","handleInput","type","preventDefault","val","target","value","rawProg","min","deltaProg","deltaTime","chars","cps","matchId","renderMatchmaking","className","children","fileName","_jsxFileName","lineNumber","columnNumber","step","onChange","onClick","disabled","style","marginTop","slice","marginLeft","renderWaiting","renderRace","ref","onPaste","placeholder","autoFocus","left","fontSize","ok","Error","text","signature","textAlign","color","renderChat","maxHeight","overflowY","msg","i","sender","onKeyDown","key","trim","toFixed","_c","$RefreshReg$"],"sources":["/home/kokoi/sol-wager-app/frontend/src/App.jsx"],"sourcesContent":["// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport {\n  LAMPORTS_PER_SOL,\n  PublicKey,\n  Transaction,\n} from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport idl from \"./idl/typeracer_escrow.json\";\nimport { setProvider } from \"./solana\";\nimport {\n  buildInitializeAndDepositIxns,\n  buildJoinAndDepositIxn,\n  buildCancelIxn,\n  buildResolveIxn,\n} from \"./escrow\";\n\nexport default function App() {\n  const { connection } = useConnection();\n  const wallet = useWallet();\n  const { publicKey, connected } = wallet;\n  const walletAddress = publicKey?.toBase58() || \"\";\n\n  // Ref to always have the latest wallet address in listeners\n  const walletAddressRef = useRef(walletAddress);\n  useEffect(() => {\n    walletAddressRef.current = walletAddress;\n  }, [walletAddress]);\n\n  // wire up AnchorProvider + solana.js provider\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\",\n      });\n      anchor.setProvider(prov);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n\n  // wallet balance\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then((lamports) => {\n        setWalletBalance(lamports / LAMPORTS_PER_SOL);\n      });\n    }\n  }, [connection, publicKey]);\n\n  // game state\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n\n  // race state\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // chat\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // anti-cheat\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // socket listeners (once)\n  useEffect(() => {\n    socket.connect();\n\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", (m) => setOpenMatches((os) => [...os, m]));\n    socket.on(\"removeMatch\", (id) =>\n      setOpenMatches((os) => os.filter((m) => m.id !== id))\n    );\n    socket.on(\"startMatch\", ({ id, players }) => {\n      if (!currentMatch || currentMatch.id !== id) {\n        setCurrentMatch({\n          id,\n          amount: currentMatch?.amount || 0,\n          creator: players[0],\n          accepter: players[1],\n          nonce: currentMatch?.nonce,\n        });\n      }\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(id));\n      setCountdown(3);\n      setOpponentWallet(players.find((w) => w !== walletAddressRef.current));\n    });\n    socket.on(\"opponentProgress\", ({ wallet: w, progress }) => {\n      if (w !== walletAddressRef.current) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({ winner, progressMap }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: winner === walletAddressRef.current ? \"win\" : \"lose\" });\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddressRef.current] ?? 0);\n        setOpponentProgress(progressMap[opponentWallet] ?? 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n\n    fetchOpenMatches();\n\n    return () => {\n      socket.removeAllListeners();\n      socket.disconnect();\n    };\n  }, []); // empty deps\n\n  // countdown effect\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown((c) => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      inputRef.current?.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // helpers\n  const chooseSentence = (id) =>\n    sentences[\n      Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) %\n        sentences.length\n    ];\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // ─── CREATE MATCH (fixed!) ─────────────────────────────────\n  async function createMatch() {\n    if (!connected) return alert(\"Connect wallet\");\n    try {\n      // 1) calculate lamports & nonce\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const nonce = Math.floor(Math.random() * 1_000_000);\n\n      // 2) build instructions (now passing your publicKey and nonce)\n      const { ixInit, ixDeposit, escrowPda } =\n        await buildInitializeAndDepositIxns(\n          lamports,\n          publicKey,   // <- your PublicKey\n          nonce        // <- the nonce\n        );\n\n      // 3) send transaction\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      const sig = await wallet.sendTransaction(tx, connection);\n      console.log(\"createMatch tx:\", sig);\n\n      // 4) register backend\n      const id = escrowPda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddress,\n          feePercent: 5,\n          vault: id,\n          nonce,\n        }),\n      });\n\n      // 5) update local state + socket\n      setCurrentMatch({ id, amount: Number(wager), creator: walletAddress, nonce });\n      socket.emit(\"joinMatch\", id);\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"Create error:\", e);\n      alert(\"Create match failed:\\n\" + e.message);\n    }\n  }\n\n  // acceptMatch, cancelMatch, handleInput, etc. remain unchanged:\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(new PublicKey(m.id));\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(m.id));\n      setCountdown(3);\n\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ accepter: walletAddressRef.current }),\n      });\n      setCurrentMatch({ ...m, accepter: walletAddressRef.current });\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"Accept error:\", e);\n      alert(\"Accept error:\\n\" + e.message);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  async function cancelMatch(m) {\n    try {\n      const ix = await buildCancelIxn(\n        new PublicKey(m.id),\n        new PublicKey(m.creator),\n        new PublicKey(m.accepter || m.creator),\n        // 👉 Debug: print out the account metas Anchor is generating\n        console.log(\"Cancel ix keys:\", ix.keys.map(k => ({\n          pubkey: k.pubkey.toBase58(),\n          isWritable: k.isWritable,\n          isSigner: k.isSigner\n        }))),\n      );\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n\n      await fetch(`${API}/wagers/${m.id}/cancel`, { method: \"POST\" });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel error:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddressRef.current,\n      progress: rawProg,\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ winner: walletAddressRef.current }),\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: \"win\" });\n    }\n  }\n\n  // UI renderers (unchanged)...\n  const renderMatchmaking = () => (\n    <section className=\"matchmaking\">\n      <h2>Create a Match</h2>\n      <label>\n        Wager (SOL):\n        <input\n          type=\"number\"\n          min=\"0.01\"\n          step=\"0.01\"\n          value={wager}\n          onChange={(e) => setWager(Number(e.target.value))}\n        />\n      </label>\n      <button onClick={createMatch} disabled={!wager || wager <= 0}>\n        Create Match\n      </button>\n      <h2 style={{ marginTop: 20 }}>Open Matches</h2>\n      {openMatches.length === 0 ? (\n        <p>No open matches. Create one!</p>\n      ) : (\n        <ul>\n          {openMatches.map((m) => (\n            <li key={m.id}>\n              {m.id.slice(0, 6)}… | {m.amount} SOL{\" \"}\n              {m.creator === walletAddressRef.current ? (\n                <button\n                  onClick={() => cancelMatch(m)}\n                  style={{ marginLeft: 10 }}\n                >\n                  Cancel\n                </button>\n              ) : (\n                <button\n                  onClick={() => acceptMatch(m)}\n                  disabled={!!currentMatch || isAccepting}\n                  style={{ marginLeft: 10 }}\n                >\n                  {isAccepting ? \"Accepting…\" : \"Accept\"}\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </section>\n  );\n\n  const renderWaiting = () => (\n    <section className=\"waiting-section\">\n      <h2>Waiting for opponent…</h2>\n      <button onClick={() => cancelMatch(currentMatch)}>Cancel Match</button>\n    </section>\n  );\n\n  const renderRace = () => (\n    <section className=\"race-section\">\n      {matchStatus === \"ready\" && <h2>Starting in {countdown}</h2>}\n      {matchStatus === \"racing\" && (\n        <>\n          <div className=\"sentence-display\">{sentence}</div>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInput}\n            onPaste={handleInput}\n            placeholder=\"Start typing…\"\n            disabled={isInputDisabled}\n            autoFocus\n          />\n          <div className=\"track\">\n            <div className=\"lane\">\n              <div\n                className=\"car car-player\"\n                style={{ left: `${playerProgress * 100}%` }}\n              >\n                🚗\n              </div>\n            </div>\n            <div className=\"lane\">\n              <div\n                className=\"car car-opponent\"\n                style={{ left: `${opponentProgress * 100}%` }}\n              >\n                🏎️\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"win\" && (\n        <div className=\"results results-win\">\n          <h2 style={{ fontSize: \"2rem\" }}>🏆 You Won!</h2>\n          <button\n            onClick={async () => {\n              try {\n                const res = await fetch(\n                  `${API}/wagers/${currentMatch.id}/resolve`,\n                  {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({\n                      winner: walletAddressRef.current,\n                    }),\n                  }\n                );\n                if (!res.ok) throw new Error(await res.text());\n                const { signature } = await res.json();\n                console.log(\"House-signed resolve tx:\", signature);\n                resetGame();\n              } catch (e) {\n                console.error(\"Payout error:\", e);\n                alert(\"Payout error:\\n\" + e.message);\n              }\n            }}\n          >\n            Claim Winnings\n          </button>\n        </div>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"lose\" && (\n        <div className=\"results results-lose\" style={{ textAlign: \"center\" }}>\n          <h2 style={{ fontSize: \"2rem\", color: \"#c0392b\" }}>😢 You Lost!</h2>\n          <p>Better luck next time!</p>\n          <button onClick={resetGame}>Back to Matches</button>\n        </div>\n      )}\n    </section>\n  );\n\n  const renderChat = () => (\n    <section className=\"chat-section\">\n      <h2>Chat</h2>\n      <div\n        className=\"chat-messages\"\n        style={{ maxHeight: 150, overflowY: \"auto\" }}\n      >\n        {chatMessages.map((msg, i) => (\n          <p\n            key={i}\n            className={\n              msg.sender === walletAddressRef.current ? \"self\" : \"other\"\n            }\n          >\n            <strong>{msg.sender.slice(0, 6)}…:</strong> {msg.message}\n          </p>\n        ))}\n      </div>\n      <input\n        value={chatInput}\n        onChange={(e) => setChatInput(e.target.value)}\n        onKeyDown={(e) =>\n          e.key === \"Enter\" &&\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddressRef.current,\n            message: chatInput,\n          }) &&\n          setChatInput(\"\")\n        }\n      />\n      <button\n        onClick={() => {\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddressRef.current,\n            message: chatInput,\n          });\n          setChatInput(\"\");\n        }}\n        disabled={!chatInput.trim()}\n      >\n        Send\n      </button>\n    </section>\n  );\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Type Racer</h1>\n        {connected ? (\n          <div className=\"wallet-info\">\n            {walletAddressRef.current.slice(0, 6)}… (\n            {walletBalance.toFixed(2)} SOL)\n          </div>\n        ) : (\n          <WalletMultiButton />\n        )}\n      </header>\n\n      {!connected && <p>Please connect your wallet to play.</p>}\n      {connected && !currentMatch && renderMatchmaking()}\n      {connected && currentMatch && matchStatus === \"waiting\" && renderWaiting()}\n      {connected &&\n        currentMatch &&\n        (matchStatus === \"ready\" ||\n          matchStatus === \"racing\" ||\n          matchStatus === \"finished\") &&\n        renderRace()}\n      {connected && currentMatch && matchStatus === \"finished\" && renderChat()}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}