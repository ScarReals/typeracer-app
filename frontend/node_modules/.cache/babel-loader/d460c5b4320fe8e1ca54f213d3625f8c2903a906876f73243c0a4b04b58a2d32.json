{"ast":null,"code":"var _jsxFileName = \"/home/kokoi/sol-wager-app/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport { setProvider } from \"./solana\";\nimport { buildInitializeAndDepositIxns, buildJoinAndDepositIxn, buildCancelIxn } from \"./escrow\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    connection\n  } = useConnection();\n  const wallet = useWallet();\n  const {\n    publicKey,\n    connected\n  } = wallet;\n  const walletAddress = (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) || \"\";\n\n  // keep ref of currentMatch for callbacks\n  const currentMatchRef = useRef(null);\n\n  // track matches we've finished so we don't show Cancel again\n  const [completedMatches, setCompletedMatches] = useState(new Set());\n\n  // Anchor + Solana provider\n  useEffect(() => {\n    if (connected && connection) {\n      const provider = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\"\n      });\n      anchor.setProvider(provider);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n\n  // wallet balance\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then(lamports => setWalletBalance(lamports / LAMPORTS_PER_SOL)).catch(() => {});\n    }\n  }, [connection, publicKey]);\n\n  // game state\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\"); // \"waiting\", \"ready\", \"racing\", \"finished\"\n\n  // race state\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // chat\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n\n  // anti-cheat\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n  const API = process.env.REACT_APP_API_URL;\n\n  // ─── helpers ────────────────────────────────────────────────────────────────\n  const chooseSentence = id => sentences[Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length];\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n  const resetGame = () => {\n    currentMatchRef.current = null;\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // ─── socket listeners ────────────────────────────────────────────────────────\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", m => setOpenMatches(os => [...os, m]));\n    socket.on(\"removeMatch\", id => setOpenMatches(os => os.filter(m => m.id !== id)));\n    socket.on(\"startMatch\", ({\n      id,\n      players\n    }) => {\n      const match = {\n        id,\n        creator: players[0],\n        accepter: players[1]\n      };\n      currentMatchRef.current = match;\n      setCurrentMatch(match);\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(id));\n      setCountdown(3);\n      setOpponentWallet(players.find(w => w !== walletAddress));\n    });\n    socket.on(\"opponentProgress\", ({\n      wallet: w,\n      progress\n    }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({\n      winner,\n      progressMap\n    }) => {\n      var _currentMatchRef$curr;\n      const id = (_currentMatchRef$curr = currentMatchRef.current) === null || _currentMatchRef$curr === void 0 ? void 0 : _currentMatchRef$curr.id;\n      if (id) {\n        setCompletedMatches(s => new Set(s).add(id));\n      }\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      if (progressMap) {\n        var _progressMap$walletAd, _progressMap$opponent;\n        setPlayerProgress((_progressMap$walletAd = progressMap[walletAddress]) !== null && _progressMap$walletAd !== void 0 ? _progressMap$walletAd : 0);\n        setOpponentProgress((_progressMap$opponent = progressMap[opponentWallet]) !== null && _progressMap$opponent !== void 0 ? _progressMap$opponent : 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", resetGame);\n    fetchOpenMatches();\n    return () => {\n      socket.removeAllListeners();\n      socket.disconnect();\n    };\n  }, [walletAddress, opponentWallet]);\n\n  // countdown to race start\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown(c => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      var _inputRef$current;\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // ─── 1) CREATE MATCH (opens wallet) ─────────────────────────────────────────\n  async function createMatch() {\n    if (!connected) return alert(\"Connect wallet\");\n    try {\n      // build on-chain init + deposit\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const nonce = Math.floor(Math.random() * 1000000);\n      const {\n        ixInit,\n        ixDeposit,\n        escrowPda\n      } = await buildInitializeAndDepositIxns(lamports, publicKey, nonce);\n\n      // send to Phantom (opens wallet)\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      const sig = await wallet.sendTransaction(tx, connection);\n      console.log(\"createMatch tx sig:\", sig);\n\n      // register in backend\n      const id = escrowPda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddress,\n          feePercent: 5,\n          vault: id,\n          nonce\n        })\n      });\n\n      // update UI\n      const match = {\n        id,\n        creator: walletAddress,\n        nonce\n      };\n      currentMatchRef.current = match;\n      setCurrentMatch(match);\n      socket.emit(\"joinMatch\", id);\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"Create error:\", e);\n      alert(\"Create match failed:\\n\" + e.message);\n    }\n  }\n\n  // ─── 2) ACCEPT MATCH ─────────────────────────────────────────────────────────\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(new PublicKey(m.id));\n      const tx = new Transaction().add(ix);\n      await wallet.sendTransaction(tx, connection);\n\n      // go to ready/racing\n      currentMatchRef.current = m;\n      setCurrentMatch(m);\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(m.id));\n      setCountdown(3);\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          accepter: walletAddress\n        })\n      });\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"Accept error:\", e);\n      alert(\"Accept error:\\n\" + e.message);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  // ─── 3) CANCEL MATCH ─────────────────────────────────────────────────────────\n  async function cancelMatch(m) {\n    try {\n      const ix = await buildCancelIxn(m.id, m.creator, m.accepter || m.creator);\n      const tx = new Transaction().add(ix);\n      await wallet.sendTransaction(tx, connection);\n      await fetch(`${API}/wagers/${m.id}/cancel`, {\n        method: \"POST\"\n      });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel error:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n\n  // ─── 4) TYPING INPUT ─────────────────────────────────────────────────────────\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: rawProg\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          winner: walletAddress\n        })\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: \"win\"\n      });\n    }\n  }\n\n  // ─── RENDER ─────────────────────────────────────────────────────────────────\n  const pendingOpen = openMatches.filter(m => !completedMatches.has(m.id));\n  const renderMatchmaking = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"matchmaking\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Wager (SOL):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0.01\",\n        step: \"0.01\",\n        value: wager,\n        onChange: e => setWager(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createMatch,\n      disabled: !wager || wager <= 0,\n      children: \"Create Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: 20\n      },\n      children: \"Open Matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), pendingOpen.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No open matches. Create one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pendingOpen.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [m.id.slice(0, 6), \"\\u2026 | \", m.amount, \" SOL\", \" \", m.creator === walletAddress ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cancelMatch(m),\n          style: {\n            marginLeft: 10\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptMatch(m),\n          disabled: !!currentMatch || isAccepting,\n          style: {\n            marginLeft: 10\n          },\n          children: isAccepting ? \"Accepting…\" : \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }, this)]\n      }, m.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n  const renderWaiting = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"waiting-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for opponent\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => cancelMatch(currentMatch),\n      children: \"Cancel Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 5\n  }, this);\n  const renderRace = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"race-section\",\n    children: [matchStatus === \"ready\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Starting in \", countdown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 35\n    }, this), matchStatus === \"racing\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence-display\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInput,\n        onPaste: handleInput,\n        placeholder: \"Start typing\\u2026\",\n        disabled: isInputDisabled,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-player\",\n            style: {\n              left: `${playerProgress * 100}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-opponent\",\n            style: {\n              left: `${opponentProgress * 100}%`\n            },\n            children: \"\\uD83C\\uDFCE\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-win\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\"\n        },\n        children: \"\\uD83C\\uDFC6 You Won!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          try {\n            const res = await fetch(`${API}/wagers/${currentMatch.id}/resolve`, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                winner: walletAddress\n              })\n            });\n            const data = await res.json();\n            if (data.success) {\n              alert(\"Winnings claimed!\\n\" + data.signature);\n              resetGame();\n            } else {\n              throw new Error(data.error || \"Claim failed\");\n            }\n          } catch (e) {\n            console.error(\"Claim error:\", e);\n            alert(\"Payout error:\\n\" + e.message);\n          }\n        },\n        children: \"Claim Winnings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }, this), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"lose\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-lose\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\",\n          color: \"#c0392b\"\n        },\n        children: \"\\uD83D\\uDE22 You Lost!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Better luck next time!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Back to Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 5\n  }, this);\n  const renderChat = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      style: {\n        maxHeight: 150,\n        overflowY: \"auto\"\n      },\n      children: chatMessages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: msg.sender === walletAddress ? \"self\" : \"other\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender.slice(0, 6), \"\\u2026:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: chatInput,\n      onChange: e => setChatInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && socket.emit(\"message\", {\n        matchId: currentMatch.id,\n        sender: walletAddress,\n        message: chatInput\n      }) && setChatInput(\"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        socket.emit(\"message\", {\n          matchId: currentMatch.id,\n          sender: walletAddress,\n          message: chatInput\n        });\n        setChatInput(\"\");\n      },\n      disabled: !chatInput.trim(),\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 433,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Type Racer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this), connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: [walletAddress.slice(0, 6), \"\\u2026 (\", walletBalance.toFixed(2), \" SOL)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this), !connected && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your wallet to play.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 22\n    }, this), connected && !currentMatch && renderMatchmaking(), connected && currentMatch && matchStatus === \"waiting\" && renderWaiting(), connected && currentMatch && (matchStatus === \"ready\" || matchStatus === \"racing\" || matchStatus === \"finished\") && renderRace(), connected && currentMatch && matchStatus === \"finished\" && renderChat()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 480,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0iD2HU3sWdaqWp/Zq35FlmvATUc=\", false, function () {\n  return [useConnection, useWallet];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","sentences","useConnection","useWallet","WalletMultiButton","LAMPORTS_PER_SOL","PublicKey","Transaction","socket","anchor","setProvider","buildInitializeAndDepositIxns","buildJoinAndDepositIxn","buildCancelIxn","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","connection","wallet","publicKey","connected","walletAddress","toBase58","currentMatchRef","completedMatches","setCompletedMatches","Set","provider","AnchorProvider","preflightCommitment","commitment","walletBalance","setWalletBalance","getBalance","then","lamports","catch","wager","setWager","openMatches","setOpenMatches","currentMatch","setCurrentMatch","matchStatus","setMatchStatus","sentence","setSentence","inputValue","setInputValue","playerProgress","setPlayerProgress","opponentProgress","setOpponentProgress","countdown","setCountdown","raceResult","setRaceResult","isInputDisabled","setIsInputDisabled","isAccepting","setIsAccepting","opponentWallet","setOpponentWallet","chatMessages","setChatMessages","chatInput","setChatInput","inputRef","lastProgTime","setLastProgTime","Date","now","lastProg","setLastProg","MAX_CPS","API","process","env","REACT_APP_API_URL","chooseSentence","id","Array","from","reduce","a","c","charCodeAt","length","fetchOpenMatches","res","fetch","json","resetGame","current","connect","on","m","os","filter","players","match","creator","accepter","find","w","progress","winner","progressMap","_currentMatchRef$curr","s","add","_progressMap$walletAd","_progressMap$opponent","removeAllListeners","disconnect","t","setTimeout","clearTimeout","_inputRef$current","focus","createMatch","alert","Math","floor","nonce","random","ixInit","ixDeposit","escrowPda","tx","sig","sendTransaction","console","log","method","headers","body","JSON","stringify","amount","Number","feePercent","vault","emit","e","error","message","acceptMatch","ix","cancelMatch","handleInput","type","preventDefault","val","target","value","rawProg","min","deltaProg","deltaTime","chars","cps","matchId","result","pendingOpen","has","renderMatchmaking","className","children","fileName","_jsxFileName","lineNumber","columnNumber","step","onChange","onClick","disabled","style","marginTop","map","slice","marginLeft","renderWaiting","renderRace","ref","onPaste","placeholder","autoFocus","left","fontSize","data","success","signature","Error","textAlign","color","renderChat","maxHeight","overflowY","msg","i","sender","onKeyDown","key","trim","toFixed","_c","$RefreshReg$"],"sources":["/home/kokoi/sol-wager-app/frontend/src/App.jsx"],"sourcesContent":["// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport { setProvider } from \"./solana\";\nimport {\n  buildInitializeAndDepositIxns,\n  buildJoinAndDepositIxn,\n  buildCancelIxn,\n} from \"./escrow\";\n\nexport default function App() {\n  const { connection } = useConnection();\n  const wallet = useWallet();\n  const { publicKey, connected } = wallet;\n  const walletAddress = publicKey?.toBase58() || \"\";\n\n  // keep ref of currentMatch for callbacks\n  const currentMatchRef = useRef(null);\n\n  // track matches we've finished so we don't show Cancel again\n  const [completedMatches, setCompletedMatches] = useState(new Set());\n\n  // Anchor + Solana provider\n  useEffect(() => {\n    if (connected && connection) {\n      const provider = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\",\n      });\n      anchor.setProvider(provider);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n\n  // wallet balance\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey)\n        .then((lamports) => setWalletBalance(lamports / LAMPORTS_PER_SOL))\n        .catch(() => {});\n    }\n  }, [connection, publicKey]);\n\n  // game state\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\"); // \"waiting\", \"ready\", \"racing\", \"finished\"\n\n  // race state\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // chat\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n\n  // anti-cheat\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  const API = process.env.REACT_APP_API_URL;\n\n  // ─── helpers ────────────────────────────────────────────────────────────────\n  const chooseSentence = (id) =>\n    sentences[\n      Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length\n    ];\n\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n\n  const resetGame = () => {\n    currentMatchRef.current = null;\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // ─── socket listeners ────────────────────────────────────────────────────────\n  useEffect(() => {\n    socket.connect();\n\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", (m) => setOpenMatches((os) => [...os, m]));\n    socket.on(\"removeMatch\", (id) =>\n      setOpenMatches((os) => os.filter((m) => m.id !== id))\n    );\n\n    socket.on(\"startMatch\", ({ id, players }) => {\n      const match = { id, creator: players[0], accepter: players[1] };\n      currentMatchRef.current = match;\n      setCurrentMatch(match);\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(id));\n      setCountdown(3);\n      setOpponentWallet(players.find((w) => w !== walletAddress));\n    });\n\n    socket.on(\"opponentProgress\", ({ wallet: w, progress }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n\n    socket.on(\"raceEnd\", ({ winner, progressMap }) => {\n      const id = currentMatchRef.current?.id;\n      if (id) {\n        setCompletedMatches((s) => new Set(s).add(id));\n      }\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddress] ?? 0);\n        setOpponentProgress(progressMap[opponentWallet] ?? 0);\n      }\n    });\n\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", resetGame);\n\n    fetchOpenMatches();\n\n    return () => {\n      socket.removeAllListeners();\n      socket.disconnect();\n    };\n  }, [walletAddress, opponentWallet]);\n\n  // countdown to race start\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown((c) => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      inputRef.current?.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // ─── 1) CREATE MATCH (opens wallet) ─────────────────────────────────────────\n  async function createMatch() {\n    if (!connected) return alert(\"Connect wallet\");\n    try {\n      // build on-chain init + deposit\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const nonce = Math.floor(Math.random() * 1_000_000);\n      const { ixInit, ixDeposit, escrowPda } =\n        await buildInitializeAndDepositIxns(lamports, publicKey, nonce);\n\n      // send to Phantom (opens wallet)\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      const sig = await wallet.sendTransaction(tx, connection);\n      console.log(\"createMatch tx sig:\", sig);\n\n      // register in backend\n      const id = escrowPda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddress,\n          feePercent: 5,\n          vault: id,\n          nonce,\n        }),\n      });\n\n      // update UI\n      const match = { id, creator: walletAddress, nonce };\n      currentMatchRef.current = match;\n      setCurrentMatch(match);\n      socket.emit(\"joinMatch\", id);\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"Create error:\", e);\n      alert(\"Create match failed:\\n\" + e.message);\n    }\n  }\n\n  // ─── 2) ACCEPT MATCH ─────────────────────────────────────────────────────────\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(new PublicKey(m.id));\n      const tx = new Transaction().add(ix);\n      await wallet.sendTransaction(tx, connection);\n\n      // go to ready/racing\n      currentMatchRef.current = m;\n      setCurrentMatch(m);\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(m.id));\n      setCountdown(3);\n\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ accepter: walletAddress }),\n      });\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"Accept error:\", e);\n      alert(\"Accept error:\\n\" + e.message);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  // ─── 3) CANCEL MATCH ─────────────────────────────────────────────────────────\n  async function cancelMatch(m) {\n    try {\n      const ix = await buildCancelIxn(m.id, m.creator, m.accepter || m.creator);\n      const tx = new Transaction().add(ix);\n      await wallet.sendTransaction(tx, connection);\n\n      await fetch(`${API}/wagers/${m.id}/cancel`, { method: \"POST\" });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel error:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n\n  // ─── 4) TYPING INPUT ─────────────────────────────────────────────────────────\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: rawProg,\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ winner: walletAddress }),\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: \"win\" });\n    }\n  }\n\n  // ─── RENDER ─────────────────────────────────────────────────────────────────\n  const pendingOpen = openMatches.filter(m => !completedMatches.has(m.id));\n\n  const renderMatchmaking = () => (\n    <section className=\"matchmaking\">\n      <h2>Create a Match</h2>\n      <label>\n        Wager (SOL):\n        <input\n          type=\"number\"\n          min=\"0.01\"\n          step=\"0.01\"\n          value={wager}\n          onChange={(e) => setWager(Number(e.target.value))}\n        />\n      </label>\n      <button onClick={createMatch} disabled={!wager || wager <= 0}>\n        Create Match\n      </button>\n\n      <h2 style={{ marginTop: 20 }}>Open Matches</h2>\n      {pendingOpen.length === 0 ? (\n        <p>No open matches. Create one!</p>\n      ) : (\n        <ul>\n          {pendingOpen.map((m) => (\n            <li key={m.id}>\n              {m.id.slice(0, 6)}… | {m.amount} SOL{\" \"}\n              {m.creator === walletAddress ? (\n                <button\n                  onClick={() => cancelMatch(m)}\n                  style={{ marginLeft: 10 }}\n                >\n                  Cancel\n                </button>\n              ) : (\n                <button\n                  onClick={() => acceptMatch(m)}\n                  disabled={!!currentMatch || isAccepting}\n                  style={{ marginLeft: 10 }}\n                >\n                  {isAccepting ? \"Accepting…\" : \"Accept\"}\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </section>\n  );\n\n  const renderWaiting = () => (\n    <section className=\"waiting-section\">\n      <h2>Waiting for opponent…</h2>\n      <button onClick={() => cancelMatch(currentMatch)}>Cancel Match</button>\n    </section>\n  );\n\n  const renderRace = () => (\n    <section className=\"race-section\">\n      {matchStatus === \"ready\" && <h2>Starting in {countdown}</h2>}\n      {matchStatus === \"racing\" && (\n        <>\n          <div className=\"sentence-display\">{sentence}</div>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInput}\n            onPaste={handleInput}\n            placeholder=\"Start typing…\"\n            disabled={isInputDisabled}\n            autoFocus\n          />\n          <div className=\"track\">\n            <div className=\"lane\">\n              <div\n                className=\"car car-player\"\n                style={{ left: `${playerProgress * 100}%` }}\n              >\n                🚗\n              </div>\n            </div>\n            <div className=\"lane\">\n              <div\n                className=\"car car-opponent\"\n                style={{ left: `${opponentProgress * 100}%` }}\n              >\n                🏎️\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"win\" && (\n        <div className=\"results results-win\">\n          <h2 style={{ fontSize: \"2rem\" }}>🏆 You Won!</h2>\n          <button\n            onClick={async () => {\n              try {\n                const res = await fetch(\n                  `${API}/wagers/${currentMatch.id}/resolve`,\n                  {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({\n                      winner: walletAddress,\n                    }),\n                  }\n                );\n                const data = await res.json();\n                if (data.success) {\n                  alert(\"Winnings claimed!\\n\" + data.signature);\n                  resetGame();\n                } else {\n                  throw new Error(data.error || \"Claim failed\");\n                }\n              } catch (e) {\n                console.error(\"Claim error:\", e);\n                alert(\"Payout error:\\n\" + e.message);\n              }\n            }}\n          >\n            Claim Winnings\n          </button>\n        </div>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"lose\" && (\n        <div className=\"results results-lose\" style={{ textAlign: \"center\" }}>\n          <h2 style={{ fontSize: \"2rem\", color: \"#c0392b\" }}>😢 You Lost!</h2>\n          <p>Better luck next time!</p>\n          <button onClick={resetGame}>Back to Matches</button>\n        </div>\n      )}\n    </section>\n  );\n\n  const renderChat = () => (\n    <section className=\"chat-section\">\n      <h2>Chat</h2>\n      <div\n        className=\"chat-messages\"\n        style={{ maxHeight: 150, overflowY: \"auto\" }}\n      >\n        {chatMessages.map((msg, i) => (\n          <p\n            key={i}\n            className={\n              msg.sender === walletAddress ? \"self\" : \"other\"\n            }\n          >\n            <strong>{msg.sender.slice(0, 6)}…:</strong> {msg.message}\n          </p>\n        ))}\n      </div>\n      <input\n        value={chatInput}\n        onChange={(e) => setChatInput(e.target.value)}\n        onKeyDown={(e) =>\n          e.key === \"Enter\" &&\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddress,\n            message: chatInput,\n          }) &&\n          setChatInput(\"\")\n        }\n      />\n      <button\n        onClick={() => {\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddress,\n            message: chatInput,\n          });\n          setChatInput(\"\");\n        }}\n        disabled={!chatInput.trim()}\n      >\n        Send\n      </button>\n    </section>\n  );\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Type Racer</h1>\n        {connected ? (\n          <div className=\"wallet-info\">\n            {walletAddress.slice(0, 6)}… ({walletBalance.toFixed(2)} SOL)\n          </div>\n        ) : (\n          <WalletMultiButton />\n        )}\n      </header>\n\n      {!connected && <p>Please connect your wallet to play.</p>}\n      {connected && !currentMatch && renderMatchmaking()}\n      {connected && currentMatch && matchStatus === \"waiting\" && renderWaiting()}\n      {connected &&\n        currentMatch &&\n        (matchStatus === \"ready\" ||\n          matchStatus === \"racing\" ||\n          matchStatus === \"finished\") &&\n        renderRace()}\n      {connected && currentMatch && matchStatus === \"finished\" && renderChat()}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}