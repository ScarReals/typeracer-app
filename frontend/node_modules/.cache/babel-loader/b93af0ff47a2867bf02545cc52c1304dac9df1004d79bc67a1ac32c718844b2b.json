{"ast":null,"code":"var _jsxFileName = \"/home/kokoi/sol-wager-app/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey, SystemProgram, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport { initializeEscrow, joinAndDeposit, depositToEscrow, cancelEscrow, resolveEscrow } from \"./escrow\";\nimport idl from \"./idl/typeracer_escrow.json\";\n\n// Hard‑coded program ID\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PROGRAM_ID = new PublicKey(idl.metadata.address);\nexport default function App() {\n  _s();\n  const {\n    connection\n  } = useConnection();\n  const wallet = useWallet();\n  const {\n    publicKey,\n    connected\n  } = wallet;\n  const walletAddress = (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) || \"\";\n  const providerRef = useRef(null);\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\"\n      });\n      anchor.setProvider(prov);\n      providerRef.current = prov;\n    }\n  }, [connected, connection, wallet]);\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then(lamports => {\n        setWalletBalance(lamports / LAMPORTS_PER_SOL);\n      });\n    }\n  }, [connection, publicKey]);\n\n  // Game state\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n\n  // Race state\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // Chat\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n\n  // Anti‑cheat\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // Socket listeners\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", m => setOpenMatches(os => [...os, m]));\n    socket.on(\"removeMatch\", id => setOpenMatches(os => os.filter(m => m.id !== id)));\n    socket.on(\"startMatch\", ({\n      id,\n      players\n    }) => {\n      if ((currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.id) === id) {\n        setMatchStatus(\"ready\");\n        setSentence(chooseSentence(id));\n        setCountdown(3);\n        setOpponentWallet(players.find(w => w !== walletAddress));\n      }\n    });\n    socket.on(\"opponentProgress\", ({\n      wallet: w,\n      progress\n    }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({\n      winner,\n      progressMap\n    }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: winner === walletAddress ? \"win\" : \"lose\"\n      });\n      if (progressMap) {\n        var _progressMap$walletAd, _progressMap$opponent;\n        setPlayerProgress((_progressMap$walletAd = progressMap[walletAddress]) !== null && _progressMap$walletAd !== void 0 ? _progressMap$walletAd : 0);\n        setOpponentProgress((_progressMap$opponent = progressMap[opponentWallet]) !== null && _progressMap$opponent !== void 0 ? _progressMap$opponent : 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", async () => {\n      if (matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && currentMatch !== null && currentMatch !== void 0 && currentMatch.id) {\n        try {\n          await resolveEscrow(new PublicKey(currentMatch.id), publicKey);\n        } catch (e) {\n          console.error(\"Auto‑claim failed:\", e);\n        }\n      }\n      resetGame();\n    });\n    return () => socket.removeAllListeners();\n  }, [connection, currentMatch, walletAddress, opponentWallet, matchStatus, raceResult, publicKey]);\n\n  // Countdown effect\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown(c => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      var _inputRef$current;\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // Helpers\n  const chooseSentence = id => sentences[Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length];\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // ===== createMatch with vault PDA inclusion =====\n  async function createMatch() {\n    if (!connected) return alert(\"Connect your wallet first\");\n    const provider = providerRef.current;\n    if (!provider) return alert(\"Provider not ready\");\n    const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n    const program = new anchor.Program(idl, PROGRAM_ID, provider);\n    const nonce = Math.floor(Math.random() * 1000000);\n\n    // derive escrow PDA\n    const [escrowPda] = await PublicKey.findProgramAddress([Buffer.from(\"escrow\"), provider.wallet.publicKey.toBuffer(), new anchor.BN(nonce).toArrayLike(Buffer, \"le\", 8)], program.programId);\n\n    // derive vault PDA (must match your Rust seed)\n    const [vaultPda] = await PublicKey.findProgramAddress([Buffer.from(\"escrow_vault\"), escrowPda.toBuffer()], program.programId);\n\n    // init + deposit instructions\n    const ixInit = await program.methods.initialize(new anchor.BN(lamports), new anchor.BN(nonce)).accounts({\n      escrow: escrowPda,\n      player1: provider.wallet.publicKey,\n      authority: provider.wallet.publicKey,\n      systemProgram: SystemProgram.programId\n    }).instruction();\n    const ixDeposit = await program.methods.deposit().accounts({\n      escrow: escrowPda,\n      payer: provider.wallet.publicKey,\n      escrowAccount: escrowPda,\n      systemProgram: SystemProgram.programId\n    }).instruction();\n    const tx = new Transaction().add(ixInit, ixDeposit);\n    tx.feePayer = provider.wallet.publicKey;\n    const {\n      blockhash,\n      lastValidBlockHeight\n    } = await provider.connection.getLatestBlockhash(\"confirmed\");\n    tx.recentBlockhash = blockhash;\n    let signed;\n    try {\n      signed = await provider.wallet.signTransaction(tx);\n    } catch (err) {\n      return alert(\"Signing failed: \" + err.message);\n    }\n    try {\n      const sig = await provider.connection.sendRawTransaction(signed.serialize(), {\n        skipPreflight: false,\n        preflightCommitment: \"confirmed\"\n      });\n      await provider.connection.confirmTransaction({\n        signature: sig,\n        blockhash,\n        lastValidBlockHeight\n      }, \"confirmed\");\n    } catch (err) {\n      console.error(\"createMatch failed:\", err);\n      return alert(`Failed to create match:\\n${err.message || err}`);\n    }\n\n    // register match with vault\n    const id = escrowPda.toBase58();\n    await fetch(`${API}/wagers`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id,\n        amount: Number(wager),\n        creator: walletAddress,\n        feePercent: 5,\n        vault: vaultPda.toBase58()\n      })\n    });\n    setCurrentMatch({\n      id,\n      amount: Number(wager),\n      creator: walletAddress,\n      vault: vaultPda.toBase58()\n    });\n    socket.emit(\"joinMatch\", id);\n    setMatchStatus(\"waiting\");\n  }\n\n  // ==== acceptMatch (include vault) ====\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect your wallet first\");\n    setIsAccepting(true);\n    const provider = providerRef.current;\n    const pda = new PublicKey(m.id);\n    try {\n      await joinAndDeposit(pda);\n\n      // derive vault PDA\n      const [vaultPda] = await PublicKey.findProgramAddress([Buffer.from(\"escrow_vault\"), pda.toBuffer()], PROGRAM_ID);\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          accepter: walletAddress,\n          vault: vaultPda.toBase58()\n        })\n      });\n      setCurrentMatch({\n        ...m,\n        accepter: walletAddress,\n        vault: vaultPda.toBase58()\n      });\n      setMatchStatus(\"ready\");\n      setCountdown(3);\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"acceptMatch failed:\", e);\n      setCurrentMatch(null);\n      alert(`Failed to accept match:\\n${e.message || e}`);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  // ==== cancelMatch, handleInput, renderers unchanged ====\n  async function cancelMatch(m) {\n    try {\n      await cancelEscrow(new PublicKey(m.id), new PublicKey(m.creator), new PublicKey(m.accepter || m.creator));\n      await fetch(`${API}/wagers/${m.id}/cancel`, {\n        method: \"POST\"\n      });\n      resetGame();\n    } catch (e) {\n      console.error(\"cancelMatch failed:\", e);\n      alert(`Failed to cancel match:\\n${e.message || e}`);\n    }\n  }\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: rawProg\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          winner: walletAddress\n        })\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: \"win\"\n      });\n    }\n  }\n  const renderMatchmaking = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"matchmaking\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Wager (SOL):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0.01\",\n        step: \"0.01\",\n        value: wager,\n        onChange: e => setWager(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createMatch,\n      disabled: !wager || wager <= 0,\n      children: \"Create Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: 20\n      },\n      children: \"Open Matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), openMatches.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No open matches. Create one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: openMatches.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [m.id.slice(0, 6), \"\\u2026 | \", m.amount, \" SOL\", \" \", m.creator === walletAddress ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cancelMatch(m),\n          style: {\n            marginLeft: 10\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptMatch(m),\n          disabled: !!currentMatch || isAccepting,\n          style: {\n            marginLeft: 10\n          },\n          children: isAccepting ? \"Accepting…\" : \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 17\n        }, this)]\n      }, m.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 5\n  }, this);\n  const renderWaiting = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"waiting-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for opponent\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => cancelMatch(currentMatch),\n      children: \"Cancel Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 404,\n    columnNumber: 5\n  }, this);\n  const renderRace = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"race-section\",\n    children: [matchStatus === \"ready\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Starting in \", countdown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 35\n    }, this), matchStatus === \"racing\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence-display\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInput,\n        onPaste: handleInput,\n        placeholder: \"Start typing\\u2026\",\n        disabled: isInputDisabled,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-player\",\n            style: {\n              left: `${playerProgress * 100}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-opponent\",\n            style: {\n              left: `${opponentProgress * 100}%`\n            },\n            children: \"\\uD83C\\uDFCE\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-win\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\"\n        },\n        children: \"\\uD83C\\uDFC6 You Won!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          try {\n            await resolveEscrow(new PublicKey(currentMatch.id), publicKey);\n            resetGame();\n          } catch (e) {\n            console.error(e);\n            alert(\"Payout error: \" + (e.message || e));\n          }\n        },\n        children: \"Claim Winnings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 9\n    }, this), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"lose\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-lose\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\",\n          color: \"#c0392b\"\n        },\n        children: \"\\uD83D\\uDE22 You Lost!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Better luck next time!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Back to Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 411,\n    columnNumber: 5\n  }, this);\n  const renderChat = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      style: {\n        maxHeight: 150,\n        overflowY: \"auto\"\n      },\n      children: chatMessages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: msg.sender === walletAddress ? \"self\" : \"other\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender.slice(0, 6), \"\\u2026:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: chatInput,\n      onChange: e => setChatInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && socket.emit(\"message\", {\n        matchId: currentMatch.id,\n        sender: walletAddress,\n        message: chatInput\n      }) && setChatInput(\"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        socket.emit(\"message\", {\n          matchId: currentMatch.id,\n          sender: walletAddress,\n          message: chatInput\n        });\n        setChatInput(\"\");\n      },\n      disabled: !chatInput.trim(),\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 478,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Type Racer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this), connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: [walletAddress.slice(0, 6), \"\\u2026 (\", walletBalance.toFixed(2), \" SOL)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }, this), !connected && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your wallet to play.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 22\n    }, this), connected && !currentMatch && renderMatchmaking(), connected && currentMatch && matchStatus === \"waiting\" && renderWaiting(), connected && currentMatch && (matchStatus === \"ready\" || matchStatus === \"racing\" || matchStatus === \"finished\") && renderRace(), connected && currentMatch && matchStatus === \"finished\" && renderChat()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 517,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ldBRgIm4aiKEkJ9uI+DoTqytkhA=\", false, function () {\n  return [useConnection, useWallet];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","sentences","useConnection","useWallet","WalletMultiButton","LAMPORTS_PER_SOL","PublicKey","SystemProgram","Transaction","socket","anchor","initializeEscrow","joinAndDeposit","depositToEscrow","cancelEscrow","resolveEscrow","idl","jsxDEV","_jsxDEV","Fragment","_Fragment","PROGRAM_ID","metadata","address","App","_s","connection","wallet","publicKey","connected","walletAddress","toBase58","providerRef","prov","AnchorProvider","preflightCommitment","setProvider","current","walletBalance","setWalletBalance","getBalance","then","lamports","wager","setWager","openMatches","setOpenMatches","currentMatch","setCurrentMatch","matchStatus","setMatchStatus","sentence","setSentence","inputValue","setInputValue","playerProgress","setPlayerProgress","opponentProgress","setOpponentProgress","countdown","setCountdown","raceResult","setRaceResult","isInputDisabled","setIsInputDisabled","isAccepting","setIsAccepting","opponentWallet","setOpponentWallet","chatMessages","setChatMessages","chatInput","setChatInput","lastProgTime","setLastProgTime","Date","now","lastProg","setLastProg","MAX_CPS","inputRef","API","process","env","REACT_APP_API_URL","connect","on","m","os","id","filter","players","chooseSentence","find","w","progress","winner","progressMap","result","_progressMap$walletAd","_progressMap$opponent","e","console","error","resetGame","removeAllListeners","t","setTimeout","c","clearTimeout","_inputRef$current","focus","Array","from","reduce","a","charCodeAt","length","fetchOpenMatches","res","fetch","json","createMatch","alert","provider","Math","floor","program","Program","nonce","random","escrowPda","findProgramAddress","Buffer","toBuffer","BN","toArrayLike","programId","vaultPda","ixInit","methods","initialize","accounts","escrow","player1","authority","systemProgram","instruction","ixDeposit","deposit","payer","escrowAccount","tx","add","feePayer","blockhash","lastValidBlockHeight","getLatestBlockhash","recentBlockhash","signed","signTransaction","err","message","sig","sendRawTransaction","serialize","skipPreflight","confirmTransaction","signature","method","headers","body","JSON","stringify","amount","Number","creator","feePercent","vault","emit","acceptMatch","pda","accepter","cancelMatch","handleInput","type","preventDefault","val","target","value","rawProg","min","deltaProg","deltaTime","chars","cps","matchId","renderMatchmaking","className","children","fileName","_jsxFileName","lineNumber","columnNumber","step","onChange","onClick","disabled","style","marginTop","map","slice","marginLeft","renderWaiting","renderRace","ref","onPaste","placeholder","autoFocus","left","fontSize","textAlign","color","renderChat","maxHeight","overflowY","msg","i","sender","onKeyDown","key","trim","toFixed","_c","$RefreshReg$"],"sources":["/home/kokoi/sol-wager-app/frontend/src/App.jsx"],"sourcesContent":["// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport {\n  LAMPORTS_PER_SOL,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n} from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport {\n  initializeEscrow,\n  joinAndDeposit,\n  depositToEscrow,\n  cancelEscrow,\n  resolveEscrow,\n} from \"./escrow\";\nimport idl from \"./idl/typeracer_escrow.json\";\n\n// Hard‑coded program ID\nconst PROGRAM_ID = new PublicKey(idl.metadata.address);\n\nexport default function App() {\n  const { connection } = useConnection();\n  const wallet = useWallet();\n  const { publicKey, connected } = wallet;\n  const walletAddress = publicKey?.toBase58() || \"\";\n\n  const providerRef = useRef(null);\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n      });\n      anchor.setProvider(prov);\n      providerRef.current = prov;\n    }\n  }, [connected, connection, wallet]);\n\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then((lamports) => {\n        setWalletBalance(lamports / LAMPORTS_PER_SOL);\n      });\n    }\n  }, [connection, publicKey]);\n\n  // Game state\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n\n  // Race state\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // Chat\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n\n  // Anti‑cheat\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // Socket listeners\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", (m) => setOpenMatches((os) => [...os, m]));\n    socket.on(\"removeMatch\", (id) =>\n      setOpenMatches((os) => os.filter((m) => m.id !== id))\n    );\n    socket.on(\"startMatch\", ({ id, players }) => {\n      if (currentMatch?.id === id) {\n        setMatchStatus(\"ready\");\n        setSentence(chooseSentence(id));\n        setCountdown(3);\n        setOpponentWallet(players.find((w) => w !== walletAddress));\n      }\n    });\n    socket.on(\"opponentProgress\", ({ wallet: w, progress }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({ winner, progressMap }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: winner === walletAddress ? \"win\" : \"lose\" });\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddress] ?? 0);\n        setOpponentProgress(progressMap[opponentWallet] ?? 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", async () => {\n      if (\n        matchStatus === \"finished\" &&\n        raceResult?.result === \"win\" &&\n        currentMatch?.id\n      ) {\n        try {\n          await resolveEscrow(new PublicKey(currentMatch.id), publicKey);\n        } catch (e) {\n          console.error(\"Auto‑claim failed:\", e);\n        }\n      }\n      resetGame();\n    });\n    return () => socket.removeAllListeners();\n  }, [\n    connection,\n    currentMatch,\n    walletAddress,\n    opponentWallet,\n    matchStatus,\n    raceResult,\n    publicKey,\n  ]);\n\n  // Countdown effect\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown((c) => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      inputRef.current?.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // Helpers\n  const chooseSentence = (id) =>\n    sentences[\n      Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) %\n        sentences.length\n    ];\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // ===== createMatch with vault PDA inclusion =====\n  async function createMatch() {\n    if (!connected) return alert(\"Connect your wallet first\");\n    const provider = providerRef.current;\n    if (!provider) return alert(\"Provider not ready\");\n\n    const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n    const program = new anchor.Program(idl, PROGRAM_ID, provider);\n    const nonce = Math.floor(Math.random() * 1_000_000);\n\n    // derive escrow PDA\n    const [escrowPda] = await PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"escrow\"),\n        provider.wallet.publicKey.toBuffer(),\n        new anchor.BN(nonce).toArrayLike(Buffer, \"le\", 8),\n      ],\n      program.programId\n    );\n\n    // derive vault PDA (must match your Rust seed)\n    const [vaultPda] = await PublicKey.findProgramAddress(\n      [Buffer.from(\"escrow_vault\"), escrowPda.toBuffer()],\n      program.programId\n    );\n\n    // init + deposit instructions\n    const ixInit = await program.methods\n      .initialize(new anchor.BN(lamports), new anchor.BN(nonce))\n      .accounts({\n        escrow: escrowPda,\n        player1: provider.wallet.publicKey,\n        authority: provider.wallet.publicKey,\n        systemProgram: SystemProgram.programId,\n      })\n      .instruction();\n\n    const ixDeposit = await program.methods\n      .deposit()\n      .accounts({\n        escrow: escrowPda,\n        payer: provider.wallet.publicKey,\n        escrowAccount: escrowPda,\n        systemProgram: SystemProgram.programId,\n      })\n      .instruction();\n\n    const tx = new Transaction().add(ixInit, ixDeposit);\n    tx.feePayer = provider.wallet.publicKey;\n    const { blockhash, lastValidBlockHeight } =\n      await provider.connection.getLatestBlockhash(\"confirmed\");\n    tx.recentBlockhash = blockhash;\n\n    let signed;\n    try {\n      signed = await provider.wallet.signTransaction(tx);\n    } catch (err) {\n      return alert(\"Signing failed: \" + err.message);\n    }\n\n    try {\n      const sig = await provider.connection.sendRawTransaction(\n        signed.serialize(),\n        { skipPreflight: false, preflightCommitment: \"confirmed\" }\n      );\n      await provider.connection.confirmTransaction(\n        { signature: sig, blockhash, lastValidBlockHeight },\n        \"confirmed\"\n      );\n    } catch (err) {\n      console.error(\"createMatch failed:\", err);\n      return alert(`Failed to create match:\\n${err.message || err}`);\n    }\n\n    // register match with vault\n    const id = escrowPda.toBase58();\n    await fetch(`${API}/wagers`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        id,\n        amount: Number(wager),\n        creator: walletAddress,\n        feePercent: 5,\n        vault: vaultPda.toBase58(),\n      }),\n    });\n    setCurrentMatch({\n      id,\n      amount: Number(wager),\n      creator: walletAddress,\n      vault: vaultPda.toBase58(),\n    });\n    socket.emit(\"joinMatch\", id);\n    setMatchStatus(\"waiting\");\n  }\n\n  // ==== acceptMatch (include vault) ====\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect your wallet first\");\n    setIsAccepting(true);\n    const provider = providerRef.current;\n    const pda = new PublicKey(m.id);\n\n    try {\n      await joinAndDeposit(pda);\n\n      // derive vault PDA\n      const [vaultPda] = await PublicKey.findProgramAddress(\n        [Buffer.from(\"escrow_vault\"), pda.toBuffer()],\n        PROGRAM_ID\n      );\n\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ accepter: walletAddress, vault: vaultPda.toBase58() }),\n      });\n      setCurrentMatch({ ...m, accepter: walletAddress, vault: vaultPda.toBase58() });\n      setMatchStatus(\"ready\");\n      setCountdown(3);\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"acceptMatch failed:\", e);\n      setCurrentMatch(null);\n      alert(`Failed to accept match:\\n${e.message || e}`);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  // ==== cancelMatch, handleInput, renderers unchanged ====\n  async function cancelMatch(m) {\n    try {\n      await cancelEscrow(\n        new PublicKey(m.id),\n        new PublicKey(m.creator),\n        new PublicKey(m.accepter || m.creator)\n      );\n      await fetch(`${API}/wagers/${m.id}/cancel`, { method: \"POST\" });\n      resetGame();\n    } catch (e) {\n      console.error(\"cancelMatch failed:\", e);\n      alert(`Failed to cancel match:\\n${e.message || e}`);\n    }\n  }\n\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: rawProg,\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ winner: walletAddress }),\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: \"win\" });\n    }\n  }\n\n  const renderMatchmaking = () => (\n    <section className=\"matchmaking\">\n      <h2>Create a Match</h2>\n      <label>\n        Wager (SOL):\n        <input\n          type=\"number\"\n          min=\"0.01\"\n          step=\"0.01\"\n          value={wager}\n          onChange={(e) => setWager(e.target.value)}\n        />\n      </label>\n      <button onClick={createMatch} disabled={!wager || wager <= 0}>\n        Create Match\n      </button>\n      <h2 style={{ marginTop: 20 }}>Open Matches</h2>\n      {openMatches.length === 0 ? (\n        <p>No open matches. Create one!</p>\n      ) : (\n        <ul>\n          {openMatches.map((m) => (\n            <li key={m.id}>\n              {m.id.slice(0, 6)}… | {m.amount} SOL{\" \"}\n              {m.creator === walletAddress ? (\n                <button onClick={() => cancelMatch(m)} style={{ marginLeft: 10 }}>\n                  Cancel\n                </button>\n              ) : (\n                <button\n                  onClick={() => acceptMatch(m)}\n                  disabled={!!currentMatch || isAccepting}\n                  style={{ marginLeft: 10 }}\n                >\n                  {isAccepting ? \"Accepting…\" : \"Accept\"}\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </section>\n  );\n\n  const renderWaiting = () => (\n    <section className=\"waiting-section\">\n      <h2>Waiting for opponent…</h2>\n      <button onClick={() => cancelMatch(currentMatch)}>Cancel Match</button>\n    </section>\n  );\n\n  const renderRace = () => (\n    <section className=\"race-section\">\n      {matchStatus === \"ready\" && <h2>Starting in {countdown}</h2>}\n      {matchStatus === \"racing\" && (\n        <>\n          <div className=\"sentence-display\">{sentence}</div>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInput}\n            onPaste={handleInput}\n            placeholder=\"Start typing…\"\n            disabled={isInputDisabled}\n            autoFocus\n          />\n          <div className=\"track\">\n            <div className=\"lane\">\n              <div\n                className=\"car car-player\"\n                style={{ left: `${playerProgress * 100}%` }}\n              >\n                🚗\n              </div>\n            </div>\n            <div className=\"lane\">\n              <div\n                className=\"car car-opponent\"\n                style={{ left: `${opponentProgress * 100}%` }}\n              >\n                🏎️\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"win\" && (\n        <div className=\"results results-win\">\n          <h2 style={{ fontSize: \"2rem\" }}>🏆 You Won!</h2>\n          <button\n            onClick={async () => {\n              try {\n                await resolveEscrow(\n                  new PublicKey(currentMatch.id),\n                  publicKey\n                );\n                resetGame();\n              } catch (e) {\n                console.error(e);\n                alert(\"Payout error: \" + (e.message || e));\n              }\n            }}\n          >\n            Claim Winnings\n          </button>\n        </div>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"lose\" && (\n        <div className=\"results results-lose\" style={{ textAlign: \"center\" }}>\n          <h2 style={{ fontSize: \"2rem\", color: \"#c0392b\" }}>😢 You Lost!</h2>\n          <p>Better luck next time!</p>\n          <button onClick={resetGame}>Back to Matches</button>\n        </div>\n      )}\n    </section>\n  );\n\n  const renderChat = () => (\n    <section className=\"chat-section\">\n      <h2>Chat</h2>\n      <div className=\"chat-messages\" style={{ maxHeight: 150, overflowY: \"auto\" }}>\n        {chatMessages.map((msg, i) => (\n          <p key={i} className={msg.sender === walletAddress ? \"self\" : \"other\"}>\n            <strong>{msg.sender.slice(0, 6)}…:</strong> {msg.message}\n          </p>\n        ))}\n      </div>\n      <input\n        value={chatInput}\n        onChange={(e) => setChatInput(e.target.value)}\n        onKeyDown={(e) =>\n          e.key === \"Enter\" &&\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddress,\n            message: chatInput,\n          }) &&\n          setChatInput(\"\")\n        }\n      />\n      <button\n        onClick={() => {\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddress,\n            message: chatInput,\n          });\n          setChatInput(\"\");\n        }}\n        disabled={!chatInput.trim()}\n      >\n        Send\n      </button>\n    </section>\n  );\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Type Racer</h1>\n        {connected ? (\n          <div className=\"wallet-info\">\n            {walletAddress.slice(0, 6)}… ({walletBalance.toFixed(2)} SOL)\n          </div>\n        ) : (\n          <WalletMultiButton />\n        )}\n      </header>\n\n      {!connected && <p>Please connect your wallet to play.</p>}\n      {connected && !currentMatch && renderMatchmaking()}\n      {connected && currentMatch && matchStatus === \"waiting\" && renderWaiting()}\n      {connected &&\n        currentMatch &&\n        (matchStatus === \"ready\" ||\n         matchStatus === \"racing\" ||\n         matchStatus === \"finished\") &&\n        renderRace()}\n      {connected && currentMatch && matchStatus === \"finished\" && renderChat()}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}