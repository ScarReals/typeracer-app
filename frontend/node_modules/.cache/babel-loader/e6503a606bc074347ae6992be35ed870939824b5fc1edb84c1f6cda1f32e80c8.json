{"ast":null,"code":"var _jsxFileName = \"/home/kokoi/sol-wager-app/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport { AnchorProvider } from \"@coral-xyz/anchor\";\nimport { initializeEscrow, joinAndDeposit, depositToEscrow, resolveEscrow, cancelEscrow } from \"./escrow\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    connection\n  } = useConnection();\n  const wallet = useWallet();\n  const {\n    publicKey,\n    connected\n  } = wallet;\n  const walletConnected = connected;\n  const walletAddress = (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) || \"\";\n\n  // Store our AnchorProvider so we can pass it into escrow.js\n  const providerRef = useRef(null);\n\n  // When the wallet connects, set up AnchorProvider\n  useEffect(() => {\n    if (connected && connection) {\n      const provider = new AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\"\n      });\n      anchor.setProvider(provider);\n      providerRef.current = provider;\n    }\n  }, [connected, connection, wallet]);\n\n  // fetch on‑chain balance\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (!connection || !publicKey) return;\n    connection.getBalance(publicKey).then(lamports => setWalletBalance(lamports / LAMPORTS_PER_SOL)).catch(err => {\n      console.warn(\"Could not fetch wallet balance:\", err);\n    });\n  }, [connection, publicKey]);\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [escrowPda, setEscrowPda] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // Socket listeners\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", ms => setOpenMatches(ms));\n    socket.on(\"newMatch\", m => setOpenMatches(os => [...os, m]));\n    socket.on(\"removeMatch\", id => setOpenMatches(os => os.filter(m => m.id !== id)));\n    socket.on(\"startMatch\", ({\n      id,\n      players\n    }) => {\n      if ((currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.id) === id) {\n        setMatchStatus(\"ready\");\n        setSentence(chooseSentence(id));\n        setCountdown(3);\n        setOpponentWallet(players.find(w => w !== walletAddress));\n      }\n    });\n    socket.on(\"opponentProgress\", ({\n      wallet: w,\n      progress\n    }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({\n      winner,\n      progressMap\n    }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: winner === walletAddress ? \"win\" : \"lose\"\n      });\n      if (progressMap) {\n        var _progressMap$walletAd, _progressMap$opponent;\n        setPlayerProgress((_progressMap$walletAd = progressMap[walletAddress]) !== null && _progressMap$walletAd !== void 0 ? _progressMap$walletAd : 0);\n        setOpponentProgress((_progressMap$opponent = progressMap[opponentWallet]) !== null && _progressMap$opponent !== void 0 ? _progressMap$opponent : 0);\n      }\n    });\n    socket.on(\"chat\", msgs => setChatMessages(msgs));\n    socket.on(\"opponentLeft\", async () => {\n      if (matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && currentMatch !== null && currentMatch !== void 0 && currentMatch.id) {\n        try {\n          const provider = providerRef.current;\n          await resolveEscrow(new PublicKey(currentMatch.id), publicKey, provider);\n        } catch (e) {\n          console.error(\"Auto-claim failed:\", e);\n        }\n      }\n      resetGame();\n    });\n    return () => socket.removeAllListeners();\n  }, [currentMatch, walletAddress, opponentWallet, matchStatus, raceResult, publicKey]);\n\n  // Countdown before race\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown(c => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      var _inputRef$current;\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [countdown, matchStatus]);\n  const chooseSentence = id => {\n    const sum = Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0);\n    return sentences[sum % sentences.length];\n  };\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setEscrowPda(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // ----- CORE ESCROW-RELATED ACTIONS -----\n\n  const createMatch = async () => {\n    if (!walletConnected) return alert(\"Connect wallet\");\n    const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n    const provider = providerRef.current;\n    if (!provider) return alert(\"Provider not initialized\");\n    try {\n      const pda = await initializeEscrow(lamports, provider);\n      await depositToEscrow(pda, provider);\n      setEscrowPda(pda);\n\n      // UI continues instantly!\n      const id = pda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddress,\n          feePercent: 5\n        })\n      });\n      setCurrentMatch({\n        id,\n        amount: Number(wager),\n        creator: walletAddress\n      });\n      socket.emit(\"joinMatch\", id);\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"createMatch failed:\", e);\n      alert(`Failed to create match:\\n${e.message || e}`);\n    }\n  };\n  const acceptMatch = async m => {\n    if (!walletConnected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    const provider = providerRef.current;\n    if (!provider) {\n      setIsAccepting(false);\n      return alert(\"Provider not initialized\");\n    }\n    const pda = new PublicKey(m.id);\n    setEscrowPda(pda);\n    socket.emit(\"joinMatch\", m.id);\n    setCurrentMatch({\n      ...m,\n      accepter: walletAddress\n    });\n    try {\n      await joinAndDeposit(pda, provider);\n\n      // Instantly continue UI!\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          accepter: walletAddress\n        })\n      });\n      setMatchStatus(\"ready\");\n      setCountdown(3);\n    } catch (e) {\n      console.error(\"acceptMatch failed:\", e);\n      alert(`Failed to accept match:\\n${e.message || e}`);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  };\n  const cancelMatch = async m => {\n    const provider = providerRef.current;\n    if (!provider) return alert(\"Provider not initialized\");\n    try {\n      await cancelEscrow(new PublicKey(m.id), new PublicKey(m.creator), new PublicKey(m.accepter || m.creator), provider);\n      await fetch(`${API}/wagers/${m.id}/cancel`, {\n        method: \"POST\"\n      });\n      resetGame();\n    } catch (e) {\n      console.error(\"cancelMatch failed:\", e);\n      alert(`Failed to cancel match:\\n${e.message || e}`);\n    }\n  };\n\n  // Typing input handler\n  const handleInput = e => {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: rawProg\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          winner: walletAddress\n        })\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: \"win\"\n      });\n    }\n  };\n\n  // RENDERERS (unchanged)\n  const renderMatchmaking = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"matchmaking\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Wager (SOL):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0.01\",\n        step: \"0.01\",\n        value: wager,\n        onChange: e => setWager(e.target.value),\n        disabled: !!currentMatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createMatch,\n      disabled: !wager || wager <= 0 || !!currentMatch,\n      children: \"Create Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: 20\n      },\n      children: \"Open Matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), openMatches.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No open matches. Create one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: openMatches.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [m.id.slice(0, 6), \"\\u2026 | \", m.amount, \" SOL\", \" \", m.creator === walletAddress ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cancelMatch(m),\n          style: {\n            marginLeft: 10\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptMatch(m),\n          disabled: !!currentMatch || isAccepting,\n          style: {\n            marginLeft: 10\n          },\n          children: isAccepting ? \"Accepting…\" : \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 17\n        }, this)]\n      }, m.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n  const renderWaiting = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"waiting-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for opponent\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => cancelMatch(currentMatch),\n      children: \"Cancel Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 5\n  }, this);\n  const renderRace = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"race-section\",\n    children: [matchStatus === \"ready\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Starting in \", countdown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 35\n    }, this), matchStatus === \"racing\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence-display\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInput,\n        onPaste: handleInput,\n        placeholder: \"Start typing\\u2026\",\n        disabled: isInputDisabled,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-player\",\n            style: {\n              left: `${playerProgress * 100}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-opponent\",\n            style: {\n              left: `${opponentProgress * 100}%`\n            },\n            children: \"\\uD83C\\uDFCE\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-win\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\"\n        },\n        children: \"\\uD83C\\uDFC6 You Won!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          try {\n            const provider = providerRef.current;\n            await resolveEscrow(new PublicKey(currentMatch.id), publicKey, provider);\n            resetGame();\n          } catch (e) {\n            console.error(e);\n            alert(\"Payout error: \" + (e.message || e));\n          }\n        },\n        children: \"Claim Winnings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 9\n    }, this), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"lose\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-lose\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\",\n          color: \"#c0392b\"\n        },\n        children: \"\\uD83D\\uDE22 You Lost!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Better luck next time!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Back to Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 376,\n    columnNumber: 5\n  }, this);\n  const renderChat = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      style: {\n        maxHeight: 150,\n        overflowY: \"auto\"\n      },\n      children: chatMessages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: msg.sender === walletAddress ? \"self\" : \"other\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender.slice(0, 6), \"\\u2026:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: chatInput,\n      onChange: e => setChatInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && socket.emit(\"message\", {\n        matchId: currentMatch.id,\n        sender: walletAddress,\n        message: chatInput\n      }) && setChatInput(\"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        socket.emit(\"message\", {\n          matchId: currentMatch.id,\n          sender: walletAddress,\n          message: chatInput\n        });\n        setChatInput(\"\");\n      },\n      disabled: !chatInput.trim(),\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 445,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Type Racer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this), walletConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: [walletAddress.slice(0, 6), \"\\u2026 (\", walletBalance.toFixed(2), \" SOL)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this), !walletConnected && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your wallet to play.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 28\n    }, this), walletConnected && !currentMatch && renderMatchmaking(), walletConnected && currentMatch && matchStatus === \"waiting\" && renderWaiting(), walletConnected && currentMatch && (matchStatus === \"ready\" || matchStatus === \"racing\" || matchStatus === \"finished\") && renderRace(), walletConnected && currentMatch && matchStatus === \"finished\" && renderChat()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 487,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9tJFql0SHFU1n5O0kzJu6EO7ols=\", false, function () {\n  return [useConnection, useWallet];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","sentences","useConnection","useWallet","WalletMultiButton","LAMPORTS_PER_SOL","PublicKey","socket","anchor","AnchorProvider","initializeEscrow","joinAndDeposit","depositToEscrow","resolveEscrow","cancelEscrow","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","connection","wallet","publicKey","connected","walletConnected","walletAddress","toBase58","providerRef","provider","preflightCommitment","setProvider","current","walletBalance","setWalletBalance","getBalance","then","lamports","catch","err","console","warn","wager","setWager","openMatches","setOpenMatches","currentMatch","setCurrentMatch","escrowPda","setEscrowPda","matchStatus","setMatchStatus","sentence","setSentence","inputValue","setInputValue","playerProgress","setPlayerProgress","opponentProgress","setOpponentProgress","countdown","setCountdown","raceResult","setRaceResult","isInputDisabled","setIsInputDisabled","isAccepting","setIsAccepting","opponentWallet","setOpponentWallet","chatMessages","setChatMessages","chatInput","setChatInput","inputRef","API","process","env","REACT_APP_API_URL","lastProgTime","setLastProgTime","Date","now","lastProg","setLastProg","MAX_CPS","connect","on","ms","m","os","id","filter","players","chooseSentence","find","w","progress","winner","progressMap","result","_progressMap$walletAd","_progressMap$opponent","msgs","e","error","resetGame","removeAllListeners","t","setTimeout","c","clearTimeout","_inputRef$current","focus","sum","Array","from","reduce","a","charCodeAt","length","fetchOpenMatches","res","fetch","json","createMatch","alert","Math","floor","pda","method","headers","body","JSON","stringify","amount","Number","creator","feePercent","emit","message","acceptMatch","accepter","cancelMatch","handleInput","type","preventDefault","val","target","value","rawProg","min","deltaProg","deltaTime","chars","cps","matchId","renderMatchmaking","className","children","fileName","_jsxFileName","lineNumber","columnNumber","step","onChange","disabled","onClick","style","marginTop","map","slice","marginLeft","renderWaiting","renderRace","ref","onPaste","placeholder","autoFocus","left","fontSize","textAlign","color","renderChat","maxHeight","overflowY","msg","i","sender","onKeyDown","key","trim","toFixed","_c","$RefreshReg$"],"sources":["/home/kokoi/sol-wager-app/frontend/src/App.jsx"],"sourcesContent":["// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey } from \"@solana/web3.js\";\nimport socket from \"./socket\";\n\nimport * as anchor from \"@coral-xyz/anchor\";\nimport { AnchorProvider } from \"@coral-xyz/anchor\";\n\nimport {\n  initializeEscrow,\n  joinAndDeposit,\n  depositToEscrow,\n  resolveEscrow,\n  cancelEscrow,\n} from \"./escrow\";\n\nexport default function App() {\n  const { connection } = useConnection();\n  const wallet = useWallet();\n  const { publicKey, connected } = wallet;\n  const walletConnected = connected;\n  const walletAddress = publicKey?.toBase58() || \"\";\n\n  // Store our AnchorProvider so we can pass it into escrow.js\n  const providerRef = useRef(null);\n\n  // When the wallet connects, set up AnchorProvider\n  useEffect(() => {\n    if (connected && connection) {\n      const provider = new AnchorProvider(\n        connection,\n        wallet,\n        { preflightCommitment: \"confirmed\" }\n      );\n      anchor.setProvider(provider);\n      providerRef.current = provider;\n    }\n  }, [connected, connection, wallet]);\n\n  // fetch on‑chain balance\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (!connection || !publicKey) return;\n    connection\n      .getBalance(publicKey)\n      .then((lamports) => setWalletBalance(lamports / LAMPORTS_PER_SOL))\n      .catch((err) => {\n        console.warn(\"Could not fetch wallet balance:\", err);\n      });\n  }, [connection, publicKey]);\n\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [escrowPda, setEscrowPda] = useState(null);\n\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // Socket listeners\n  useEffect(() => {\n    socket.connect();\n\n    socket.on(\"openMatches\", (ms) => setOpenMatches(ms));\n    socket.on(\"newMatch\", (m) => setOpenMatches((os) => [...os, m]));\n    socket.on(\"removeMatch\", (id) =>\n      setOpenMatches((os) => os.filter((m) => m.id !== id))\n    );\n\n    socket.on(\"startMatch\", ({ id, players }) => {\n      if (currentMatch?.id === id) {\n        setMatchStatus(\"ready\");\n        setSentence(chooseSentence(id));\n        setCountdown(3);\n        setOpponentWallet(players.find((w) => w !== walletAddress));\n      }\n    });\n\n    socket.on(\"opponentProgress\", ({ wallet: w, progress }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n\n    socket.on(\"raceEnd\", ({ winner, progressMap }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: winner === walletAddress ? \"win\" : \"lose\" });\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddress] ?? 0);\n        setOpponentProgress(progressMap[opponentWallet] ?? 0);\n      }\n    });\n\n    socket.on(\"chat\", (msgs) => setChatMessages(msgs));\n\n    socket.on(\"opponentLeft\", async () => {\n      if (\n        matchStatus === \"finished\" &&\n        raceResult?.result === \"win\" &&\n        currentMatch?.id\n      ) {\n        try {\n          const provider = providerRef.current;\n          await resolveEscrow(\n            new PublicKey(currentMatch.id),\n            publicKey,\n            provider\n          );\n        } catch (e) {\n          console.error(\"Auto-claim failed:\", e);\n        }\n      }\n      resetGame();\n    });\n\n    return () => socket.removeAllListeners();\n  }, [\n    currentMatch,\n    walletAddress,\n    opponentWallet,\n    matchStatus,\n    raceResult,\n    publicKey,\n  ]);\n\n  // Countdown before race\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown((c) => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      inputRef.current?.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  const chooseSentence = (id) => {\n    const sum = Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0);\n    return sentences[sum % sentences.length];\n  };\n\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setEscrowPda(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // ----- CORE ESCROW-RELATED ACTIONS -----\n\n  const createMatch = async () => {\n    if (!walletConnected) return alert(\"Connect wallet\");\n    const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n    const provider = providerRef.current;\n    if (!provider) return alert(\"Provider not initialized\");\n\n    try {\n      const pda = await initializeEscrow(lamports, provider);\n      await depositToEscrow(pda, provider);\n      setEscrowPda(pda);\n\n      // UI continues instantly!\n      const id = pda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddress,\n          feePercent: 5,\n        }),\n      });\n      setCurrentMatch({ id, amount: Number(wager), creator: walletAddress });\n      socket.emit(\"joinMatch\", id);\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"createMatch failed:\", e);\n      alert(`Failed to create match:\\n${e.message || e}`);\n    }\n  };\n\n  const acceptMatch = async (m) => {\n    if (!walletConnected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    const provider = providerRef.current;\n    if (!provider) {\n      setIsAccepting(false);\n      return alert(\"Provider not initialized\");\n    }\n\n    const pda = new PublicKey(m.id);\n    setEscrowPda(pda);\n    socket.emit(\"joinMatch\", m.id);\n    setCurrentMatch({ ...m, accepter: walletAddress });\n\n    try {\n      await joinAndDeposit(pda, provider);\n\n      // Instantly continue UI!\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ accepter: walletAddress }),\n      });\n      setMatchStatus(\"ready\");\n      setCountdown(3);\n    } catch (e) {\n      console.error(\"acceptMatch failed:\", e);\n      alert(`Failed to accept match:\\n${e.message || e}`);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  };\n\n  const cancelMatch = async (m) => {\n    const provider = providerRef.current;\n    if (!provider) return alert(\"Provider not initialized\");\n\n    try {\n      await cancelEscrow(\n        new PublicKey(m.id),\n        new PublicKey(m.creator),\n        new PublicKey(m.accepter || m.creator),\n        provider\n      );\n      await fetch(`${API}/wagers/${m.id}/cancel`, { method: \"POST\" });\n      resetGame();\n    } catch (e) {\n      console.error(\"cancelMatch failed:\", e);\n      alert(`Failed to cancel match:\\n${e.message || e}`);\n    }\n  };\n\n  // Typing input handler\n  const handleInput = (e) => {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: rawProg,\n    });\n\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ winner: walletAddress }),\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: \"win\" });\n    }\n  };\n\n  // RENDERERS (unchanged)\n  const renderMatchmaking = () => (\n    <section className=\"matchmaking\">\n      <h2>Create a Match</h2>\n      <label>\n        Wager (SOL):\n        <input\n          type=\"number\"\n          min=\"0.01\"\n          step=\"0.01\"\n          value={wager}\n          onChange={(e) => setWager(e.target.value)}\n          disabled={!!currentMatch}\n        />\n      </label>\n      <button\n        onClick={createMatch}\n        disabled={!wager || wager <= 0 || !!currentMatch}\n      >\n        Create Match\n      </button>\n      <h2 style={{ marginTop: 20 }}>Open Matches</h2>\n      {openMatches.length === 0 ? (\n        <p>No open matches. Create one!</p>\n      ) : (\n        <ul>\n          {openMatches.map((m) => (\n            <li key={m.id}>\n              {m.id.slice(0, 6)}… | {m.amount} SOL{\" \"}\n              {m.creator === walletAddress ? (\n                <button\n                  onClick={() => cancelMatch(m)}\n                  style={{ marginLeft: 10 }}\n                >\n                  Cancel\n                </button>\n              ) : (\n                <button\n                  onClick={() => acceptMatch(m)}\n                  disabled={!!currentMatch || isAccepting}\n                  style={{ marginLeft: 10 }}\n                >\n                  {isAccepting ? \"Accepting…\" : \"Accept\"}\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </section>\n  );\n\n  const renderWaiting = () => (\n    <section className=\"waiting-section\">\n      <h2>Waiting for opponent…</h2>\n      <button onClick={() => cancelMatch(currentMatch)}>Cancel Match</button>\n    </section>\n  );\n\n  const renderRace = () => (\n    <section className=\"race-section\">\n      {matchStatus === \"ready\" && <h2>Starting in {countdown}</h2>}\n      {matchStatus === \"racing\" && (\n        <>\n          <div className=\"sentence-display\">{sentence}</div>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInput}\n            onPaste={handleInput}\n            placeholder=\"Start typing…\"\n            disabled={isInputDisabled}\n            autoFocus\n          />\n          <div className=\"track\">\n            <div className=\"lane\">\n              <div\n                className=\"car car-player\"\n                style={{ left: `${playerProgress * 100}%` }}\n              >\n                🚗\n              </div>\n            </div>\n            <div className=\"lane\">\n              <div\n                className=\"car car-opponent\"\n                style={{ left: `${opponentProgress * 100}%` }}\n              >\n                🏎️\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"win\" && (\n        <div className=\"results results-win\">\n          <h2 style={{ fontSize: \"2rem\" }}>🏆 You Won!</h2>\n          <button\n            onClick={async () => {\n              try {\n                const provider = providerRef.current;\n                await resolveEscrow(\n                  new PublicKey(currentMatch.id),\n                  publicKey,\n                  provider\n                );\n                resetGame();\n              } catch (e) {\n                console.error(e);\n                alert(\"Payout error: \" + (e.message || e));\n              }\n            }}\n          >\n            Claim Winnings\n          </button>\n        </div>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"lose\" && (\n        <div className=\"results results-lose\" style={{ textAlign: \"center\" }}>\n          <h2 style={{ fontSize: \"2rem\", color: \"#c0392b\" }}>😢 You Lost!</h2>\n          <p>Better luck next time!</p>\n          <button onClick={resetGame}>Back to Matches</button>\n        </div>\n      )}\n    </section>\n  );\n\n  const renderChat = () => (\n    <section className=\"chat-section\">\n      <h2>Chat</h2>\n      <div\n        className=\"chat-messages\"\n        style={{ maxHeight: 150, overflowY: \"auto\" }}\n      >\n        {chatMessages.map((msg, i) => (\n          <p key={i} className={msg.sender === walletAddress ? \"self\" : \"other\"}>\n            <strong>{msg.sender.slice(0, 6)}…:</strong> {msg.message}\n          </p>\n        ))}\n      </div>\n      <input\n        value={chatInput}\n        onChange={(e) => setChatInput(e.target.value)}\n        onKeyDown={(e) =>\n          e.key === \"Enter\" &&\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddress,\n            message: chatInput,\n          }) &&\n          setChatInput(\"\")\n        }\n      />\n      <button\n        onClick={() => {\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddress,\n            message: chatInput,\n          });\n          setChatInput(\"\");\n        }}\n        disabled={!chatInput.trim()}\n      >\n        Send\n      </button>\n    </section>\n  );\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Type Racer</h1>\n        {walletConnected ? (\n          <div className=\"wallet-info\">\n            {walletAddress.slice(0, 6)}… ({walletBalance.toFixed(2)} SOL)\n          </div>\n        ) : (\n          <WalletMultiButton />\n        )}\n      </header>\n\n      {!walletConnected && <p>Please connect your wallet to play.</p>}\n      {walletConnected && !currentMatch && renderMatchmaking()}\n      {walletConnected &&\n        currentMatch &&\n        matchStatus === \"waiting\" &&\n        renderWaiting()}\n      {walletConnected &&\n        currentMatch &&\n        (matchStatus === \"ready\" ||\n          matchStatus === \"racing\" ||\n          matchStatus === \"finished\") &&\n        renderRace()}\n      {walletConnected && currentMatch && matchStatus === \"finished\" && renderChat()}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}