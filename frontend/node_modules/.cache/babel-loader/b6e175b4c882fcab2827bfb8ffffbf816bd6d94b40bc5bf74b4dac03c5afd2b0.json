{"ast":null,"code":"import * as anchor from \"@coral-xyz/anchor\";\nimport { getProgram } from \"./solana\";\nexport async function initializeEscrow(wagerLamports) {\n  const program = getProgram();\n  const walletPk = program.provider.wallet.publicKey;\n  const nonce = new anchor.BN(Math.floor(Math.random() * Number.MAX_SAFE_INTEGER), 10, \"le\");\n  const [escrowPda] = await anchor.web3.PublicKey.findProgramAddress([Buffer.from(\"escrow\"), walletPk.toBuffer(), nonce.toArrayLike(Buffer, \"le\", 8)], program.programId);\n  try {\n    const tx = await program.methods.initialize(new anchor.BN(wagerLamports), nonce).accounts({\n      escrow: escrowPda,\n      player1: walletPk,\n      authority: walletPk,\n      systemProgram: anchor.web3.SystemProgram.programId\n    }).transaction();\n    const sig = await program.provider.send(tx, [], {\n      skipPreflight: true\n    });\n    console.log(\"[escrow.js] Sent initialize tx (no confirmation!)\", sig);\n  } catch (e) {\n    console.error(\"initializeEscrow failed:\", e);\n    // DO NOT throw!\n  }\n  return escrowPda;\n}\nexport async function joinEscrow(escrowPda) {\n  const program = getProgram();\n  try {\n    const tx = await program.methods.join().accounts({\n      escrow: escrowPda,\n      player2: program.provider.wallet.publicKey\n    }).transaction();\n    const sig = await program.provider.send(tx, [], {\n      skipPreflight: true\n    });\n    console.log(\"[escrow.js] Sent join tx (no confirmation!)\", sig);\n  } catch (e) {\n    console.error(\"joinEscrow failed:\", e);\n  }\n}\nexport async function depositToEscrow(escrowPda) {\n  const program = getProgram();\n  try {\n    const tx = await program.methods.deposit().accounts({\n      escrow: escrowPda,\n      payer: program.provider.wallet.publicKey,\n      escrowAccount: escrowPda,\n      systemProgram: anchor.web3.SystemProgram.programId\n    }).transaction();\n    const sig = await program.provider.send(tx, [], {\n      skipPreflight: true\n    });\n    console.log(\"[escrow.js] Sent deposit tx (no confirmation!)\", sig);\n  } catch (e) {\n    console.error(\"depositToEscrow failed:\", e);\n  }\n}\nexport async function resolveEscrow(escrowPda, winnerPubkey) {\n  const program = getProgram();\n  const house = new anchor.web3.PublicKey(\"A32Burni3cYyFAqjZM3CvCrStAKRFCfftk196Xfpx9Hs\");\n  try {\n    const tx = await program.methods.resolve(winnerPubkey).accounts({\n      escrow: escrowPda,\n      winner: winnerPubkey,\n      house,\n      escrowAccount: escrowPda,\n      authority: program.provider.wallet.publicKey\n    }).transaction();\n    const sig = await program.provider.send(tx, [], {\n      skipPreflight: true\n    });\n    console.log(\"[escrow.js] Sent resolve tx (no confirmation!)\", sig);\n  } catch (e) {\n    console.error(\"resolveEscrow failed:\", e);\n  }\n}\nexport async function cancelEscrow(escrowPda, player1, player2) {\n  const program = getProgram();\n  try {\n    const tx = await program.methods.cancel().accounts({\n      escrow: escrowPda,\n      player1,\n      player2,\n      escrowAccount: escrowPda,\n      authority: program.provider.wallet.publicKey\n    }).transaction();\n    const sig = await program.provider.send(tx, [], {\n      skipPreflight: true\n    });\n    console.log(\"[escrow.js] Sent cancel tx (no confirmation!)\", sig);\n  } catch (e) {\n    console.error(\"cancelEscrow failed:\", e);\n  }\n}","map":{"version":3,"names":["anchor","getProgram","initializeEscrow","wagerLamports","program","walletPk","provider","wallet","publicKey","nonce","BN","Math","floor","random","Number","MAX_SAFE_INTEGER","escrowPda","web3","PublicKey","findProgramAddress","Buffer","from","toBuffer","toArrayLike","programId","tx","methods","initialize","accounts","escrow","player1","authority","systemProgram","SystemProgram","transaction","sig","send","skipPreflight","console","log","e","error","joinEscrow","join","player2","depositToEscrow","deposit","payer","escrowAccount","resolveEscrow","winnerPubkey","house","resolve","winner","cancelEscrow","cancel"],"sources":["/home/kokoi/sol-wager-app/frontend/src/escrow.js"],"sourcesContent":["import * as anchor from \"@coral-xyz/anchor\";\nimport { getProgram } from \"./solana\";\n\nexport async function initializeEscrow(wagerLamports) {\n  const program = getProgram();\n  const walletPk = program.provider.wallet.publicKey;\n  const nonce = new anchor.BN(\n    Math.floor(Math.random() * Number.MAX_SAFE_INTEGER),\n    10,\n    \"le\"\n  );\n  const [escrowPda] = await anchor.web3.PublicKey.findProgramAddress(\n    [\n      Buffer.from(\"escrow\"),\n      walletPk.toBuffer(),\n      nonce.toArrayLike(Buffer, \"le\", 8),\n    ],\n    program.programId\n  );\n  try {\n    const tx = await program.methods\n      .initialize(new anchor.BN(wagerLamports), nonce)\n      .accounts({\n        escrow: escrowPda,\n        player1: walletPk,\n        authority: walletPk,\n        systemProgram: anchor.web3.SystemProgram.programId,\n      })\n      .transaction();\n    const sig = await program.provider.send(tx, [], { skipPreflight: true });\n    console.log(\"[escrow.js] Sent initialize tx (no confirmation!)\", sig);\n  } catch (e) {\n    console.error(\"initializeEscrow failed:\", e);\n    // DO NOT throw!\n  }\n  return escrowPda;\n}\n\nexport async function joinEscrow(escrowPda) {\n  const program = getProgram();\n  try {\n    const tx = await program.methods\n      .join()\n      .accounts({\n        escrow: escrowPda,\n        player2: program.provider.wallet.publicKey,\n      })\n      .transaction();\n    const sig = await program.provider.send(tx, [], { skipPreflight: true });\n    console.log(\"[escrow.js] Sent join tx (no confirmation!)\", sig);\n  } catch (e) {\n    console.error(\"joinEscrow failed:\", e);\n  }\n}\n\nexport async function depositToEscrow(escrowPda) {\n  const program = getProgram();\n  try {\n    const tx = await program.methods\n      .deposit()\n      .accounts({\n        escrow: escrowPda,\n        payer: program.provider.wallet.publicKey,\n        escrowAccount: escrowPda,\n        systemProgram: anchor.web3.SystemProgram.programId,\n      })\n      .transaction();\n    const sig = await program.provider.send(tx, [], { skipPreflight: true });\n    console.log(\"[escrow.js] Sent deposit tx (no confirmation!)\", sig);\n  } catch (e) {\n    console.error(\"depositToEscrow failed:\", e);\n  }\n}\n\nexport async function resolveEscrow(escrowPda, winnerPubkey) {\n  const program = getProgram();\n  const house = new anchor.web3.PublicKey(\n    \"A32Burni3cYyFAqjZM3CvCrStAKRFCfftk196Xfpx9Hs\"\n  );\n  try {\n    const tx = await program.methods\n      .resolve(winnerPubkey)\n      .accounts({\n        escrow: escrowPda,\n        winner: winnerPubkey,\n        house,\n        escrowAccount: escrowPda,\n        authority: program.provider.wallet.publicKey,\n      })\n      .transaction();\n    const sig = await program.provider.send(tx, [], { skipPreflight: true });\n    console.log(\"[escrow.js] Sent resolve tx (no confirmation!)\", sig);\n  } catch (e) {\n    console.error(\"resolveEscrow failed:\", e);\n  }\n}\n\nexport async function cancelEscrow(escrowPda, player1, player2) {\n  const program = getProgram();\n  try {\n    const tx = await program.methods\n      .cancel()\n      .accounts({\n        escrow: escrowPda,\n        player1,\n        player2,\n        escrowAccount: escrowPda,\n        authority: program.provider.wallet.publicKey,\n      })\n      .transaction();\n    const sig = await program.provider.send(tx, [], { skipPreflight: true });\n    console.log(\"[escrow.js] Sent cancel tx (no confirmation!)\", sig);\n  } catch (e) {\n    console.error(\"cancelEscrow failed:\", e);\n  }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,MAAM,MAAM,mBAAmB;AAC3C,SAASC,UAAU,QAAQ,UAAU;AAErC,OAAO,eAAeC,gBAAgBA,CAACC,aAAa,EAAE;EACpD,MAAMC,OAAO,GAAGH,UAAU,CAAC,CAAC;EAC5B,MAAMI,QAAQ,GAAGD,OAAO,CAACE,QAAQ,CAACC,MAAM,CAACC,SAAS;EAClD,MAAMC,KAAK,GAAG,IAAIT,MAAM,CAACU,EAAE,CACzBC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGC,MAAM,CAACC,gBAAgB,CAAC,EACnD,EAAE,EACF,IACF,CAAC;EACD,MAAM,CAACC,SAAS,CAAC,GAAG,MAAMhB,MAAM,CAACiB,IAAI,CAACC,SAAS,CAACC,kBAAkB,CAChE,CACEC,MAAM,CAACC,IAAI,CAAC,QAAQ,CAAC,EACrBhB,QAAQ,CAACiB,QAAQ,CAAC,CAAC,EACnBb,KAAK,CAACc,WAAW,CAACH,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CACnC,EACDhB,OAAO,CAACoB,SACV,CAAC;EACD,IAAI;IACF,MAAMC,EAAE,GAAG,MAAMrB,OAAO,CAACsB,OAAO,CAC7BC,UAAU,CAAC,IAAI3B,MAAM,CAACU,EAAE,CAACP,aAAa,CAAC,EAAEM,KAAK,CAAC,CAC/CmB,QAAQ,CAAC;MACRC,MAAM,EAAEb,SAAS;MACjBc,OAAO,EAAEzB,QAAQ;MACjB0B,SAAS,EAAE1B,QAAQ;MACnB2B,aAAa,EAAEhC,MAAM,CAACiB,IAAI,CAACgB,aAAa,CAACT;IAC3C,CAAC,CAAC,CACDU,WAAW,CAAC,CAAC;IAChB,MAAMC,GAAG,GAAG,MAAM/B,OAAO,CAACE,QAAQ,CAAC8B,IAAI,CAACX,EAAE,EAAE,EAAE,EAAE;MAAEY,aAAa,EAAE;IAAK,CAAC,CAAC;IACxEC,OAAO,CAACC,GAAG,CAAC,mDAAmD,EAAEJ,GAAG,CAAC;EACvE,CAAC,CAAC,OAAOK,CAAC,EAAE;IACVF,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAED,CAAC,CAAC;IAC5C;EACF;EACA,OAAOxB,SAAS;AAClB;AAEA,OAAO,eAAe0B,UAAUA,CAAC1B,SAAS,EAAE;EAC1C,MAAMZ,OAAO,GAAGH,UAAU,CAAC,CAAC;EAC5B,IAAI;IACF,MAAMwB,EAAE,GAAG,MAAMrB,OAAO,CAACsB,OAAO,CAC7BiB,IAAI,CAAC,CAAC,CACNf,QAAQ,CAAC;MACRC,MAAM,EAAEb,SAAS;MACjB4B,OAAO,EAAExC,OAAO,CAACE,QAAQ,CAACC,MAAM,CAACC;IACnC,CAAC,CAAC,CACD0B,WAAW,CAAC,CAAC;IAChB,MAAMC,GAAG,GAAG,MAAM/B,OAAO,CAACE,QAAQ,CAAC8B,IAAI,CAACX,EAAE,EAAE,EAAE,EAAE;MAAEY,aAAa,EAAE;IAAK,CAAC,CAAC;IACxEC,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEJ,GAAG,CAAC;EACjE,CAAC,CAAC,OAAOK,CAAC,EAAE;IACVF,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAED,CAAC,CAAC;EACxC;AACF;AAEA,OAAO,eAAeK,eAAeA,CAAC7B,SAAS,EAAE;EAC/C,MAAMZ,OAAO,GAAGH,UAAU,CAAC,CAAC;EAC5B,IAAI;IACF,MAAMwB,EAAE,GAAG,MAAMrB,OAAO,CAACsB,OAAO,CAC7BoB,OAAO,CAAC,CAAC,CACTlB,QAAQ,CAAC;MACRC,MAAM,EAAEb,SAAS;MACjB+B,KAAK,EAAE3C,OAAO,CAACE,QAAQ,CAACC,MAAM,CAACC,SAAS;MACxCwC,aAAa,EAAEhC,SAAS;MACxBgB,aAAa,EAAEhC,MAAM,CAACiB,IAAI,CAACgB,aAAa,CAACT;IAC3C,CAAC,CAAC,CACDU,WAAW,CAAC,CAAC;IAChB,MAAMC,GAAG,GAAG,MAAM/B,OAAO,CAACE,QAAQ,CAAC8B,IAAI,CAACX,EAAE,EAAE,EAAE,EAAE;MAAEY,aAAa,EAAE;IAAK,CAAC,CAAC;IACxEC,OAAO,CAACC,GAAG,CAAC,gDAAgD,EAAEJ,GAAG,CAAC;EACpE,CAAC,CAAC,OAAOK,CAAC,EAAE;IACVF,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAED,CAAC,CAAC;EAC7C;AACF;AAEA,OAAO,eAAeS,aAAaA,CAACjC,SAAS,EAAEkC,YAAY,EAAE;EAC3D,MAAM9C,OAAO,GAAGH,UAAU,CAAC,CAAC;EAC5B,MAAMkD,KAAK,GAAG,IAAInD,MAAM,CAACiB,IAAI,CAACC,SAAS,CACrC,8CACF,CAAC;EACD,IAAI;IACF,MAAMO,EAAE,GAAG,MAAMrB,OAAO,CAACsB,OAAO,CAC7B0B,OAAO,CAACF,YAAY,CAAC,CACrBtB,QAAQ,CAAC;MACRC,MAAM,EAAEb,SAAS;MACjBqC,MAAM,EAAEH,YAAY;MACpBC,KAAK;MACLH,aAAa,EAAEhC,SAAS;MACxBe,SAAS,EAAE3B,OAAO,CAACE,QAAQ,CAACC,MAAM,CAACC;IACrC,CAAC,CAAC,CACD0B,WAAW,CAAC,CAAC;IAChB,MAAMC,GAAG,GAAG,MAAM/B,OAAO,CAACE,QAAQ,CAAC8B,IAAI,CAACX,EAAE,EAAE,EAAE,EAAE;MAAEY,aAAa,EAAE;IAAK,CAAC,CAAC;IACxEC,OAAO,CAACC,GAAG,CAAC,gDAAgD,EAAEJ,GAAG,CAAC;EACpE,CAAC,CAAC,OAAOK,CAAC,EAAE;IACVF,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAED,CAAC,CAAC;EAC3C;AACF;AAEA,OAAO,eAAec,YAAYA,CAACtC,SAAS,EAAEc,OAAO,EAAEc,OAAO,EAAE;EAC9D,MAAMxC,OAAO,GAAGH,UAAU,CAAC,CAAC;EAC5B,IAAI;IACF,MAAMwB,EAAE,GAAG,MAAMrB,OAAO,CAACsB,OAAO,CAC7B6B,MAAM,CAAC,CAAC,CACR3B,QAAQ,CAAC;MACRC,MAAM,EAAEb,SAAS;MACjBc,OAAO;MACPc,OAAO;MACPI,aAAa,EAAEhC,SAAS;MACxBe,SAAS,EAAE3B,OAAO,CAACE,QAAQ,CAACC,MAAM,CAACC;IACrC,CAAC,CAAC,CACD0B,WAAW,CAAC,CAAC;IAChB,MAAMC,GAAG,GAAG,MAAM/B,OAAO,CAACE,QAAQ,CAAC8B,IAAI,CAACX,EAAE,EAAE,EAAE,EAAE;MAAEY,aAAa,EAAE;IAAK,CAAC,CAAC;IACxEC,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAEJ,GAAG,CAAC;EACnE,CAAC,CAAC,OAAOK,CAAC,EAAE;IACVF,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAED,CAAC,CAAC;EAC1C;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}