{"ast":null,"code":"import * as anchor from \"@coral-xyz/anchor\";\nimport idl from \"./idl/typeracer_escrow.json\";\nconst {\n  REACT_APP_SOLANA_RPC,\n  REACT_APP_ESCROW_PROGRAM_ID\n} = process.env;\nexport function setProvider(wallet) {\n  const rpc = process.env.REACT_APP_SOLANA_RPC;\n  console.log(\"Using RPC:\", rpc);\n  const connection = new anchor.web3.Connection(REACT_APP_SOLANA_RPC, \"confirmed\");\n  const provider = new anchor.AnchorProvider(connection, wallet, anchor.AnchorProvider.defaultOptions());\n  anchor.setProvider(provider);\n}\nexport function getProgram() {\n  const provider = anchor.getProvider();\n  if (!provider) throw new Error(\"Provider not set\");\n  const programId = new anchor.web3.PublicKey(REACT_APP_ESCROW_PROGRAM_ID);\n\n  // FULL‑FORMAT IDL binding—no shorthand here\n  return new anchor.Program(idl, programId, provider);\n}","map":{"version":3,"names":["anchor","idl","REACT_APP_SOLANA_RPC","REACT_APP_ESCROW_PROGRAM_ID","process","env","setProvider","wallet","rpc","console","log","connection","web3","Connection","provider","AnchorProvider","defaultOptions","getProgram","getProvider","Error","programId","PublicKey","Program"],"sources":["/home/kokoi/sol-wager-app/frontend/src/solana.js"],"sourcesContent":["import * as anchor from \"@coral-xyz/anchor\";\nimport idl from \"./idl/typeracer_escrow.json\";\n\nconst {\n  REACT_APP_SOLANA_RPC,\n  REACT_APP_ESCROW_PROGRAM_ID,\n} = process.env;\n\nexport function setProvider(wallet) {\n  const rpc = process.env.REACT_APP_SOLANA_RPC;\n  console.log(\"Using RPC:\", rpc);  \n  const connection = new anchor.web3.Connection(\n    REACT_APP_SOLANA_RPC,\n    \"confirmed\"\n  );\n  const provider = new anchor.AnchorProvider(\n    connection,\n    wallet,\n    anchor.AnchorProvider.defaultOptions()\n  );\n  anchor.setProvider(provider);\n}\n\nexport function getProgram() {\n  const provider = anchor.getProvider();\n  if (!provider) throw new Error(\"Provider not set\");\n\n  const programId = new anchor.web3.PublicKey(\n    REACT_APP_ESCROW_PROGRAM_ID\n  );\n\n  // FULL‑FORMAT IDL binding—no shorthand here\n  return new anchor.Program(idl, programId, provider);\n}\n"],"mappings":"AAAA,OAAO,KAAKA,MAAM,MAAM,mBAAmB;AAC3C,OAAOC,GAAG,MAAM,6BAA6B;AAE7C,MAAM;EACJC,oBAAoB;EACpBC;AACF,CAAC,GAAGC,OAAO,CAACC,GAAG;AAEf,OAAO,SAASC,WAAWA,CAACC,MAAM,EAAE;EAClC,MAAMC,GAAG,GAAGJ,OAAO,CAACC,GAAG,CAACH,oBAAoB;EAC5CO,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,GAAG,CAAC;EAC9B,MAAMG,UAAU,GAAG,IAAIX,MAAM,CAACY,IAAI,CAACC,UAAU,CAC3CX,oBAAoB,EACpB,WACF,CAAC;EACD,MAAMY,QAAQ,GAAG,IAAId,MAAM,CAACe,cAAc,CACxCJ,UAAU,EACVJ,MAAM,EACNP,MAAM,CAACe,cAAc,CAACC,cAAc,CAAC,CACvC,CAAC;EACDhB,MAAM,CAACM,WAAW,CAACQ,QAAQ,CAAC;AAC9B;AAEA,OAAO,SAASG,UAAUA,CAAA,EAAG;EAC3B,MAAMH,QAAQ,GAAGd,MAAM,CAACkB,WAAW,CAAC,CAAC;EACrC,IAAI,CAACJ,QAAQ,EAAE,MAAM,IAAIK,KAAK,CAAC,kBAAkB,CAAC;EAElD,MAAMC,SAAS,GAAG,IAAIpB,MAAM,CAACY,IAAI,CAACS,SAAS,CACzClB,2BACF,CAAC;;EAED;EACA,OAAO,IAAIH,MAAM,CAACsB,OAAO,CAACrB,GAAG,EAAEmB,SAAS,EAAEN,QAAQ,CAAC;AACrD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}