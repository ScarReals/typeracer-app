{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.verifyMessageSignature = verifyMessageSignature;\nexports.verifySignMessage = verifySignMessage;\nconst ed25519_1 = require(\"@noble/curves/ed25519\");\nconst util_js_1 = require(\"./util.js\");\n/**\n * TODO: docs\n */\nfunction verifyMessageSignature({\n  message,\n  signedMessage,\n  signature,\n  publicKey\n}) {\n  // TODO: implement https://github.com/solana-labs/solana/blob/master/docs/src/proposals/off-chain-message-signing.md\n  return (0, util_js_1.bytesEqual)(message, signedMessage) && ed25519_1.ed25519.verify(signature, signedMessage, publicKey);\n}\n/**\n * TODO: docs\n */\nfunction verifySignMessage(input, output) {\n  const {\n    message,\n    account: {\n      publicKey\n    }\n  } = input;\n  const {\n    signedMessage,\n    signature\n  } = output;\n  return verifyMessageSignature({\n    message,\n    signedMessage,\n    signature,\n    publicKey: publicKey\n  });\n}","map":{"version":3,"names":["exports","verifyMessageSignature","verifySignMessage","ed25519_1","require","util_js_1","message","signedMessage","signature","publicKey","bytesEqual","ed25519","verify","input","output","account"],"sources":["/home/kokoi/typeracer-app/frontend/node_modules/@solana/wallet-standard-util/src/signMessage.ts"],"sourcesContent":["import { ed25519 } from '@noble/curves/ed25519';\nimport type { SolanaSignMessageInput, SolanaSignMessageOutput } from '@solana/wallet-standard-features';\nimport { bytesEqual } from './util.js';\n\n/**\n * TODO: docs\n */\nexport function verifyMessageSignature({\n    message,\n    signedMessage,\n    signature,\n    publicKey,\n}: {\n    message: Uint8Array;\n    signedMessage: Uint8Array;\n    signature: Uint8Array;\n    publicKey: Uint8Array;\n}): boolean {\n    // TODO: implement https://github.com/solana-labs/solana/blob/master/docs/src/proposals/off-chain-message-signing.md\n    return bytesEqual(message, signedMessage) && ed25519.verify(signature, signedMessage, publicKey);\n}\n\n/**\n * TODO: docs\n */\nexport function verifySignMessage(input: SolanaSignMessageInput, output: SolanaSignMessageOutput): boolean {\n    const {\n        message,\n        account: { publicKey },\n    } = input;\n    const { signedMessage, signature } = output;\n    return verifyMessageSignature({ message, signedMessage, signature, publicKey: publicKey as Uint8Array });\n}\n"],"mappings":";;;;;AAOAA,OAAA,CAAAC,sBAAA,GAAAA,sBAAA;AAkBAD,OAAA,CAAAE,iBAAA,GAAAA,iBAAA;AAzBA,MAAAC,SAAA,GAAAC,OAAA;AAEA,MAAAC,SAAA,GAAAD,OAAA;AAEA;;;AAGA,SAAgBH,sBAAsBA,CAAC;EACnCK,OAAO;EACPC,aAAa;EACbC,SAAS;EACTC;AAAS,CAMZ;EACG;EACA,OAAO,IAAAJ,SAAA,CAAAK,UAAU,EAACJ,OAAO,EAAEC,aAAa,CAAC,IAAIJ,SAAA,CAAAQ,OAAO,CAACC,MAAM,CAACJ,SAAS,EAAED,aAAa,EAAEE,SAAS,CAAC;AACpG;AAEA;;;AAGA,SAAgBP,iBAAiBA,CAACW,KAA6B,EAAEC,MAA+B;EAC5F,MAAM;IACFR,OAAO;IACPS,OAAO,EAAE;MAAEN;IAAS;EAAE,CACzB,GAAGI,KAAK;EACT,MAAM;IAAEN,aAAa;IAAEC;EAAS,CAAE,GAAGM,MAAM;EAC3C,OAAOb,sBAAsB,CAAC;IAAEK,OAAO;IAAEC,aAAa;IAAEC,SAAS;IAAEC,SAAS,EAAEA;EAAuB,CAAE,CAAC;AAC5G","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}