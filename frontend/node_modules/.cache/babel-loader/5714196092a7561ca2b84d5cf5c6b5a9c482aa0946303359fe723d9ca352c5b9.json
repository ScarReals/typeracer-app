{"ast":null,"code":"// src/solana.js\nimport * as anchor from \"@coral-xyz/anchor\";\nimport { Connection, PublicKey } from \"@solana/web3.js\";\nimport idl from \"./idl/typeracer_escrow.json\";\n\n// Solana RPC URL from .env\nconst RPC_URL = process.env.REACT_APP_SOLANA_RPC_URL;\n\n// Connection to Solana\nconst connection = new Connection(RPC_URL, \"confirmed\");\n\n// Get your program ID from the IDL (can be either .address or .metadata.address)\nconst PROGRAM_ID = new PublicKey(idl.address || idl.metadata && idl.metadata.address);\n\n// NOTE: You DO NOT instantiate a provider or program here! You do it with the user wallet in App.jsx\n\nexport { connection, PROGRAM_ID };","map":{"version":3,"names":["anchor","Connection","PublicKey","idl","RPC_URL","process","env","REACT_APP_SOLANA_RPC_URL","connection","PROGRAM_ID","address","metadata"],"sources":["/home/kokoi/sol-wager-app/frontend/src/solana.js"],"sourcesContent":["// src/solana.js\nimport * as anchor from \"@coral-xyz/anchor\";\nimport { Connection, PublicKey } from \"@solana/web3.js\";\nimport idl from \"./idl/typeracer_escrow.json\";\n\n// Solana RPC URL from .env\nconst RPC_URL = process.env.REACT_APP_SOLANA_RPC_URL;\n\n// Connection to Solana\nconst connection = new Connection(RPC_URL, \"confirmed\");\n\n// Get your program ID from the IDL (can be either .address or .metadata.address)\nconst PROGRAM_ID = new PublicKey(idl.address || (idl.metadata && idl.metadata.address));\n\n// NOTE: You DO NOT instantiate a provider or program here! You do it with the user wallet in App.jsx\n\nexport { connection, PROGRAM_ID };\n"],"mappings":"AAAA;AACA,OAAO,KAAKA,MAAM,MAAM,mBAAmB;AAC3C,SAASC,UAAU,EAAEC,SAAS,QAAQ,iBAAiB;AACvD,OAAOC,GAAG,MAAM,6BAA6B;;AAE7C;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB;;AAEpD;AACA,MAAMC,UAAU,GAAG,IAAIP,UAAU,CAACG,OAAO,EAAE,WAAW,CAAC;;AAEvD;AACA,MAAMK,UAAU,GAAG,IAAIP,SAAS,CAACC,GAAG,CAACO,OAAO,IAAKP,GAAG,CAACQ,QAAQ,IAAIR,GAAG,CAACQ,QAAQ,CAACD,OAAQ,CAAC;;AAEvF;;AAEA,SAASF,UAAU,EAAEC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}