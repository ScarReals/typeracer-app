{"ast":null,"code":"var _jsxFileName = \"/home/kokoi/sol-wager-app/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey, SystemProgram, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport idl from \"./idl/typeracer_escrow.json\";\nimport { setProvider } from \"./solana\";\nimport { buildInitializeAndDepositIxns, buildJoinAndDepositIxn, buildCancelIxn, buildResolveIxn } from \"./escrow\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    connection\n  } = useConnection();\n  const wallet = useWallet();\n  const {\n    publicKey,\n    connected\n  } = wallet;\n  const walletAddress = (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) || \"\";\n\n  // wire up AnchorProvider + solana.js provider\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\"\n      });\n      anchor.setProvider(prov);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n\n  // wallet balance\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then(lamports => {\n        setWalletBalance(lamports / LAMPORTS_PER_SOL);\n      });\n    }\n  }, [connection, publicKey]);\n\n  // game state\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n\n  // race state\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // chat\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // anti-cheat\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // helpers\n  const chooseSentence = id => sentences[Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length];\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // ───────── SOCKET LISTENERS: SETUP ONLY ONCE ─────────────\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", m => setOpenMatches(os => [...os, m]));\n    socket.on(\"removeMatch\", id => setOpenMatches(os => os.filter(m => m.id !== id)));\n    socket.on(\"startMatch\", ({\n      id,\n      players\n    }) => {\n      if ((currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.id) === id) {\n        setMatchStatus(\"ready\");\n        setSentence(chooseSentence(id));\n        setCountdown(3);\n        setOpponentWallet(players.find(w => w !== walletAddress));\n      }\n    });\n    socket.on(\"opponentProgress\", ({\n      wallet: w,\n      progress\n    }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({\n      winner,\n      progressMap\n    }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: winner === walletAddress ? \"win\" : \"lose\"\n      });\n      if (progressMap) {\n        var _progressMap$walletAd, _progressMap$opponent;\n        setPlayerProgress((_progressMap$walletAd = progressMap[walletAddress]) !== null && _progressMap$walletAd !== void 0 ? _progressMap$walletAd : 0);\n        setOpponentProgress((_progressMap$opponent = progressMap[opponentWallet]) !== null && _progressMap$opponent !== void 0 ? _progressMap$opponent : 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", async () => {\n      if (matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && currentMatch !== null && currentMatch !== void 0 && currentMatch.id) {\n        resetGame();\n      }\n      resetGame();\n    });\n    fetchOpenMatches(); // As backup\n\n    return () => {\n      socket.removeAllListeners();\n      socket.disconnect();\n    };\n  }, []); // <---- Empty dependency array: listeners only set up ONCE\n\n  // countdown effect\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown(c => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      var _inputRef$current;\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // createMatch: initialize + deposit\n  async function createMatch() {\n    if (!connected) return alert(\"Connect wallet\");\n    const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n    const {\n      ixInit,\n      ixDeposit,\n      escrowPda\n    } = await buildInitializeAndDepositIxns(lamports);\n    const tx = new Transaction().add(ixInit, ixDeposit);\n    const sig = await wallet.sendTransaction(tx, connection);\n    console.log(\"createMatch tx:\", sig);\n\n    // register on server\n    const id = escrowPda.toBase58();\n    await fetch(`${API}/wagers`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id,\n        amount: Number(wager),\n        creator: walletAddress,\n        feePercent: 5,\n        vault: escrowPda.toBase58() // <--- REQUIRED for backend!\n      })\n    });\n    setCurrentMatch({\n      id,\n      amount: Number(wager),\n      creator: walletAddress\n    });\n    socket.emit(\"joinMatch\", id);\n    setMatchStatus(\"waiting\");\n  }\n\n  // acceptMatch: join + deposit + start race\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(new PublicKey(m.id));\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n\n      // immediately start for player 2\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(m.id));\n      setCountdown(3);\n\n      // notify server\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          accepter: walletAddress\n        })\n      });\n      setCurrentMatch({\n        ...m,\n        accepter: walletAddress\n      });\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"Accept error:\", e);\n      alert(\"Accept error:\\n\" + e.message);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  // cancelMatch: cancel escrow\n  async function cancelMatch(m) {\n    try {\n      const ix = await buildCancelIxn(new PublicKey(m.id), new PublicKey(m.creator), new PublicKey(m.accepter || m.creator));\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n      await fetch(`${API}/wagers/${m.id}/cancel`, {\n        method: \"POST\"\n      });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel error:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n\n  // handle typing input\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: rawProg\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          winner: walletAddress\n        })\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: \"win\"\n      });\n    }\n  }\n\n  // UI renderers\n  const renderMatchmaking = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"matchmaking\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Wager (SOL):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0.01\",\n        step: \"0.01\",\n        value: wager,\n        onChange: e => setWager(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createMatch,\n      disabled: !wager || wager <= 0,\n      children: \"Create Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: 20\n      },\n      children: \"Open Matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), openMatches.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No open matches. Create one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: openMatches.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [m.id.slice(0, 6), \"\\u2026 | \", m.amount, \" SOL\", \" \", m.creator === walletAddress ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cancelMatch(m),\n          style: {\n            marginLeft: 10\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptMatch(m),\n          disabled: !!currentMatch || isAccepting,\n          style: {\n            marginLeft: 10\n          },\n          children: isAccepting ? \"Accepting…\" : \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 17\n        }, this)]\n      }, m.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }, this);\n  const renderWaiting = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"waiting-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for opponent\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => cancelMatch(currentMatch),\n      children: \"Cancel Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 333,\n    columnNumber: 5\n  }, this);\n  const renderRace = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"race-section\",\n    children: [matchStatus === \"ready\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Starting in \", countdown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 35\n    }, this), matchStatus === \"racing\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence-display\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInput,\n        onPaste: handleInput,\n        placeholder: \"Start typing\\u2026\",\n        disabled: isInputDisabled,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-player\",\n            style: {\n              left: `${playerProgress * 100}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-opponent\",\n            style: {\n              left: `${opponentProgress * 100}%`\n            },\n            children: \"\\uD83C\\uDFCE\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-win\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\"\n        },\n        children: \"\\uD83C\\uDFC6 You Won!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          try {\n            const ix = await buildResolveIxn(new PublicKey(currentMatch.id), publicKey);\n            const sig = await wallet.sendTransaction(new Transaction().add(ix), connection);\n            await connection.confirmTransaction(sig, \"confirmed\");\n            resetGame();\n          } catch (e) {\n            console.error(\"Claim error:\", e);\n            alert(\"Payout error:\\n\" + e.message);\n          }\n        },\n        children: \"Claim Winnings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }, this), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"lose\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-lose\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\",\n          color: \"#c0392b\"\n        },\n        children: \"\\uD83D\\uDE22 You Lost!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Better luck next time!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Back to Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 340,\n    columnNumber: 5\n  }, this);\n  const renderChat = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      style: {\n        maxHeight: 150,\n        overflowY: \"auto\"\n      },\n      children: chatMessages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: msg.sender === walletAddress ? \"self\" : \"other\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender.slice(0, 6), \"\\u2026:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: chatInput,\n      onChange: e => setChatInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && socket.emit(\"message\", {\n        matchId: currentMatch.id,\n        sender: walletAddress,\n        message: chatInput\n      }) && setChatInput(\"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        socket.emit(\"message\", {\n          matchId: currentMatch.id,\n          sender: walletAddress,\n          message: chatInput\n        });\n        setChatInput(\"\");\n      },\n      disabled: !chatInput.trim(),\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 412,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Type Racer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this), connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: [walletAddress.slice(0, 6), \"\\u2026 (\", walletBalance.toFixed(2), \" SOL)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this), !connected && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your wallet to play.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 22\n    }, this), connected && !currentMatch && renderMatchmaking(), connected && currentMatch && matchStatus === \"waiting\" && renderWaiting(), connected && currentMatch && (matchStatus === \"ready\" || matchStatus === \"racing\" || matchStatus === \"finished\") && renderRace(), connected && currentMatch && matchStatus === \"finished\" && renderChat()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 454,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EyRLO56gPIrL5vKLsC3H/teYJsA=\", false, function () {\n  return [useConnection, useWallet];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","sentences","useConnection","useWallet","WalletMultiButton","LAMPORTS_PER_SOL","PublicKey","SystemProgram","Transaction","socket","anchor","idl","setProvider","buildInitializeAndDepositIxns","buildJoinAndDepositIxn","buildCancelIxn","buildResolveIxn","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","connection","wallet","publicKey","connected","walletAddress","toBase58","prov","AnchorProvider","preflightCommitment","commitment","walletBalance","setWalletBalance","getBalance","then","lamports","wager","setWager","openMatches","setOpenMatches","currentMatch","setCurrentMatch","matchStatus","setMatchStatus","sentence","setSentence","inputValue","setInputValue","playerProgress","setPlayerProgress","opponentProgress","setOpponentProgress","countdown","setCountdown","raceResult","setRaceResult","isInputDisabled","setIsInputDisabled","isAccepting","setIsAccepting","opponentWallet","setOpponentWallet","chatMessages","setChatMessages","chatInput","setChatInput","inputRef","API","process","env","REACT_APP_API_URL","lastProgTime","setLastProgTime","Date","now","lastProg","setLastProg","MAX_CPS","chooseSentence","id","Array","from","reduce","a","c","charCodeAt","length","fetchOpenMatches","res","fetch","json","resetGame","connect","on","m","os","filter","players","find","w","progress","winner","progressMap","result","_progressMap$walletAd","_progressMap$opponent","removeAllListeners","disconnect","t","setTimeout","clearTimeout","_inputRef$current","current","focus","createMatch","alert","Math","floor","ixInit","ixDeposit","escrowPda","tx","add","sig","sendTransaction","console","log","method","headers","body","JSON","stringify","amount","Number","creator","feePercent","vault","emit","acceptMatch","ix","accepter","e","error","message","cancelMatch","handleInput","type","preventDefault","val","target","value","rawProg","min","deltaProg","deltaTime","chars","cps","matchId","renderMatchmaking","className","children","fileName","_jsxFileName","lineNumber","columnNumber","step","onChange","onClick","disabled","style","marginTop","map","slice","marginLeft","renderWaiting","renderRace","ref","onPaste","placeholder","autoFocus","left","fontSize","confirmTransaction","textAlign","color","renderChat","maxHeight","overflowY","msg","i","sender","onKeyDown","key","trim","toFixed","_c","$RefreshReg$"],"sources":["/home/kokoi/sol-wager-app/frontend/src/App.jsx"],"sourcesContent":["// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport {\n  LAMPORTS_PER_SOL,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n} from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport idl from \"./idl/typeracer_escrow.json\";\nimport { setProvider } from \"./solana\";\nimport {\n  buildInitializeAndDepositIxns,\n  buildJoinAndDepositIxn,\n  buildCancelIxn,\n  buildResolveIxn,\n} from \"./escrow\";\n\nexport default function App() {\n  const { connection } = useConnection();\n  const wallet = useWallet();\n  const { publicKey, connected } = wallet;\n  const walletAddress = publicKey?.toBase58() || \"\";\n\n  // wire up AnchorProvider + solana.js provider\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\",\n      });\n      anchor.setProvider(prov);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n\n  // wallet balance\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then((lamports) => {\n        setWalletBalance(lamports / LAMPORTS_PER_SOL);\n      });\n    }\n  }, [connection, publicKey]);\n\n  // game state\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n\n  // race state\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // chat\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // anti-cheat\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // helpers\n  const chooseSentence = (id) =>\n    sentences[\n      Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) %\n        sentences.length\n    ];\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch {}\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // ───────── SOCKET LISTENERS: SETUP ONLY ONCE ─────────────\n  useEffect(() => {\n    socket.connect();\n\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", (m) => setOpenMatches((os) => [...os, m]));\n    socket.on(\"removeMatch\", (id) =>\n      setOpenMatches((os) => os.filter((m) => m.id !== id))\n    );\n    socket.on(\"startMatch\", ({ id, players }) => {\n      if (currentMatch?.id === id) {\n        setMatchStatus(\"ready\");\n        setSentence(chooseSentence(id));\n        setCountdown(3);\n        setOpponentWallet(players.find((w) => w !== walletAddress));\n      }\n    });\n    socket.on(\"opponentProgress\", ({ wallet: w, progress }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({ winner, progressMap }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: winner === walletAddress ? \"win\" : \"lose\" });\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddress] ?? 0);\n        setOpponentProgress(progressMap[opponentWallet] ?? 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", async () => {\n      if (\n        matchStatus === \"finished\" &&\n        raceResult?.result === \"win\" &&\n        currentMatch?.id\n      ) {\n        resetGame();\n      }\n      resetGame();\n    });\n\n    fetchOpenMatches(); // As backup\n\n    return () => {\n      socket.removeAllListeners();\n      socket.disconnect();\n    };\n  }, []); // <---- Empty dependency array: listeners only set up ONCE\n\n  // countdown effect\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown((c) => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      inputRef.current?.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // createMatch: initialize + deposit\n  async function createMatch() {\n    if (!connected) return alert(\"Connect wallet\");\n    const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n    const { ixInit, ixDeposit, escrowPda } =\n      await buildInitializeAndDepositIxns(lamports);\n\n    const tx = new Transaction().add(ixInit, ixDeposit);\n    const sig = await wallet.sendTransaction(tx, connection);\n    console.log(\"createMatch tx:\", sig);\n\n    // register on server\n    const id = escrowPda.toBase58();\n    await fetch(`${API}/wagers`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        id,\n        amount: Number(wager),\n        creator: walletAddress,\n        feePercent: 5,\n        vault: escrowPda.toBase58(), // <--- REQUIRED for backend!\n      }),\n    });\n    setCurrentMatch({ id, amount: Number(wager), creator: walletAddress });\n    socket.emit(\"joinMatch\", id);\n    setMatchStatus(\"waiting\");\n  }\n\n  // acceptMatch: join + deposit + start race\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(new PublicKey(m.id));\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n\n      // immediately start for player 2\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(m.id));\n      setCountdown(3);\n\n      // notify server\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ accepter: walletAddress }),\n      });\n      setCurrentMatch({ ...m, accepter: walletAddress });\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"Accept error:\", e);\n      alert(\"Accept error:\\n\" + e.message);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  // cancelMatch: cancel escrow\n  async function cancelMatch(m) {\n    try {\n      const ix = await buildCancelIxn(\n        new PublicKey(m.id),\n        new PublicKey(m.creator),\n        new PublicKey(m.accepter || m.creator)\n      );\n      await wallet.sendTransaction(new Transaction().add(ix), connection);\n\n      await fetch(`${API}/wagers/${m.id}/cancel`, { method: \"POST\" });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel error:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n\n  // handle typing input\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: rawProg,\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ winner: walletAddress }),\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: \"win\" });\n    }\n  }\n\n  // UI renderers\n  const renderMatchmaking = () => (\n    <section className=\"matchmaking\">\n      <h2>Create a Match</h2>\n      <label>\n        Wager (SOL):\n        <input\n          type=\"number\"\n          min=\"0.01\"\n          step=\"0.01\"\n          value={wager}\n          onChange={(e) => setWager(Number(e.target.value))}\n        />\n      </label>\n      <button onClick={createMatch} disabled={!wager || wager <= 0}>\n        Create Match\n      </button>\n      <h2 style={{ marginTop: 20 }}>Open Matches</h2>\n      {openMatches.length === 0 ? (\n        <p>No open matches. Create one!</p>\n      ) : (\n        <ul>\n          {openMatches.map((m) => (\n            <li key={m.id}>\n              {m.id.slice(0, 6)}… | {m.amount} SOL{\" \"}\n              {m.creator === walletAddress ? (\n                <button\n                  onClick={() => cancelMatch(m)}\n                  style={{ marginLeft: 10 }}\n                >\n                  Cancel\n                </button>\n              ) : (\n                <button\n                  onClick={() => acceptMatch(m)}\n                  disabled={!!currentMatch || isAccepting}\n                  style={{ marginLeft: 10 }}\n                >\n                  {isAccepting ? \"Accepting…\" : \"Accept\"}\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </section>\n  );\n\n  const renderWaiting = () => (\n    <section className=\"waiting-section\">\n      <h2>Waiting for opponent…</h2>\n      <button onClick={() => cancelMatch(currentMatch)}>Cancel Match</button>\n    </section>\n  );\n\n  const renderRace = () => (\n    <section className=\"race-section\">\n      {matchStatus === \"ready\" && <h2>Starting in {countdown}</h2>}\n      {matchStatus === \"racing\" && (\n        <>\n          <div className=\"sentence-display\">{sentence}</div>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInput}\n            onPaste={handleInput}\n            placeholder=\"Start typing…\"\n            disabled={isInputDisabled}\n            autoFocus\n          />\n          <div className=\"track\">\n            <div className=\"lane\">\n              <div\n                className=\"car car-player\"\n                style={{ left: `${playerProgress * 100}%` }}\n              >\n                🚗\n              </div>\n            </div>\n            <div className=\"lane\">\n              <div\n                className=\"car car-opponent\"\n                style={{ left: `${opponentProgress * 100}%` }}\n              >\n                🏎️\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"win\" && (\n        <div className=\"results results-win\">\n          <h2 style={{ fontSize: \"2rem\" }}>🏆 You Won!</h2>\n          <button\n            onClick={async () => {\n              try {\n                const ix = await buildResolveIxn(\n                  new PublicKey(currentMatch.id),\n                  publicKey\n                );\n                const sig = await wallet.sendTransaction(\n                  new Transaction().add(ix),\n                  connection\n                );\n                await connection.confirmTransaction(sig, \"confirmed\");\n                resetGame();\n              } catch (e) {\n                console.error(\"Claim error:\", e);\n                alert(\"Payout error:\\n\" + e.message);\n              }\n            }}\n          >\n            Claim Winnings\n          </button>\n        </div>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"lose\" && (\n        <div className=\"results results-lose\" style={{ textAlign: \"center\" }}>\n          <h2 style={{ fontSize: \"2rem\", color: \"#c0392b\" }}>😢 You Lost!</h2>\n          <p>Better luck next time!</p>\n          <button onClick={resetGame}>Back to Matches</button>\n        </div>\n      )}\n    </section>\n  );\n\n  const renderChat = () => (\n    <section className=\"chat-section\">\n      <h2>Chat</h2>\n      <div\n        className=\"chat-messages\"\n        style={{ maxHeight: 150, overflowY: \"auto\" }}\n      >\n        {chatMessages.map((msg, i) => (\n          <p key={i} className={msg.sender === walletAddress ? \"self\" : \"other\"}>\n            <strong>{msg.sender.slice(0, 6)}…:</strong> {msg.message}\n          </p>\n        ))}\n      </div>\n      <input\n        value={chatInput}\n        onChange={(e) => setChatInput(e.target.value)}\n        onKeyDown={(e) =>\n          e.key === \"Enter\" &&\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddress,\n            message: chatInput,\n          }) &&\n          setChatInput(\"\")\n        }\n      />\n      <button\n        onClick={() => {\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddress,\n            message: chatInput,\n          });\n          setChatInput(\"\");\n        }}\n        disabled={!chatInput.trim()}\n      >\n        Send\n      </button>\n    </section>\n  );\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Type Racer</h1>\n        {connected ? (\n          <div className=\"wallet-info\">\n            {walletAddress.slice(0, 6)}… ({walletBalance.toFixed(2)} SOL)\n          </div>\n        ) : (\n          <WalletMultiButton />\n        )}\n      </header>\n\n      {!connected && <p>Please connect your wallet to play.</p>}\n      {connected && !currentMatch && renderMatchmaking()}\n      {connected && currentMatch && matchStatus === \"waiting\" && renderWaiting()}\n      {connected &&\n        currentMatch &&\n        (matchStatus === \"ready\" ||\n         matchStatus === \"racing\" ||\n         matchStatus === \"finished\") &&\n        renderRace()}\n      {connected && currentMatch && matchStatus === \"finished\" && renderChat()}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}