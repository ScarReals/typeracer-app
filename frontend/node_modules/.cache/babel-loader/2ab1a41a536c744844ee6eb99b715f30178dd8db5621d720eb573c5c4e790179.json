{"ast":null,"code":"var _jsxFileName = \"/home/kokoi/sol-wager-app/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { LAMPORTS_PER_SOL, PublicKey, Transaction } from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport idl from \"./idl/typeracer_escrow.json\";\nimport { setProvider } from \"./solana\";\nimport { buildInitializeAndDepositIxns, buildJoinAndDepositIxn, buildCancelIxn, buildResolveIxn } from \"./escrow\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    connection\n  } = useConnection();\n  const wallet = useWallet();\n  const {\n    publicKey,\n    connected\n  } = wallet;\n  const walletAddress = (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) || \"\";\n\n  // Keep provider up to date\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\"\n      });\n      anchor.setProvider(prov);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n\n  // Wallet balance\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection.getBalance(publicKey).then(lamports => setWalletBalance(lamports / LAMPORTS_PER_SOL)).catch(err => {\n        console.error(\"Failed to fetch balance:\", err);\n      });\n    }\n  }, [connection, publicKey]);\n\n  // Game state\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n\n  // Race state\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // Chat\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // Anti‑cheat\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // Socket listeners\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", m => setOpenMatches(os => [...os, m]));\n    socket.on(\"removeMatch\", id => setOpenMatches(os => os.filter(m => m.id !== id)));\n    socket.on(\"startMatch\", ({\n      id,\n      players\n    }) => {\n      setCurrentMatch({\n        id,\n        amount: (currentMatch === null || currentMatch === void 0 ? void 0 : currentMatch.amount) || 0,\n        creator: players[0],\n        accepter: players[1]\n      });\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(id));\n      setCountdown(3);\n      setOpponentWallet(players.find(w => w !== walletAddress));\n    });\n    socket.on(\"opponentProgress\", ({\n      wallet: w,\n      progress\n    }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({\n      winner,\n      progressMap\n    }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: winner === walletAddress ? \"win\" : \"lose\"\n      });\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddress] || 0);\n        setOpponentProgress(progressMap[opponentWallet] || 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", () => resetGame());\n    fetchOpenMatches();\n    return () => {\n      socket.disconnect();\n      socket.removeAllListeners();\n    };\n  }, [walletAddress, currentMatch, opponentWallet]);\n\n  // Countdown effect\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown(c => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      var _inputRef$current;\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // Helpers\n  const chooseSentence = id => sentences[Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length];\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch (err) {\n      console.error(\"Failed to fetch open matches:\", err);\n    }\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // ─── CREATE MATCH ────────────────────────────────────────\n  async function createMatch() {\n    if (!connected) return alert(\"Connect wallet\");\n    try {\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const nonce = Math.floor(Math.random() * 1e6);\n      const {\n        ixInit,\n        ixDeposit,\n        escrowPda\n      } = await buildInitializeAndDepositIxns(lamports, publicKey, nonce);\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      const sig = await wallet.sendTransaction(tx, connection);\n      console.log(\"createMatch tx sig:\", sig);\n      try {\n        const {\n          blockhash,\n          lastValidBlockHeight\n        } = await connection.getLatestBlockhash(\"confirmed\");\n        await connection.confirmTransaction({\n          signature: sig,\n          blockhash,\n          lastValidBlockHeight\n        }, {\n          commitment: \"confirmed\"\n        });\n        console.log(\"createMatch confirmed:\", sig);\n      } catch (err) {\n        console.warn(\"createMatch confirmation timeout; continuing:\", err);\n      }\n      const id = escrowPda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddress,\n          feePercent: 5,\n          vault: id,\n          nonce\n        })\n      });\n      setCurrentMatch({\n        id,\n        amount: Number(wager),\n        creator: walletAddress,\n        nonce\n      });\n      socket.emit(\"joinMatch\", id);\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"Create match failed:\", e);\n      alert(\"Create match failed:\\n\" + (e.message || e));\n    }\n  }\n\n  // ─── ACCEPT MATCH ────────────────────────────────────────\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(new PublicKey(m.id));\n      const tx = new Transaction().add(ix);\n      const sig = await wallet.sendTransaction(tx, connection);\n      await connection.confirmTransaction(sig, \"confirmed\");\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(m.id));\n      setCountdown(3);\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          accepter: walletAddress,\n          vault: m.id\n        })\n      });\n      setCurrentMatch({\n        ...m,\n        accepter: walletAddress\n      });\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"Accept error:\", e);\n      alert(\"Accept error:\\n\" + e.message);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  // ─── CANCEL MATCH ────────────────────────────────────────\n  async function cancelMatch(m) {\n    try {\n      const escrowPda = new PublicKey(m.id);\n      const ix = buildCancelIxn(escrowPda, publicKey, new PublicKey(m.accepter || m.creator));\n      const tx = new Transaction().add(ix);\n      await wallet.sendTransaction(tx, connection);\n      await fetch(`${API}/wagers/${m.id}/cancel`, {\n        method: \"POST\"\n      });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel error:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n\n  // ─── INPUT HANDLING ───────────────────────────────────────\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: rawProg\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          winner: walletAddress\n        })\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({\n        result: \"win\"\n      });\n    }\n  }\n\n  // ─── RENDER FUNCTIONS ────────────────────────────────────\n  const renderMatchmaking = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"matchmaking\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Wager (SOL):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0.01\",\n        step: \"0.01\",\n        value: wager,\n        onChange: e => setWager(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createMatch,\n      disabled: !wager || wager <= 0,\n      children: \"Create Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: 20\n      },\n      children: \"Open Matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), openMatches.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No open matches. Create one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: openMatches.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [m.id.slice(0, 6), \"\\u2026 | \", m.amount, \" SOL\", \" \", m.creator === walletAddress ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cancelMatch(m),\n          style: {\n            marginLeft: 10\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptMatch(m),\n          disabled: !!currentMatch || isAccepting,\n          style: {\n            marginLeft: 10\n          },\n          children: isAccepting ? \"Accepting…\" : \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 17\n        }, this)]\n      }, m.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n  const renderWaiting = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"waiting-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for opponent\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => cancelMatch(currentMatch),\n      children: \"Cancel Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 5\n  }, this);\n  const renderRace = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"race-section\",\n    children: [matchStatus === \"ready\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Starting in \", countdown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 35\n    }, this), matchStatus === \"racing\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentence-display\",\n        children: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInput,\n        onPaste: handleInput,\n        placeholder: \"Start typing\\u2026\",\n        disabled: isInputDisabled,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-player\",\n            style: {\n              left: `${playerProgress * 100}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car car-opponent\",\n            style: {\n              left: `${opponentProgress * 100}%`\n            },\n            children: \"\\uD83C\\uDFCE\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"win\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-win\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\"\n        },\n        children: \"\\uD83C\\uDFC6 You Won!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          try {\n            const ix = await buildResolveIxn(new PublicKey(currentMatch.id), publicKey);\n            const tx = new Transaction().add(ix);\n            const sig = await wallet.sendTransaction(tx, connection);\n            await connection.confirmTransaction(sig, \"confirmed\");\n            resetGame();\n          } catch (e) {\n            console.error(\"Resolve error:\", e);\n            alert(\"Payout error:\\n\" + e.message);\n          }\n        },\n        children: \"Claim Winnings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 9\n    }, this), matchStatus === \"finished\" && (raceResult === null || raceResult === void 0 ? void 0 : raceResult.result) === \"lose\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results results-lose\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\",\n          color: \"#c0392b\"\n        },\n        children: \"\\uD83D\\uDE22 You Lost!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Better luck next time!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Back to Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 5\n  }, this);\n  const renderChat = () => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      style: {\n        maxHeight: 150,\n        overflowY: \"auto\"\n      },\n      children: chatMessages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: msg.sender === walletAddress ? \"self\" : \"other\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender.slice(0, 6), \"\\u2026:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: chatInput,\n      onChange: e => setChatInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && socket.emit(\"message\", {\n        matchId: currentMatch.id,\n        sender: walletAddress,\n        message: chatInput\n      }) && setChatInput(\"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        socket.emit(\"message\", {\n          matchId: currentMatch.id,\n          sender: walletAddress,\n          message: chatInput\n        });\n        setChatInput(\"\");\n      },\n      disabled: !chatInput.trim(),\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 429,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Type Racer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this), connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: [walletAddress.slice(0, 6), \"\\u2026 (\", walletBalance.toFixed(2), \" SOL)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this), !connected && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your wallet to play.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 22\n    }, this), connected && !currentMatch && renderMatchmaking(), connected && currentMatch && matchStatus === \"waiting\" && renderWaiting(), connected && currentMatch && [\"ready\", \"racing\", \"finished\"].includes(matchStatus) && renderRace(), connected && currentMatch && matchStatus === \"finished\" && renderChat()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 474,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EyRLO56gPIrL5vKLsC3H/teYJsA=\", false, function () {\n  return [useConnection, useWallet];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","sentences","useConnection","useWallet","WalletMultiButton","LAMPORTS_PER_SOL","PublicKey","Transaction","socket","anchor","idl","setProvider","buildInitializeAndDepositIxns","buildJoinAndDepositIxn","buildCancelIxn","buildResolveIxn","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","connection","wallet","publicKey","connected","walletAddress","toBase58","prov","AnchorProvider","preflightCommitment","commitment","walletBalance","setWalletBalance","getBalance","then","lamports","catch","err","console","error","wager","setWager","openMatches","setOpenMatches","currentMatch","setCurrentMatch","matchStatus","setMatchStatus","sentence","setSentence","inputValue","setInputValue","playerProgress","setPlayerProgress","opponentProgress","setOpponentProgress","countdown","setCountdown","raceResult","setRaceResult","isInputDisabled","setIsInputDisabled","isAccepting","setIsAccepting","opponentWallet","setOpponentWallet","chatMessages","setChatMessages","chatInput","setChatInput","inputRef","API","process","env","REACT_APP_API_URL","lastProgTime","setLastProgTime","Date","now","lastProg","setLastProg","MAX_CPS","connect","on","m","os","id","filter","players","amount","creator","accepter","chooseSentence","find","w","progress","winner","progressMap","result","resetGame","fetchOpenMatches","disconnect","removeAllListeners","t","setTimeout","c","clearTimeout","_inputRef$current","current","focus","Array","from","reduce","a","charCodeAt","length","res","fetch","json","createMatch","alert","Math","floor","nonce","random","ixInit","ixDeposit","escrowPda","tx","add","sig","sendTransaction","log","blockhash","lastValidBlockHeight","getLatestBlockhash","confirmTransaction","signature","warn","method","headers","body","JSON","stringify","Number","feePercent","vault","emit","e","message","acceptMatch","ix","cancelMatch","handleInput","type","preventDefault","val","target","value","rawProg","min","deltaProg","deltaTime","chars","cps","matchId","renderMatchmaking","className","children","fileName","_jsxFileName","lineNumber","columnNumber","step","onChange","onClick","disabled","style","marginTop","map","slice","marginLeft","renderWaiting","renderRace","ref","onPaste","placeholder","autoFocus","left","fontSize","textAlign","color","renderChat","maxHeight","overflowY","msg","i","sender","onKeyDown","key","trim","toFixed","includes","_c","$RefreshReg$"],"sources":["/home/kokoi/sol-wager-app/frontend/src/App.jsx"],"sourcesContent":["// src/App.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport sentences from \"./sentences\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport {\n  LAMPORTS_PER_SOL,\n  PublicKey,\n  Transaction,\n} from \"@solana/web3.js\";\nimport socket from \"./socket\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport idl from \"./idl/typeracer_escrow.json\";\nimport { setProvider } from \"./solana\";\nimport {\n  buildInitializeAndDepositIxns,\n  buildJoinAndDepositIxn,\n  buildCancelIxn,\n  buildResolveIxn,\n} from \"./escrow\";\n\nexport default function App() {\n  const { connection } = useConnection();\n  const wallet = useWallet();\n  const { publicKey, connected } = wallet;\n  const walletAddress = publicKey?.toBase58() || \"\";\n\n  // Keep provider up to date\n  useEffect(() => {\n    if (connected && connection) {\n      const prov = new anchor.AnchorProvider(connection, wallet, {\n        preflightCommitment: \"confirmed\",\n        commitment: \"confirmed\",\n      });\n      anchor.setProvider(prov);\n      setProvider(wallet);\n    }\n  }, [connected, connection, wallet]);\n\n  // Wallet balance\n  const [walletBalance, setWalletBalance] = useState(0);\n  useEffect(() => {\n    if (connection && publicKey) {\n      connection\n        .getBalance(publicKey)\n        .then((lamports) => setWalletBalance(lamports / LAMPORTS_PER_SOL))\n        .catch((err) => {\n          console.error(\"Failed to fetch balance:\", err);\n        });\n    }\n  }, [connection, publicKey]);\n\n  // Game state\n  const [wager, setWager] = useState(1);\n  const [openMatches, setOpenMatches] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [matchStatus, setMatchStatus] = useState(\"waiting\");\n\n  // Race state\n  const [sentence, setSentence] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [playerProgress, setPlayerProgress] = useState(0);\n  const [opponentProgress, setOpponentProgress] = useState(0);\n  const [countdown, setCountdown] = useState(3);\n  const [raceResult, setRaceResult] = useState(null);\n  const [isInputDisabled, setIsInputDisabled] = useState(false);\n  const [isAccepting, setIsAccepting] = useState(false);\n  const [opponentWallet, setOpponentWallet] = useState(null);\n\n  // Chat\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n\n  const inputRef = useRef(null);\n  const API = process.env.REACT_APP_API_URL;\n\n  // Anti‑cheat\n  const [lastProgTime, setLastProgTime] = useState(Date.now());\n  const [lastProg, setLastProg] = useState(0);\n  const MAX_CPS = 20;\n\n  // Socket listeners\n  useEffect(() => {\n    socket.connect();\n\n    socket.on(\"openMatches\", setOpenMatches);\n    socket.on(\"newMatch\", (m) => setOpenMatches((os) => [...os, m]));\n    socket.on(\"removeMatch\", (id) =>\n      setOpenMatches((os) => os.filter((m) => m.id !== id))\n    );\n    socket.on(\"startMatch\", ({ id, players }) => {\n      setCurrentMatch({\n        id,\n        amount: currentMatch?.amount || 0,\n        creator: players[0],\n        accepter: players[1],\n      });\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(id));\n      setCountdown(3);\n      setOpponentWallet(players.find((w) => w !== walletAddress));\n    });\n    socket.on(\"opponentProgress\", ({ wallet: w, progress }) => {\n      if (w !== walletAddress) setOpponentProgress(progress);\n    });\n    socket.on(\"raceEnd\", ({ winner, progressMap }) => {\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: winner === walletAddress ? \"win\" : \"lose\" });\n      if (progressMap) {\n        setPlayerProgress(progressMap[walletAddress] || 0);\n        setOpponentProgress(progressMap[opponentWallet] || 0);\n      }\n    });\n    socket.on(\"chat\", setChatMessages);\n    socket.on(\"opponentLeft\", () => resetGame());\n\n    fetchOpenMatches();\n\n    return () => {\n      socket.disconnect();\n      socket.removeAllListeners();\n    };\n  }, [walletAddress, currentMatch, opponentWallet]);\n\n  // Countdown effect\n  useEffect(() => {\n    if (matchStatus === \"ready\" && countdown > 0) {\n      const t = setTimeout(() => setCountdown((c) => c - 1), 1000);\n      return () => clearTimeout(t);\n    } else if (matchStatus === \"ready\" && countdown === 0) {\n      setMatchStatus(\"racing\");\n      setIsInputDisabled(false);\n      inputRef.current?.focus();\n    }\n  }, [countdown, matchStatus]);\n\n  // Helpers\n  const chooseSentence = (id) =>\n    sentences[\n      Array.from(id).reduce((a, c) => a + c.charCodeAt(0), 0) % sentences.length\n    ];\n  const fetchOpenMatches = async () => {\n    try {\n      const res = await fetch(`${API}/wagers`);\n      setOpenMatches(await res.json());\n    } catch (err) {\n      console.error(\"Failed to fetch open matches:\", err);\n    }\n  };\n  const resetGame = () => {\n    setCurrentMatch(null);\n    setMatchStatus(\"waiting\");\n    setSentence(\"\");\n    setInputValue(\"\");\n    setPlayerProgress(0);\n    setOpponentProgress(0);\n    setCountdown(3);\n    setRaceResult(null);\n    setIsInputDisabled(false);\n    setOpponentWallet(null);\n    setLastProg(0);\n    setLastProgTime(Date.now());\n    fetchOpenMatches();\n  };\n\n  // ─── CREATE MATCH ────────────────────────────────────────\n  async function createMatch() {\n    if (!connected) return alert(\"Connect wallet\");\n    try {\n      const lamports = Math.floor(wager * LAMPORTS_PER_SOL);\n      const nonce = Math.floor(Math.random() * 1e6);\n\n      const { ixInit, ixDeposit, escrowPda } =\n        await buildInitializeAndDepositIxns(lamports, publicKey, nonce);\n\n      const tx = new Transaction().add(ixInit, ixDeposit);\n      const sig = await wallet.sendTransaction(tx, connection);\n      console.log(\"createMatch tx sig:\", sig);\n\n      try {\n        const { blockhash, lastValidBlockHeight } = await connection.getLatestBlockhash(\"confirmed\");\n        await connection.confirmTransaction(\n          { signature: sig, blockhash, lastValidBlockHeight },\n          { commitment: \"confirmed\" }\n        );\n        console.log(\"createMatch confirmed:\", sig);\n      } catch (err) {\n        console.warn(\"createMatch confirmation timeout; continuing:\", err);\n      }\n\n      const id = escrowPda.toBase58();\n      await fetch(`${API}/wagers`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          id,\n          amount: Number(wager),\n          creator: walletAddress,\n          feePercent: 5,\n          vault: id,\n          nonce,\n        }),\n      });\n\n      setCurrentMatch({ id, amount: Number(wager), creator: walletAddress, nonce });\n      socket.emit(\"joinMatch\", id);\n      setMatchStatus(\"waiting\");\n    } catch (e) {\n      console.error(\"Create match failed:\", e);\n      alert(\"Create match failed:\\n\" + (e.message || e));\n    }\n  }\n\n  // ─── ACCEPT MATCH ────────────────────────────────────────\n  async function acceptMatch(m) {\n    if (!connected) return alert(\"Connect wallet\");\n    setIsAccepting(true);\n    try {\n      const ix = await buildJoinAndDepositIxn(new PublicKey(m.id));\n      const tx = new Transaction().add(ix);\n      const sig = await wallet.sendTransaction(tx, connection);\n      await connection.confirmTransaction(sig, \"confirmed\");\n\n      setMatchStatus(\"ready\");\n      setSentence(chooseSentence(m.id));\n      setCountdown(3);\n\n      await fetch(`${API}/wagers/${m.id}/accept`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          accepter: walletAddress,\n          vault: m.id,\n        }),\n      });\n\n      setCurrentMatch({ ...m, accepter: walletAddress });\n      socket.emit(\"joinMatch\", m.id);\n    } catch (e) {\n      console.error(\"Accept error:\", e);\n      alert(\"Accept error:\\n\" + e.message);\n      setCurrentMatch(null);\n    } finally {\n      setIsAccepting(false);\n    }\n  }\n\n  // ─── CANCEL MATCH ────────────────────────────────────────\n  async function cancelMatch(m) {\n    try {\n      const escrowPda = new PublicKey(m.id);\n      const ix = buildCancelIxn(\n        escrowPda,\n        publicKey,\n        new PublicKey(m.accepter || m.creator)\n      );\n      const tx = new Transaction().add(ix);\n      await wallet.sendTransaction(tx, connection);\n      await fetch(`${API}/wagers/${m.id}/cancel`, { method: \"POST\" });\n      resetGame();\n    } catch (e) {\n      console.error(\"Cancel error:\", e);\n      alert(\"Cancel error:\\n\" + e.message);\n    }\n  }\n\n  // ─── INPUT HANDLING ───────────────────────────────────────\n  function handleInput(e) {\n    if (isInputDisabled) return;\n    if (e.type === \"paste\") {\n      e.preventDefault();\n      return;\n    }\n    const now = Date.now();\n    const val = e.target.value;\n    const rawProg = Math.min(1, val.length / sentence.length);\n    const deltaProg = rawProg - lastProg;\n    const deltaTime = (now - lastProgTime) / 1000;\n    const chars = deltaProg * sentence.length;\n    const cps = deltaTime > 0 ? chars / deltaTime : 0;\n    if (cps > MAX_CPS) return;\n    setLastProg(rawProg);\n    setLastProgTime(now);\n    setInputValue(val);\n    setPlayerProgress(rawProg);\n    socket.emit(\"progress\", {\n      matchId: currentMatch.id,\n      wallet: walletAddress,\n      progress: rawProg,\n    });\n    if (val === sentence) {\n      fetch(`${API}/wagers/${currentMatch.id}/complete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ winner: walletAddress }),\n      });\n      setMatchStatus(\"finished\");\n      setIsInputDisabled(true);\n      setRaceResult({ result: \"win\" });\n    }\n  }\n\n  // ─── RENDER FUNCTIONS ────────────────────────────────────\n  const renderMatchmaking = () => (\n    <section className=\"matchmaking\">\n      <h2>Create a Match</h2>\n      <label>\n        Wager (SOL):\n        <input\n          type=\"number\"\n          min=\"0.01\"\n          step=\"0.01\"\n          value={wager}\n          onChange={(e) => setWager(Number(e.target.value))}\n        />\n      </label>\n      <button onClick={createMatch} disabled={!wager || wager <= 0}>\n        Create Match\n      </button>\n      <h2 style={{ marginTop: 20 }}>Open Matches</h2>\n      {openMatches.length === 0 ? (\n        <p>No open matches. Create one!</p>\n      ) : (\n        <ul>\n          {openMatches.map((m) => (\n            <li key={m.id}>\n              {m.id.slice(0, 6)}… | {m.amount} SOL{\" \"}\n              {m.creator === walletAddress ? (\n                <button onClick={() => cancelMatch(m)} style={{ marginLeft: 10 }}>\n                  Cancel\n                </button>\n              ) : (\n                <button\n                  onClick={() => acceptMatch(m)}\n                  disabled={!!currentMatch || isAccepting}\n                  style={{ marginLeft: 10 }}\n                >\n                  {isAccepting ? \"Accepting…\" : \"Accept\"}\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </section>\n  );\n  \n  const renderWaiting = () => (\n    <section className=\"waiting-section\">\n      <h2>Waiting for opponent…</h2>\n      <button onClick={() => cancelMatch(currentMatch)}>Cancel Match</button>\n    </section>\n  );\n  \n  const renderRace = () => (\n    <section className=\"race-section\">\n      {matchStatus === \"ready\" && <h2>Starting in {countdown}</h2>}\n      {matchStatus === \"racing\" && (\n        <>\n          <div className=\"sentence-display\">{sentence}</div>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInput}\n            onPaste={handleInput}\n            placeholder=\"Start typing…\"\n            disabled={isInputDisabled}\n            autoFocus\n          />\n          <div className=\"track\">\n            <div className=\"lane\">\n              <div\n                className=\"car car-player\"\n                style={{ left: `${playerProgress * 100}%` }}\n              >\n                🚗\n              </div>\n            </div>\n            <div className=\"lane\">\n              <div\n                className=\"car car-opponent\"\n                style={{ left: `${opponentProgress * 100}%` }}\n              >\n                🏎️\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"win\" && (\n        <div className=\"results results-win\">\n          <h2 style={{ fontSize: \"2rem\" }}>🏆 You Won!</h2>\n          <button\n            onClick={async () => {\n              try {\n                const ix = await buildResolveIxn(\n                  new PublicKey(currentMatch.id),\n                  publicKey\n                );\n                const tx = new Transaction().add(ix);\n                const sig = await wallet.sendTransaction(tx, connection);\n                await connection.confirmTransaction(sig, \"confirmed\");\n                resetGame();\n              } catch (e) {\n                console.error(\"Resolve error:\", e);\n                alert(\"Payout error:\\n\" + e.message);\n              }\n            }}\n          >\n            Claim Winnings\n          </button>\n        </div>\n      )}\n      {matchStatus === \"finished\" && raceResult?.result === \"lose\" && (\n        <div className=\"results results-lose\" style={{ textAlign: \"center\" }}>\n          <h2 style={{ fontSize: \"2rem\", color: \"#c0392b\" }}>😢 You Lost!</h2>\n          <p>Better luck next time!</p>\n          <button onClick={resetGame}>Back to Matches</button>\n        </div>\n      )}\n    </section>\n  );\n  \n  const renderChat = () => (\n    <section className=\"chat-section\">\n      <h2>Chat</h2>\n      <div\n        className=\"chat-messages\"\n        style={{ maxHeight: 150, overflowY: \"auto\" }}\n      >\n        {chatMessages.map((msg, i) => (\n          <p\n            key={i}\n            className={msg.sender === walletAddress ? \"self\" : \"other\"}\n          >\n            <strong>{msg.sender.slice(0, 6)}…:</strong> {msg.message}\n          </p>\n        ))}\n      </div>\n      <input\n        value={chatInput}\n        onChange={(e) => setChatInput(e.target.value)}\n        onKeyDown={(e) =>\n          e.key === \"Enter\" &&\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddress,\n            message: chatInput,\n          }) &&\n          setChatInput(\"\")\n        }\n      />\n      <button\n        onClick={() => {\n          socket.emit(\"message\", {\n            matchId: currentMatch.id,\n            sender: walletAddress,\n            message: chatInput,\n          });\n          setChatInput(\"\");\n        }}\n        disabled={!chatInput.trim()}\n      >\n        Send\n      </button>\n    </section>\n  );\n  \n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Type Racer</h1>\n        {connected ? (\n          <div className=\"wallet-info\">\n            {walletAddress.slice(0, 6)}… ({walletBalance.toFixed(2)} SOL)\n          </div>\n        ) : (\n          <WalletMultiButton />\n        )}\n      </header>\n  \n      {!connected && <p>Please connect your wallet to play.</p>}\n      {connected && !currentMatch && renderMatchmaking()}\n      {connected && currentMatch && matchStatus === \"waiting\" && renderWaiting()}\n      {connected &&\n        currentMatch &&\n        [\"ready\", \"racing\", \"finished\"].includes(matchStatus) &&\n        renderRace()}\n      {connected && currentMatch && matchStatus === \"finished\" && renderChat()}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}